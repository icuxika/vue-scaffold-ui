var Pc=Object.defineProperty,Jc=Object.defineProperties;var Yc=Object.getOwnPropertyDescriptors;var ei=Object.getOwnPropertySymbols;var Nc=Object.prototype.hasOwnProperty,zc=Object.prototype.propertyIsEnumerable;var ti=(e,t,n)=>t in e?Pc(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,wo=(e,t)=>{for(var n in t||(t={}))Nc.call(t,n)&&ti(e,n,t[n]);if(ei)for(var n of ei(t))zc.call(t,n)&&ti(e,n,t[n]);return e},xo=(e,t)=>Jc(e,Yc(t));const Wc=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerpolicy&&(s.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?s.credentials="include":o.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}};Wc();function Jt(e,t){const n=Object.create(null),r=e.split(",");for(let o=0;o<r.length;o++)n[r[o]]=!0;return t?o=>!!n[o.toLowerCase()]:o=>!!n[o]}const Gc="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Zc=Jt(Gc);function Ma(e){return!!e||e===""}function ws(e){if(q(e)){const t={};for(let n=0;n<e.length;n++){const r=e[n],o=Ee(r)?Uc(r):ws(r);if(o)for(const s in o)t[s]=o[s]}return t}else{if(Ee(e))return e;if(be(e))return e}}const Dc=/;(?![^(]*\))/g,Bc=/:(.+)/;function Uc(e){const t={};return e.split(Dc).forEach(n=>{if(n){const r=n.split(Bc);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t}function Br(e){let t="";if(Ee(e))t=e;else if(q(e))for(let n=0;n<e.length;n++){const r=Br(e[n]);r&&(t+=r+" ")}else if(be(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const Vc="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",Kc="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",qc=Jt(Vc),Xc=Jt(Kc);function Qc(e,t){if(e.length!==t.length)return!1;let n=!0;for(let r=0;n&&r<e.length;r++)n=Ur(e[r],t[r]);return n}function Ur(e,t){if(e===t)return!0;let n=ni(e),r=ni(t);if(n||r)return n&&r?e.getTime()===t.getTime():!1;if(n=q(e),r=q(t),n||r)return n&&r?Qc(e,t):!1;if(n=be(e),r=be(t),n||r){if(!n||!r)return!1;const o=Object.keys(e).length,s=Object.keys(t).length;if(o!==s)return!1;for(const i in e){const a=e.hasOwnProperty(i),l=t.hasOwnProperty(i);if(a&&!l||!a&&l||!Ur(e[i],t[i]))return!1}}return String(e)===String(t)}function _c(e,t){return e.findIndex(n=>Ur(n,t))}const Ho=e=>Ee(e)?e:e==null?"":q(e)||be(e)&&(e.toString===Ta||!$(e.toString))?JSON.stringify(e,Ia,2):String(e),Ia=(e,t)=>t&&t.__v_isRef?Ia(e,t.value):Qt(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[r,o])=>(n[`${r} =>`]=o,n),{})}:Vr(t)?{[`Set(${t.size})`]:[...t.values()]}:be(t)&&!q(t)&&!Oa(t)?String(t):t,ue=Object.freeze({}),Rn=Object.freeze([]),Ue=()=>{},Ca=()=>!1,$c=/^on[^a-z]/,sr=e=>$c.test(e),Ir=e=>e.startsWith("onUpdate:"),xe=Object.assign,xs=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},eu=Object.prototype.hasOwnProperty,se=(e,t)=>eu.call(e,t),q=Array.isArray,Qt=e=>Kr(e)==="[object Map]",Vr=e=>Kr(e)==="[object Set]",ni=e=>e instanceof Date,$=e=>typeof e=="function",Ee=e=>typeof e=="string",ks=e=>typeof e=="symbol",be=e=>e!==null&&typeof e=="object",Es=e=>be(e)&&$(e.then)&&$(e.catch),Ta=Object.prototype.toString,Kr=e=>Ta.call(e),Fs=e=>Kr(e).slice(8,-1),Oa=e=>Kr(e)==="[object Object]",Ss=e=>Ee(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,wr=Jt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),tu=Jt("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),qr=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},nu=/-(\w)/g,ct=qr(e=>e.replace(nu,(t,n)=>n?n.toUpperCase():"")),ru=/\B([A-Z])/g,jt=qr(e=>e.replace(ru,"-$1").toLowerCase()),sn=qr(e=>e.charAt(0).toUpperCase()+e.slice(1)),Gt=qr(e=>e?`on${sn(e)}`:""),Qn=(e,t)=>!Object.is(e,t),wn=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},Cr=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},Rs=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let ri;const Aa=()=>ri||(ri=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function Lo(e,...t){console.warn(`[Vue warn] ${e}`,...t)}let it;class ou{constructor(t=!1){this.active=!0,this.effects=[],this.cleanups=[],!t&&it&&(this.parent=it,this.index=(it.scopes||(it.scopes=[])).push(this)-1)}run(t){if(this.active){const n=it;try{return it=this,t()}finally{it=n}}else Lo("cannot run an inactive effect scope.")}on(){it=this}off(){it=this.parent}stop(t){if(this.active){let n,r;for(n=0,r=this.effects.length;n<r;n++)this.effects[n].stop();for(n=0,r=this.cleanups.length;n<r;n++)this.cleanups[n]();if(this.scopes)for(n=0,r=this.scopes.length;n<r;n++)this.scopes[n].stop(!0);if(this.parent&&!t){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.active=!1}}}function su(e,t=it){t&&t.active&&t.effects.push(e)}const Ms=e=>{const t=new Set(e);return t.w=0,t.n=0,t},ja=e=>(e.w&Ht)>0,Ha=e=>(e.n&Ht)>0,iu=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=Ht},au=e=>{const{deps:t}=e;if(t.length){let n=0;for(let r=0;r<t.length;r++){const o=t[r];ja(o)&&!Ha(o)?o.delete(e):t[n++]=o,o.w&=~Ht,o.n&=~Ht}t.length=n}},Po=new WeakMap;let Gn=0,Ht=1;const Jo=30;let Ge;const _t=Symbol("iterate"),Yo=Symbol("Map key iterate");class Is{constructor(t,n=null,r){this.fn=t,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,su(this,r)}run(){if(!this.active)return this.fn();let t=Ge,n=Ot;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=Ge,Ge=this,Ot=!0,Ht=1<<++Gn,Gn<=Jo?iu(this):oi(this),this.fn()}finally{Gn<=Jo&&au(this),Ht=1<<--Gn,Ge=this.parent,Ot=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Ge===this?this.deferStop=!0:this.active&&(oi(this),this.onStop&&this.onStop(),this.active=!1)}}function oi(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let Ot=!0;const La=[];function fn(){La.push(Ot),Ot=!1}function dn(){const e=La.pop();Ot=e===void 0?!0:e}function Qe(e,t,n){if(Ot&&Ge){let r=Po.get(e);r||Po.set(e,r=new Map);let o=r.get(n);o||r.set(n,o=Ms()),Pa(o,{effect:Ge,target:e,type:t,key:n})}}function Pa(e,t){let n=!1;Gn<=Jo?Ha(e)||(e.n|=Ht,n=!ja(e)):n=!e.has(Ge),n&&(e.add(Ge),Ge.deps.push(e),Ge.onTrack&&Ge.onTrack(Object.assign({effect:Ge},t)))}function yt(e,t,n,r,o,s){const i=Po.get(e);if(!i)return;let a=[];if(t==="clear")a=[...i.values()];else if(n==="length"&&q(e))i.forEach((c,u)=>{(u==="length"||u>=r)&&a.push(c)});else switch(n!==void 0&&a.push(i.get(n)),t){case"add":q(e)?Ss(n)&&a.push(i.get("length")):(a.push(i.get(_t)),Qt(e)&&a.push(i.get(Yo)));break;case"delete":q(e)||(a.push(i.get(_t)),Qt(e)&&a.push(i.get(Yo)));break;case"set":Qt(e)&&a.push(i.get(_t));break}const l={target:e,type:t,key:n,newValue:r,oldValue:o,oldTarget:s};if(a.length===1)a[0]&&No(a[0],l);else{const c=[];for(const u of a)u&&c.push(...u);No(Ms(c),l)}}function No(e,t){for(const n of q(e)?e:[...e])(n!==Ge||n.allowRecurse)&&(n.onTrigger&&n.onTrigger(xe({effect:n},t)),n.scheduler?n.scheduler():n.run())}const lu=Jt("__proto__,__v_isRef,__isVue"),Ja=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(ks)),cu=Xr(),uu=Xr(!1,!0),fu=Xr(!0),du=Xr(!0,!0),si=pu();function pu(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const r=ne(this);for(let s=0,i=this.length;s<i;s++)Qe(r,"get",s+"");const o=r[t](...n);return o===-1||o===!1?r[t](...n.map(ne)):o}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){fn();const r=ne(this)[t].apply(this,n);return dn(),r}}),e}function Xr(e=!1,t=!1){return function(r,o,s){if(o==="__v_isReactive")return!e;if(o==="__v_isReadonly")return e;if(o==="__v_isShallow")return t;if(o==="__v_raw"&&s===(e?t?Ba:Da:t?Za:Ga).get(r))return r;const i=q(r);if(!e&&i&&se(si,o))return Reflect.get(si,o,s);const a=Reflect.get(r,o,s);return(ks(o)?Ja.has(o):lu(o))||(e||Qe(r,"get",o),t)?a:Re(a)?!i||!Ss(o)?a.value:a:be(a)?e?Ua(a):ir(a):a}}const hu=Ya(),mu=Ya(!0);function Ya(e=!1){return function(n,r,o,s){let i=n[r];if(an(i)&&Re(i)&&!Re(o))return!1;if(!e&&!an(o)&&(Va(o)||(o=ne(o),i=ne(i)),!q(n)&&Re(i)&&!Re(o)))return i.value=o,!0;const a=q(n)&&Ss(r)?Number(r)<n.length:se(n,r),l=Reflect.set(n,r,o,s);return n===ne(s)&&(a?Qn(o,i)&&yt(n,"set",r,o,i):yt(n,"add",r,o)),l}}function gu(e,t){const n=se(e,t),r=e[t],o=Reflect.deleteProperty(e,t);return o&&n&&yt(e,"delete",t,void 0,r),o}function yu(e,t){const n=Reflect.has(e,t);return(!ks(t)||!Ja.has(t))&&Qe(e,"has",t),n}function bu(e){return Qe(e,"iterate",q(e)?"length":_t),Reflect.ownKeys(e)}const Na={get:cu,set:hu,deleteProperty:gu,has:yu,ownKeys:bu},za={get:fu,set(e,t){return Lo(`Set operation on key "${String(t)}" failed: target is readonly.`,e),!0},deleteProperty(e,t){return Lo(`Delete operation on key "${String(t)}" failed: target is readonly.`,e),!0}},vu=xe({},Na,{get:uu,set:mu}),wu=xe({},za,{get:du}),Cs=e=>e,Qr=e=>Reflect.getPrototypeOf(e);function dr(e,t,n=!1,r=!1){e=e.__v_raw;const o=ne(e),s=ne(t);t!==s&&!n&&Qe(o,"get",t),!n&&Qe(o,"get",s);const{has:i}=Qr(o),a=r?Cs:n?Ts:_n;if(i.call(o,t))return a(e.get(t));if(i.call(o,s))return a(e.get(s));e!==o&&e.get(t)}function pr(e,t=!1){const n=this.__v_raw,r=ne(n),o=ne(e);return e!==o&&!t&&Qe(r,"has",e),!t&&Qe(r,"has",o),e===o?n.has(e):n.has(e)||n.has(o)}function hr(e,t=!1){return e=e.__v_raw,!t&&Qe(ne(e),"iterate",_t),Reflect.get(e,"size",e)}function ii(e){e=ne(e);const t=ne(this);return Qr(t).has.call(t,e)||(t.add(e),yt(t,"add",e,e)),this}function ai(e,t){t=ne(t);const n=ne(this),{has:r,get:o}=Qr(n);let s=r.call(n,e);s?Wa(n,r,e):(e=ne(e),s=r.call(n,e));const i=o.call(n,e);return n.set(e,t),s?Qn(t,i)&&yt(n,"set",e,t,i):yt(n,"add",e,t),this}function li(e){const t=ne(this),{has:n,get:r}=Qr(t);let o=n.call(t,e);o?Wa(t,n,e):(e=ne(e),o=n.call(t,e));const s=r?r.call(t,e):void 0,i=t.delete(e);return o&&yt(t,"delete",e,void 0,s),i}function ci(){const e=ne(this),t=e.size!==0,n=Qt(e)?new Map(e):new Set(e),r=e.clear();return t&&yt(e,"clear",void 0,void 0,n),r}function mr(e,t){return function(r,o){const s=this,i=s.__v_raw,a=ne(i),l=t?Cs:e?Ts:_n;return!e&&Qe(a,"iterate",_t),i.forEach((c,u)=>r.call(o,l(c),l(u),s))}}function gr(e,t,n){return function(...r){const o=this.__v_raw,s=ne(o),i=Qt(s),a=e==="entries"||e===Symbol.iterator&&i,l=e==="keys"&&i,c=o[e](...r),u=n?Cs:t?Ts:_n;return!t&&Qe(s,"iterate",l?Yo:_t),{next(){const{value:f,done:d}=c.next();return d?{value:f,done:d}:{value:a?[u(f[0]),u(f[1])]:u(f),done:d}},[Symbol.iterator](){return this}}}}function kt(e){return function(...t){{const n=t[0]?`on key "${t[0]}" `:"";console.warn(`${sn(e)} operation ${n}failed: target is readonly.`,ne(this))}return e==="delete"?!1:this}}function xu(){const e={get(s){return dr(this,s)},get size(){return hr(this)},has:pr,add:ii,set:ai,delete:li,clear:ci,forEach:mr(!1,!1)},t={get(s){return dr(this,s,!1,!0)},get size(){return hr(this)},has:pr,add:ii,set:ai,delete:li,clear:ci,forEach:mr(!1,!0)},n={get(s){return dr(this,s,!0)},get size(){return hr(this,!0)},has(s){return pr.call(this,s,!0)},add:kt("add"),set:kt("set"),delete:kt("delete"),clear:kt("clear"),forEach:mr(!0,!1)},r={get(s){return dr(this,s,!0,!0)},get size(){return hr(this,!0)},has(s){return pr.call(this,s,!0)},add:kt("add"),set:kt("set"),delete:kt("delete"),clear:kt("clear"),forEach:mr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{e[s]=gr(s,!1,!1),n[s]=gr(s,!0,!1),t[s]=gr(s,!1,!0),r[s]=gr(s,!0,!0)}),[e,n,t,r]}const[ku,Eu,Fu,Su]=xu();function _r(e,t){const n=t?e?Su:Fu:e?Eu:ku;return(r,o,s)=>o==="__v_isReactive"?!e:o==="__v_isReadonly"?e:o==="__v_raw"?r:Reflect.get(se(n,o)&&o in r?n:r,o,s)}const Ru={get:_r(!1,!1)},Mu={get:_r(!1,!0)},Iu={get:_r(!0,!1)},Cu={get:_r(!0,!0)};function Wa(e,t,n){const r=ne(n);if(r!==n&&t.call(e,r)){const o=Fs(e);console.warn(`Reactive ${o} contains both the raw and reactive versions of the same object${o==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}const Ga=new WeakMap,Za=new WeakMap,Da=new WeakMap,Ba=new WeakMap;function Tu(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ou(e){return e.__v_skip||!Object.isExtensible(e)?0:Tu(Fs(e))}function ir(e){return an(e)?e:$r(e,!1,Na,Ru,Ga)}function Au(e){return $r(e,!1,vu,Mu,Za)}function Ua(e){return $r(e,!0,za,Iu,Da)}function En(e){return $r(e,!0,wu,Cu,Ba)}function $r(e,t,n,r,o){if(!be(e))return console.warn(`value cannot be made reactive: ${String(e)}`),e;if(e.__v_raw&&!(t&&e.__v_isReactive))return e;const s=o.get(e);if(s)return s;const i=Ou(e);if(i===0)return e;const a=new Proxy(e,i===2?r:n);return o.set(e,a),a}function $t(e){return an(e)?$t(e.__v_raw):!!(e&&e.__v_isReactive)}function an(e){return!!(e&&e.__v_isReadonly)}function Va(e){return!!(e&&e.__v_isShallow)}function zo(e){return $t(e)||an(e)}function ne(e){const t=e&&e.__v_raw;return t?ne(t):e}function Ka(e){return Cr(e,"__v_skip",!0),e}const _n=e=>be(e)?ir(e):e,Ts=e=>be(e)?Ua(e):e;function qa(e){Ot&&Ge&&(e=ne(e),Pa(e.dep||(e.dep=Ms()),{target:e,type:"get",key:"value"}))}function Xa(e,t){e=ne(e),e.dep&&No(e.dep,{target:e,type:"set",key:"value",newValue:t})}function Re(e){return!!(e&&e.__v_isRef===!0)}function Be(e){return Qa(e,!1)}function ju(e){return Qa(e,!0)}function Qa(e,t){return Re(e)?e:new Hu(e,t)}class Hu{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:ne(t),this._value=n?t:_n(t)}get value(){return qa(this),this._value}set value(t){t=this.__v_isShallow?t:ne(t),Qn(t,this._rawValue)&&(this._rawValue=t,this._value=this.__v_isShallow?t:_n(t),Xa(this,t))}}function $e(e){return Re(e)?e.value:e}const Lu={get:(e,t,n)=>$e(Reflect.get(e,t,n)),set:(e,t,n,r)=>{const o=e[t];return Re(o)&&!Re(n)?(o.value=n,!0):Reflect.set(e,t,n,r)}};function _a(e){return $t(e)?e:new Proxy(e,Lu)}class Pu{constructor(t,n,r,o){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new Is(t,()=>{this._dirty||(this._dirty=!0,Xa(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=r}get value(){const t=ne(this);return qa(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function Ju(e,t,n=!1){let r,o;const s=$(e);s?(r=e,o=()=>{console.warn("Write operation failed: computed value is readonly")}):(r=e.get,o=e.set);const i=new Pu(r,o,s||!o,n);return t&&!n&&(i.effect.onTrack=t.onTrack,i.effect.onTrigger=t.onTrigger),i}const en=[];function xr(e){en.push(e)}function kr(){en.pop()}function L(e,...t){fn();const n=en.length?en[en.length-1].component:null,r=n&&n.appContext.config.warnHandler,o=Yu();if(r)mt(r,n,11,[e+t.join(""),n&&n.proxy,o.map(({vnode:s})=>`at <${co(n,s.type)}>`).join(`
`),o]);else{const s=[`[Vue warn]: ${e}`,...t];o.length&&s.push(`
`,...Nu(o)),console.warn(...s)}dn()}function Yu(){let e=en[en.length-1];if(!e)return[];const t=[];for(;e;){const n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});const r=e.component&&e.component.parent;e=r&&r.vnode}return t}function Nu(e){const t=[];return e.forEach((n,r)=>{t.push(...r===0?[]:[`
`],...zu(n))}),t}function zu({vnode:e,recurseCount:t}){const n=t>0?`... (${t} recursive calls)`:"",r=e.component?e.component.parent==null:!1,o=` at <${co(e.component,e.type,r)}`,s=">"+n;return e.props?[o,...Wu(e.props),s]:[o+s]}function Wu(e){const t=[],n=Object.keys(e);return n.slice(0,3).forEach(r=>{t.push(...$a(r,e[r]))}),n.length>3&&t.push(" ..."),t}function $a(e,t,n){return Ee(t)?(t=JSON.stringify(t),n?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?n?t:[`${e}=${t}`]:Re(t)?(t=$a(e,ne(t.value),!0),n?t:[`${e}=Ref<`,t,">"]):$(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=ne(t),n?t:[`${e}=`,t])}const Os={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function mt(e,t,n,r){let o;try{o=r?e(...r):e()}catch(s){eo(s,t,n)}return o}function et(e,t,n,r){if($(e)){const s=mt(e,t,n,r);return s&&Es(s)&&s.catch(i=>{eo(i,t,n)}),s}const o=[];for(let s=0;s<e.length;s++)o.push(et(e[s],t,n,r));return o}function eo(e,t,n,r=!0){const o=t?t.vnode:null;if(t){let s=t.parent;const i=t.proxy,a=Os[n];for(;s;){const c=s.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](e,i,a)===!1)return}s=s.parent}const l=t.appContext.config.errorHandler;if(l){mt(l,null,10,[e,i,a]);return}}Gu(e,n,o,r)}function Gu(e,t,n,r=!0){{const o=Os[t];if(n&&xr(n),L(`Unhandled error${o?` during execution of ${o}`:""}`),n&&kr(),r)throw e;console.error(e)}}let Tr=!1,Wo=!1;const Ve=[];let ht=0;const Dn=[];let xn=null,Zt=0;const Bn=[];let ut=null,Dt=0;const el=Promise.resolve();let As=null,Go=null;const Zu=100;function tl(e){const t=As||el;return e?t.then(this?e.bind(this):e):t}function Du(e){let t=ht+1,n=Ve.length;for(;t<n;){const r=t+n>>>1;$n(Ve[r])<e?t=r+1:n=r}return t}function js(e){(!Ve.length||!Ve.includes(e,Tr&&e.allowRecurse?ht+1:ht))&&e!==Go&&(e.id==null?Ve.push(e):Ve.splice(Du(e.id),0,e),nl())}function nl(){!Tr&&!Wo&&(Wo=!0,As=el.then(il))}function Bu(e){const t=Ve.indexOf(e);t>ht&&Ve.splice(t,1)}function rl(e,t,n,r){q(e)?n.push(...e):(!t||!t.includes(e,e.allowRecurse?r+1:r))&&n.push(e),nl()}function Uu(e){rl(e,xn,Dn,Zt)}function ol(e){rl(e,ut,Bn,Dt)}function Hs(e,t=null){if(Dn.length){for(Go=t,xn=[...new Set(Dn)],Dn.length=0,e=e||new Map,Zt=0;Zt<xn.length;Zt++)Ls(e,xn[Zt])||xn[Zt]();xn=null,Zt=0,Go=null,Hs(e,t)}}function sl(e){if(Bn.length){const t=[...new Set(Bn)];if(Bn.length=0,ut){ut.push(...t);return}for(ut=t,e=e||new Map,ut.sort((n,r)=>$n(n)-$n(r)),Dt=0;Dt<ut.length;Dt++)Ls(e,ut[Dt])||ut[Dt]();ut=null,Dt=0}}const $n=e=>e.id==null?1/0:e.id;function il(e){Wo=!1,Tr=!0,e=e||new Map,Hs(e),Ve.sort((n,r)=>$n(n)-$n(r));const t=n=>Ls(e,n);try{for(ht=0;ht<Ve.length;ht++){const n=Ve[ht];if(n&&n.active!==!1){if(t(n))continue;mt(n,null,14)}}}finally{ht=0,Ve.length=0,sl(e),Tr=!1,As=null,(Ve.length||Dn.length||Bn.length)&&il(e)}}function Ls(e,t){if(!e.has(t))e.set(t,1);else{const n=e.get(t);if(n>Zu){const r=t.ownerInstance,o=r&&Ns(r.type);return L(`Maximum recursive updates exceeded${o?` in component <${o}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`),!0}else e.set(t,n+1)}}let tn=!1;const kn=new Set;Aa().__VUE_HMR_RUNTIME__={createRecord:ko(al),rerender:ko(qu),reload:ko(Xu)};const ln=new Map;function Vu(e){const t=e.type.__hmrId;let n=ln.get(t);n||(al(t,e.type),n=ln.get(t)),n.instances.add(e)}function Ku(e){ln.get(e.type.__hmrId).instances.delete(e)}function al(e,t){return ln.has(e)?!1:(ln.set(e,{initialDef:Un(t),instances:new Set}),!0)}function Un(e){return Wl(e)?e.__vccOpts:e}function qu(e,t){const n=ln.get(e);!n||(n.initialDef.render=t,[...n.instances].forEach(r=>{t&&(r.render=t,Un(r.type).render=t),r.renderCache=[],tn=!0,r.update(),tn=!1}))}function Xu(e,t){const n=ln.get(e);if(!n)return;t=Un(t),ui(n.initialDef,t);const r=[...n.instances];for(const o of r){const s=Un(o.type);kn.has(s)||(s!==n.initialDef&&ui(s,t),kn.add(s)),o.appContext.optionsCache.delete(o.type),o.ceReload?(kn.add(s),o.ceReload(t.styles),kn.delete(s)):o.parent?(js(o.parent.update),o.parent.type.__asyncLoader&&o.parent.ceReload&&o.parent.ceReload(t.styles)):o.appContext.reload?o.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}ol(()=>{for(const o of r)kn.delete(Un(o.type))})}function ui(e,t){xe(e,t);for(const n in e)n!=="__file"&&!(n in t)&&delete e[n]}function ko(e){return(t,n)=>{try{return e(t,n)}catch(r){console.error(r),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}let Vt,Zn=[],Zo=!1;function ar(e,...t){Vt?Vt.emit(e,...t):Zo||Zn.push({event:e,args:t})}function ll(e,t){var n,r;Vt=e,Vt?(Vt.enabled=!0,Zn.forEach(({event:o,args:s})=>Vt.emit(o,...s)),Zn=[]):typeof window!="undefined"&&window.HTMLElement&&!(!((r=(n=window.navigator)===null||n===void 0?void 0:n.userAgent)===null||r===void 0)&&r.includes("jsdom"))?((t.__VUE_DEVTOOLS_HOOK_REPLAY__=t.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(s=>{ll(s,t)}),setTimeout(()=>{Vt||(t.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Zo=!0,Zn=[])},3e3)):(Zo=!0,Zn=[])}function Qu(e,t){ar("app:init",e,t,{Fragment:He,Text:In,Comment:Te,Static:Vn})}function _u(e){ar("app:unmount",e)}const $u=Ps("component:added"),cl=Ps("component:updated"),ef=Ps("component:removed");function Ps(e){return t=>{ar(e,t.appContext.app,t.uid,t.parent?t.parent.uid:void 0,t)}}const tf=ul("perf:start"),nf=ul("perf:end");function ul(e){return(t,n,r)=>{ar(e,t.appContext.app,t.uid,t,n,r)}}function rf(e,t,n){ar("component:emit",e.appContext.app,e,t,n)}function of(e,t,...n){if(e.isUnmounted)return;const r=e.vnode.props||ue;{const{emitsOptions:u,propsOptions:[f]}=e;if(u)if(!(t in u))(!f||!(Gt(t)in f))&&L(`Component emitted event "${t}" but it is neither declared in the emits option nor as an "${Gt(t)}" prop.`);else{const d=u[t];$(d)&&(d(...n)||L(`Invalid event arguments: event validation failed for event "${t}".`))}}let o=n;const s=t.startsWith("update:"),i=s&&t.slice(7);if(i&&i in r){const u=`${i==="modelValue"?"model":i}Modifiers`,{number:f,trim:d}=r[u]||ue;d?o=n.map(w=>w.trim()):f&&(o=n.map(Rs))}rf(e,t,o);{const u=t.toLowerCase();u!==t&&r[Gt(u)]&&L(`Event "${u}" is emitted in component ${co(e,e.type)} but the handler is registered for "${t}". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "${jt(t)}" instead of "${t}".`)}let a,l=r[a=Gt(t)]||r[a=Gt(ct(t))];!l&&s&&(l=r[a=Gt(jt(t))]),l&&et(l,e,6,o);const c=r[a+"Once"];if(c){if(!e.emitted)e.emitted={};else if(e.emitted[a])return;e.emitted[a]=!0,et(c,e,6,o)}}function fl(e,t,n=!1){const r=t.emitsCache,o=r.get(e);if(o!==void 0)return o;const s=e.emits;let i={},a=!1;if(!$(e)){const l=c=>{const u=fl(c,t,!0);u&&(a=!0,xe(i,u))};!n&&t.mixins.length&&t.mixins.forEach(l),e.extends&&l(e.extends),e.mixins&&e.mixins.forEach(l)}return!s&&!a?(r.set(e,null),null):(q(s)?s.forEach(l=>i[l]=null):xe(i,s),r.set(e,i),i)}function to(e,t){return!e||!sr(t)?!1:(t=t.slice(2).replace(/Once$/,""),se(e,t[0].toLowerCase()+t.slice(1))||se(e,jt(t))||se(e,t))}let Ce=null,no=null;function Or(e){const t=Ce;return Ce=e,no=e&&e.type.__scopeId||null,t}function dl(e){no=e}function pl(){no=null}function Mn(e,t=Ce,n){if(!t||e._n)return e;const r=(...o)=>{r._d&&Ei(-1);const s=Or(t),i=e(...o);return Or(s),r._d&&Ei(1),cl(t),i};return r._n=!0,r._c=!0,r._d=!0,r}let Do=!1;function Ar(){Do=!0}function Eo(e){const{type:t,vnode:n,proxy:r,withProxy:o,props:s,propsOptions:[i],slots:a,attrs:l,emit:c,render:u,renderCache:f,data:d,setupState:w,ctx:F,inheritAttrs:I}=e;let x,R;const g=Or(e);Do=!1;try{if(n.shapeFlag&4){const k=o||r;x=rt(u.call(k,k,f,s,w,d,F)),R=l}else{const k=t;l===s&&Ar(),x=rt(k.length>1?k(s,{get attrs(){return Ar(),l},slots:a,emit:c}):k(s,null)),R=t.props?l:af(l)}}catch(k){Kn.length=0,eo(k,e,1),x=D(Te)}let m=x,y;if(x.patchFlag>0&&x.patchFlag&2048&&([m,y]=sf(x)),R&&I!==!1){const k=Object.keys(R),{shapeFlag:M}=m;if(k.length){if(M&7)i&&k.some(Ir)&&(R=lf(R,i)),m=bt(m,R);else if(!Do&&m.type!==Te){const C=Object.keys(l),Y=[],j=[];for(let K=0,te=C.length;K<te;K++){const z=C[K];sr(z)?Ir(z)||Y.push(z[2].toLowerCase()+z.slice(3)):j.push(z)}j.length&&L(`Extraneous non-props attributes (${j.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`),Y.length&&L(`Extraneous non-emits event listeners (${Y.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.`)}}}return n.dirs&&(fi(m)||L("Runtime directive used on component with non-element root node. The directives will not function as intended."),m.dirs=m.dirs?m.dirs.concat(n.dirs):n.dirs),n.transition&&(fi(m)||L("Component inside <Transition> renders non-element root node that cannot be animated."),m.transition=n.transition),y?y(m):x=m,Or(g),x}const sf=e=>{const t=e.children,n=e.dynamicChildren,r=hl(t);if(!r)return[e,void 0];const o=t.indexOf(r),s=n?n.indexOf(r):-1,i=a=>{t[o]=a,n&&(s>-1?n[s]=a:a.patchFlag>0&&(e.dynamicChildren=[...n,a]))};return[rt(r),i]};function hl(e){let t;for(let n=0;n<e.length;n++){const r=e[n];if(Lt(r)){if(r.type!==Te||r.children==="v-if"){if(t)return;t=r}}else return}return t}const af=e=>{let t;for(const n in e)(n==="class"||n==="style"||sr(n))&&((t||(t={}))[n]=e[n]);return t},lf=(e,t)=>{const n={};for(const r in e)(!Ir(r)||!(r.slice(9)in t))&&(n[r]=e[r]);return n},fi=e=>e.shapeFlag&7||e.type===Te;function cf(e,t,n){const{props:r,children:o,component:s}=e,{props:i,children:a,patchFlag:l}=t,c=s.emitsOptions;if((o||a)&&tn||t.dirs||t.transition)return!0;if(n&&l>=0){if(l&1024)return!0;if(l&16)return r?di(r,i,c):!!i;if(l&8){const u=t.dynamicProps;for(let f=0;f<u.length;f++){const d=u[f];if(i[d]!==r[d]&&!to(c,d))return!0}}}else return(o||a)&&(!a||!a.$stable)?!0:r===i?!1:r?i?di(r,i,c):!0:!!i;return!1}function di(e,t,n){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let o=0;o<r.length;o++){const s=r[o];if(t[s]!==e[s]&&!to(n,s))return!0}return!1}function uf({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}const ff=e=>e.__isSuspense;function df(e,t){t&&t.pendingBranch?q(e)?t.effects.push(...e):t.effects.push(e):ol(e)}function Er(e,t){if(!Ie)L("provide() can only be used inside setup().");else{let n=Ie.provides;const r=Ie.parent&&Ie.parent.provides;r===n&&(n=Ie.provides=Object.create(r)),n[e]=t}}function gt(e,t,n=!1){const r=Ie||Ce;if(r){const o=r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(o&&e in o)return o[e];if(arguments.length>1)return n&&$(t)?t.call(r.proxy):t;L(`injection "${String(e)}" not found.`)}else L("inject() can only be used inside setup() or functional components.")}function pf(e,t){return ro(e,null,t)}function hf(e,t){return ro(e,null,Object.assign(Object.assign({},t),{flush:"post"}))}const pi={};function nn(e,t,n){return $(t)||L("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),ro(e,t,n)}function ro(e,t,{immediate:n,deep:r,flush:o,onTrack:s,onTrigger:i}=ue){t||(n!==void 0&&L('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),r!==void 0&&L('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));const a=g=>{L("Invalid watch source: ",g,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},l=Ie;let c,u=!1,f=!1;if(Re(e)?(c=()=>e.value,u=Va(e)):$t(e)?(c=()=>e,r=!0):q(e)?(f=!0,u=e.some($t),c=()=>e.map(g=>{if(Re(g))return g.value;if($t(g))return Xt(g);if($(g))return mt(g,l,2);a(g)})):$(e)?t?c=()=>mt(e,l,2):c=()=>{if(!(l&&l.isUnmounted))return d&&d(),et(e,l,3,[w])}:(c=Ue,a(e)),t&&r){const g=c;c=()=>Xt(g())}let d,w=g=>{d=R.onStop=()=>{mt(g,l,4)}};if(er)return w=Ue,t?n&&et(t,l,3,[c(),f?[]:void 0,w]):c(),Ue;let F=f?[]:pi;const I=()=>{if(!!R.active)if(t){const g=R.run();(r||u||(f?g.some((m,y)=>Qn(m,F[y])):Qn(g,F)))&&(d&&d(),et(t,l,3,[g,F===pi?void 0:F,w]),F=g)}else R.run()};I.allowRecurse=!!t;let x;o==="sync"?x=I:o==="post"?x=()=>De(I,l&&l.suspense):x=()=>{!l||l.isMounted?Uu(I):I()};const R=new Is(c,x);return R.onTrack=s,R.onTrigger=i,t?n?I():F=R.run():o==="post"?De(R.run.bind(R),l&&l.suspense):R.run(),()=>{R.stop(),l&&l.scope&&xs(l.scope.effects,R)}}function mf(e,t,n){const r=this.proxy,o=Ee(e)?e.includes(".")?ml(r,e):()=>r[e]:e.bind(r,r);let s;$(t)?s=t:(s=t.handler,n=t);const i=Ie;Tn(this);const a=ro(o,s.bind(r),n);return i?Tn(i):on(),a}function ml(e,t){const n=t.split(".");return()=>{let r=e;for(let o=0;o<n.length&&r;o++)r=r[n[o]];return r}}function Xt(e,t){if(!be(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),Re(e))Xt(e.value,t);else if(q(e))for(let n=0;n<e.length;n++)Xt(e[n],t);else if(Vr(e)||Qt(e))e.forEach(n=>{Xt(n,t)});else if(Oa(e))for(const n in e)Xt(e[n],t);return e}function gf(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return cr(()=>{e.isMounted=!0}),wl(()=>{e.isUnmounting=!0}),e}const _e=[Function,Array],yf={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:_e,onEnter:_e,onAfterEnter:_e,onEnterCancelled:_e,onBeforeLeave:_e,onLeave:_e,onAfterLeave:_e,onLeaveCancelled:_e,onBeforeAppear:_e,onAppear:_e,onAfterAppear:_e,onAppearCancelled:_e},setup(e,{slots:t}){const n=pn(),r=gf();let o;return()=>{const s=t.default&&bl(t.default(),!0);if(!s||!s.length)return;let i=s[0];if(s.length>1){let I=!1;for(const x of s)if(x.type!==Te){if(I){L("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}i=x,I=!0}}const a=ne(e),{mode:l}=a;if(l&&l!=="in-out"&&l!=="out-in"&&l!=="default"&&L(`invalid <transition> mode: ${l}`),r.isLeaving)return Fo(i);const c=hi(i);if(!c)return Fo(i);const u=Bo(c,a,r,n);Uo(c,u);const f=n.subTree,d=f&&hi(f);let w=!1;const{getTransitionKey:F}=c.type;if(F){const I=F();o===void 0?o=I:I!==o&&(o=I,w=!0)}if(d&&d.type!==Te&&(!Kt(c,d)||w)){const I=Bo(d,a,r,n);if(Uo(d,I),l==="out-in")return r.isLeaving=!0,I.afterLeave=()=>{r.isLeaving=!1,n.update()},Fo(i);l==="in-out"&&c.type!==Te&&(I.delayLeave=(x,R,g)=>{const m=yl(r,d);m[String(d.key)]=d,x._leaveCb=()=>{R(),x._leaveCb=void 0,delete u.delayedLeave},u.delayedLeave=g})}return i}}},gl=yf;function yl(e,t){const{leavingVNodes:n}=e;let r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function Bo(e,t,n,r){const{appear:o,mode:s,persisted:i=!1,onBeforeEnter:a,onEnter:l,onAfterEnter:c,onEnterCancelled:u,onBeforeLeave:f,onLeave:d,onAfterLeave:w,onLeaveCancelled:F,onBeforeAppear:I,onAppear:x,onAfterAppear:R,onAppearCancelled:g}=t,m=String(e.key),y=yl(n,e),k=(C,Y)=>{C&&et(C,r,9,Y)},M={mode:s,persisted:i,beforeEnter(C){let Y=a;if(!n.isMounted)if(o)Y=I||a;else return;C._leaveCb&&C._leaveCb(!0);const j=y[m];j&&Kt(e,j)&&j.el._leaveCb&&j.el._leaveCb(),k(Y,[C])},enter(C){let Y=l,j=c,K=u;if(!n.isMounted)if(o)Y=x||l,j=R||c,K=g||u;else return;let te=!1;const z=C._enterCb=de=>{te||(te=!0,de?k(K,[C]):k(j,[C]),M.delayedLeave&&M.delayedLeave(),C._enterCb=void 0)};Y?(Y(C,z),Y.length<=1&&z()):z()},leave(C,Y){const j=String(e.key);if(C._enterCb&&C._enterCb(!0),n.isUnmounting)return Y();k(f,[C]);let K=!1;const te=C._leaveCb=z=>{K||(K=!0,Y(),z?k(F,[C]):k(w,[C]),C._leaveCb=void 0,y[j]===e&&delete y[j])};y[j]=e,d?(d(C,te),d.length<=1&&te()):te()},clone(C){return Bo(C,t,n,r)}};return M}function Fo(e){if(lr(e))return e=bt(e),e.children=null,e}function hi(e){return lr(e)?e.children?e.children[0]:void 0:e}function Uo(e,t){e.shapeFlag&6&&e.component?Uo(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function bl(e,t=!1,n){let r=[],o=0;for(let s=0;s<e.length;s++){let i=e[s];const a=n==null?i.key:String(n)+String(i.key!=null?i.key:s);i.type===He?(i.patchFlag&128&&o++,r=r.concat(bl(i.children,t,a))):(t||i.type!==Te)&&r.push(a!=null?bt(i,{key:a}):i)}if(o>1)for(let s=0;s<r.length;s++)r[s].patchFlag=-2;return r}function vt(e){return $(e)?{setup:e,name:e.name}:e}const jr=e=>!!e.type.__asyncLoader,lr=e=>e.type.__isKeepAlive;function bf(e,t){vl(e,"a",t)}function vf(e,t){vl(e,"da",t)}function vl(e,t,n=Ie){const r=e.__wdc||(e.__wdc=()=>{let o=n;for(;o;){if(o.isDeactivated)return;o=o.parent}return e()});if(oo(t,r,n),n){let o=n.parent;for(;o&&o.parent;)lr(o.parent.vnode)&&wf(r,t,n,o),o=o.parent}}function wf(e,t,n,r){const o=oo(t,e,r,!0);so(()=>{xs(r[t],o)},n)}function oo(e,t,n=Ie,r=!1){if(n){const o=n[e]||(n[e]=[]),s=t.__weh||(t.__weh=(...i)=>{if(n.isUnmounted)return;fn(),Tn(n);const a=et(t,n,e,i);return on(),dn(),a});return r?o.unshift(s):o.push(s),s}else{const o=Gt(Os[e].replace(/ hook$/,""));L(`${o} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.`)}}const wt=e=>(t,n=Ie)=>(!er||e==="sp")&&oo(e,t,n),xf=wt("bm"),cr=wt("m"),kf=wt("bu"),Ef=wt("u"),wl=wt("bum"),so=wt("um"),Ff=wt("sp"),Sf=wt("rtg"),Rf=wt("rtc");function Mf(e,t=Ie){oo("ec",e,t)}function If(){const e=Object.create(null);return(t,n)=>{e[n]?L(`${t} property "${n}" is already defined in ${e[n]}.`):e[n]=t}}let Vo=!0;function Cf(e){const t=kl(e),n=e.proxy,r=e.ctx;Vo=!1,t.beforeCreate&&mi(t.beforeCreate,e,"bc");const{data:o,computed:s,methods:i,watch:a,provide:l,inject:c,created:u,beforeMount:f,mounted:d,beforeUpdate:w,updated:F,activated:I,deactivated:x,beforeDestroy:R,beforeUnmount:g,destroyed:m,unmounted:y,render:k,renderTracked:M,renderTriggered:C,errorCaptured:Y,serverPrefetch:j,expose:K,inheritAttrs:te,components:z,directives:de,filters:Me}=t,Ae=If();{const[_]=e.propsOptions;if(_)for(const V in _)Ae("Props",V)}if(c&&Tf(c,r,Ae,e.appContext.config.unwrapInjectedRef),i)for(const _ in i){const V=i[_];$(V)?(Object.defineProperty(r,_,{value:V.bind(n),configurable:!0,enumerable:!0,writable:!0}),Ae("Methods",_)):L(`Method "${_}" has type "${typeof V}" in the component definition. Did you reference the function correctly?`)}if(o){$(o)||L("The data option must be a function. Plain object usage is no longer supported.");const _=o.call(n,n);if(Es(_)&&L("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!be(_))L("data() should return an object.");else{e.data=ir(_);for(const V in _)Ae("Data",V),V[0]!=="$"&&V[0]!=="_"&&Object.defineProperty(r,V,{configurable:!0,enumerable:!0,get:()=>_[V],set:Ue})}}if(Vo=!0,s)for(const _ in s){const V=s[_],ye=$(V)?V.bind(n,n):$(V.get)?V.get.bind(n,n):Ue;ye===Ue&&L(`Computed property "${_}" has no getter.`);const je=!$(V)&&$(V.set)?V.set.bind(n):()=>{L(`Write operation failed: computed property "${_}" is readonly.`)},Ne=ke({get:ye,set:je});Object.defineProperty(r,_,{enumerable:!0,configurable:!0,get:()=>Ne.value,set:we=>Ne.value=we}),Ae("Computed",_)}if(a)for(const _ in a)xl(a[_],r,n,_);if(l){const _=$(l)?l.call(n):l;Reflect.ownKeys(_).forEach(V=>{Er(V,_[V])})}u&&mi(u,e,"c");function ge(_,V){q(V)?V.forEach(ye=>_(ye.bind(n))):V&&_(V.bind(n))}if(ge(xf,f),ge(cr,d),ge(kf,w),ge(Ef,F),ge(bf,I),ge(vf,x),ge(Mf,Y),ge(Rf,M),ge(Sf,C),ge(wl,g),ge(so,y),ge(Ff,j),q(K))if(K.length){const _=e.exposed||(e.exposed={});K.forEach(V=>{Object.defineProperty(_,V,{get:()=>n[V],set:ye=>n[V]=ye})})}else e.exposed||(e.exposed={});k&&e.render===Ue&&(e.render=k),te!=null&&(e.inheritAttrs=te),z&&(e.components=z),de&&(e.directives=de)}function Tf(e,t,n=Ue,r=!1){q(e)&&(e=Ko(e));for(const o in e){const s=e[o];let i;be(s)?"default"in s?i=gt(s.from||o,s.default,!0):i=gt(s.from||o):i=gt(s),Re(i)?r?Object.defineProperty(t,o,{enumerable:!0,configurable:!0,get:()=>i.value,set:a=>i.value=a}):(L(`injected property "${o}" is a ref and will be auto-unwrapped and no longer needs \`.value\` in the next minor release. To opt-in to the new behavior now, set \`app.config.unwrapInjectedRef = true\` (this config is temporary and will not be needed in the future.)`),t[o]=i):t[o]=i,n("Inject",o)}}function mi(e,t,n){et(q(e)?e.map(r=>r.bind(t.proxy)):e.bind(t.proxy),t,n)}function xl(e,t,n,r){const o=r.includes(".")?ml(n,r):()=>n[r];if(Ee(e)){const s=t[e];$(s)?nn(o,s):L(`Invalid watch handler specified by key "${e}"`,s)}else if($(e))nn(o,e.bind(n));else if(be(e))if(q(e))e.forEach(s=>xl(s,t,n,r));else{const s=$(e.handler)?e.handler.bind(n):t[e.handler];$(s)?nn(o,s,e):L(`Invalid watch handler specified by key "${e.handler}"`,s)}else L(`Invalid watch option: "${r}"`,e)}function kl(e){const t=e.type,{mixins:n,extends:r}=t,{mixins:o,optionsCache:s,config:{optionMergeStrategies:i}}=e.appContext,a=s.get(t);let l;return a?l=a:!o.length&&!n&&!r?l=t:(l={},o.length&&o.forEach(c=>Hr(l,c,i,!0)),Hr(l,t,i)),s.set(t,l),l}function Hr(e,t,n,r=!1){const{mixins:o,extends:s}=t;s&&Hr(e,s,n,!0),o&&o.forEach(i=>Hr(e,i,n,!0));for(const i in t)if(r&&i==="expose")L('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{const a=Of[i]||n&&n[i];e[i]=a?a(e[i],t[i]):t[i]}return e}const Of={data:gi,props:Bt,emits:Bt,methods:Bt,computed:Bt,beforeCreate:We,created:We,beforeMount:We,mounted:We,beforeUpdate:We,updated:We,beforeDestroy:We,beforeUnmount:We,destroyed:We,unmounted:We,activated:We,deactivated:We,errorCaptured:We,serverPrefetch:We,components:Bt,directives:Bt,watch:jf,provide:gi,inject:Af};function gi(e,t){return t?e?function(){return xe($(e)?e.call(this,this):e,$(t)?t.call(this,this):t)}:t:e}function Af(e,t){return Bt(Ko(e),Ko(t))}function Ko(e){if(q(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function We(e,t){return e?[...new Set([].concat(e,t))]:t}function Bt(e,t){return e?xe(xe(Object.create(null),e),t):t}function jf(e,t){if(!e)return t;if(!t)return e;const n=xe(Object.create(null),e);for(const r in t)n[r]=We(e[r],t[r]);return n}function Hf(e,t,n,r=!1){const o={},s={};Cr(s,ao,1),e.propsDefaults=Object.create(null),El(e,t,o,s);for(const i in e.propsOptions[0])i in o||(o[i]=void 0);Sl(t||{},o,e),n?e.props=r?o:Au(o):e.type.props?e.props=o:e.props=s,e.attrs=s}function Lf(e,t,n,r){const{props:o,attrs:s,vnode:{patchFlag:i}}=e,a=ne(o),[l]=e.propsOptions;let c=!1;if(!(e.type.__hmrId||e.parent&&e.parent.type.__hmrId)&&(r||i>0)&&!(i&16)){if(i&8){const u=e.vnode.dynamicProps;for(let f=0;f<u.length;f++){let d=u[f];if(to(e.emitsOptions,d))continue;const w=t[d];if(l)if(se(s,d))w!==s[d]&&(s[d]=w,c=!0);else{const F=ct(d);o[F]=qo(l,a,F,w,e,!1)}else w!==s[d]&&(s[d]=w,c=!0)}}}else{El(e,t,o,s)&&(c=!0);let u;for(const f in a)(!t||!se(t,f)&&((u=jt(f))===f||!se(t,u)))&&(l?n&&(n[f]!==void 0||n[u]!==void 0)&&(o[f]=qo(l,a,f,void 0,e,!0)):delete o[f]);if(s!==a)for(const f in s)(!t||!se(t,f)&&!0)&&(delete s[f],c=!0)}c&&yt(e,"set","$attrs"),Sl(t||{},o,e)}function El(e,t,n,r){const[o,s]=e.propsOptions;let i=!1,a;if(t)for(let l in t){if(wr(l))continue;const c=t[l];let u;o&&se(o,u=ct(l))?!s||!s.includes(u)?n[u]=c:(a||(a={}))[u]=c:to(e.emitsOptions,l)||(!(l in r)||c!==r[l])&&(r[l]=c,i=!0)}if(s){const l=ne(n),c=a||ue;for(let u=0;u<s.length;u++){const f=s[u];n[f]=qo(o,l,f,c[f],e,!se(c,f))}}return i}function qo(e,t,n,r,o,s){const i=e[n];if(i!=null){const a=se(i,"default");if(a&&r===void 0){const l=i.default;if(i.type!==Function&&$(l)){const{propsDefaults:c}=o;n in c?r=c[n]:(Tn(o),r=c[n]=l.call(null,t),on())}else r=l}i[0]&&(s&&!a?r=!1:i[1]&&(r===""||r===jt(n))&&(r=!0))}return r}function Fl(e,t,n=!1){const r=t.propsCache,o=r.get(e);if(o)return o;const s=e.props,i={},a=[];let l=!1;if(!$(e)){const u=f=>{l=!0;const[d,w]=Fl(f,t,!0);xe(i,d),w&&a.push(...w)};!n&&t.mixins.length&&t.mixins.forEach(u),e.extends&&u(e.extends),e.mixins&&e.mixins.forEach(u)}if(!s&&!l)return r.set(e,Rn),Rn;if(q(s))for(let u=0;u<s.length;u++){Ee(s[u])||L("props must be strings when using array syntax.",s[u]);const f=ct(s[u]);yi(f)&&(i[f]=ue)}else if(s){be(s)||L("invalid props options",s);for(const u in s){const f=ct(u);if(yi(f)){const d=s[u],w=i[f]=q(d)||$(d)?{type:d}:d;if(w){const F=vi(Boolean,w.type),I=vi(String,w.type);w[0]=F>-1,w[1]=I<0||F<I,(F>-1||se(w,"default"))&&a.push(f)}}}}const c=[i,a];return r.set(e,c),c}function yi(e){return e[0]!=="$"?!0:(L(`Invalid prop name: "${e}" is a reserved property.`),!1)}function Xo(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:e===null?"null":""}function bi(e,t){return Xo(e)===Xo(t)}function vi(e,t){return q(t)?t.findIndex(n=>bi(n,e)):$(t)&&bi(t,e)?0:-1}function Sl(e,t,n){const r=ne(t),o=n.propsOptions[0];for(const s in o){let i=o[s];i!=null&&Pf(s,r[s],i,!se(e,s)&&!se(e,jt(s)))}}function Pf(e,t,n,r){const{type:o,required:s,validator:i}=n;if(s&&r){L('Missing required prop: "'+e+'"');return}if(!(t==null&&!n.required)){if(o!=null&&o!==!0){let a=!1;const l=q(o)?o:[o],c=[];for(let u=0;u<l.length&&!a;u++){const{valid:f,expectedType:d}=Yf(t,l[u]);c.push(d||""),a=f}if(!a){L(Nf(e,t,c));return}}i&&!i(t)&&L('Invalid prop: custom validator check failed for prop "'+e+'".')}}const Jf=Jt("String,Number,Boolean,Function,Symbol,BigInt");function Yf(e,t){let n;const r=Xo(t);if(Jf(r)){const o=typeof e;n=o===r.toLowerCase(),!n&&o==="object"&&(n=e instanceof t)}else r==="Object"?n=be(e):r==="Array"?n=q(e):r==="null"?n=e===null:n=e instanceof t;return{valid:n,expectedType:r}}function Nf(e,t,n){let r=`Invalid prop: type check failed for prop "${e}". Expected ${n.map(sn).join(" | ")}`;const o=n[0],s=Fs(t),i=wi(t,o),a=wi(t,s);return n.length===1&&xi(o)&&!zf(o,s)&&(r+=` with value ${i}`),r+=`, got ${s} `,xi(s)&&(r+=`with value ${a}.`),r}function wi(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function xi(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function zf(...e){return e.some(t=>t.toLowerCase()==="boolean")}const Rl=e=>e[0]==="_"||e==="$stable",Js=e=>q(e)?e.map(rt):[rt(e)],Wf=(e,t,n)=>{const r=Mn((...o)=>(Ie&&L(`Slot "${e}" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`),Js(t(...o))),n);return r._c=!1,r},Ml=(e,t,n)=>{const r=e._ctx;for(const o in e){if(Rl(o))continue;const s=e[o];if($(s))t[o]=Wf(o,s,r);else if(s!=null){L(`Non-function value encountered for slot "${o}". Prefer function slots for better performance.`);const i=Js(s);t[o]=()=>i}}},Il=(e,t)=>{lr(e.vnode)||L("Non-function value encountered for default slot. Prefer function slots for better performance.");const n=Js(t);e.slots.default=()=>n},Gf=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=ne(t),Cr(t,"_",n)):Ml(t,e.slots={})}else e.slots={},t&&Il(e,t);Cr(e.slots,ao,1)},Zf=(e,t,n)=>{const{vnode:r,slots:o}=e;let s=!0,i=ue;if(r.shapeFlag&32){const a=t._;a?tn?xe(o,t):n&&a===1?s=!1:(xe(o,t),!n&&a===1&&delete o._):(s=!t.$stable,Ml(t,o)),i=t}else t&&(Il(e,t),i={default:1});if(s)for(const a in o)!Rl(a)&&!(a in i)&&delete o[a]};function Cl(e){tu(e)&&L("Do not use built-in directive ids as custom directive id: "+e)}function Df(e,t){const n=Ce;if(n===null)return L("withDirectives can only be used inside render functions."),e;const r=lo(n)||n.proxy,o=e.dirs||(e.dirs=[]);for(let s=0;s<t.length;s++){let[i,a,l,c=ue]=t[s];$(i)&&(i={mounted:i,updated:i}),i.deep&&Xt(a),o.push({dir:i,instance:r,value:a,oldValue:void 0,arg:l,modifiers:c})}return e}function Nt(e,t,n,r){const o=e.dirs,s=t&&t.dirs;for(let i=0;i<o.length;i++){const a=o[i];s&&(a.oldValue=s[i].value);let l=a.dir[r];l&&(fn(),et(l,n,8,[e.el,a,e,t]),dn())}}function Tl(){return{app:null,config:{isNativeTag:Ca,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Bf=0;function Uf(e,t){return function(r,o=null){$(r)||(r=Object.assign({},r)),o!=null&&!be(o)&&(L("root props passed to app.mount() must be an object."),o=null);const s=Tl(),i=new Set;let a=!1;const l=s.app={_uid:Bf++,_component:r,_props:o,_container:null,_context:s,_instance:null,version:Si,get config(){return s.config},set config(c){L("app.config cannot be replaced. Modify individual options instead.")},use(c,...u){return i.has(c)?L("Plugin has already been applied to target app."):c&&$(c.install)?(i.add(c),c.install(l,...u)):$(c)?(i.add(c),c(l,...u)):L('A plugin must either be a function or an object with an "install" function.'),l},mixin(c){return s.mixins.includes(c)?L("Mixin has already been applied to target app"+(c.name?`: ${c.name}`:"")):s.mixins.push(c),l},component(c,u){return $o(c,s.config),u?(s.components[c]&&L(`Component "${c}" has already been registered in target app.`),s.components[c]=u,l):s.components[c]},directive(c,u){return Cl(c),u?(s.directives[c]&&L(`Directive "${c}" has already been registered in target app.`),s.directives[c]=u,l):s.directives[c]},mount(c,u,f){if(a)L("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{const d=D(r,o);return d.appContext=s,s.reload=()=>{e(bt(d),c,f)},u&&t?t(d,c):e(d,c,f),a=!0,l._container=c,c.__vue_app__=l,l._instance=d.component,Qu(l,Si),lo(d.component)||d.component.proxy}},unmount(){a?(e(null,l._container),l._instance=null,_u(l),delete l._container.__vue_app__):L("Cannot unmount an app that is not mounted.")},provide(c,u){return c in s.provides&&L(`App already provides property with key "${String(c)}". It will be overwritten with the new value.`),s.provides[c]=u,l}};return l}}function Qo(e,t,n,r,o=!1){if(q(e)){e.forEach((d,w)=>Qo(d,t&&(q(t)?t[w]:t),n,r,o));return}if(jr(r)&&!o)return;const s=r.shapeFlag&4?lo(r.component)||r.component.proxy:r.el,i=o?null:s,{i:a,r:l}=e;if(!a){L("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}const c=t&&t.r,u=a.refs===ue?a.refs={}:a.refs,f=a.setupState;if(c!=null&&c!==l&&(Ee(c)?(u[c]=null,se(f,c)&&(f[c]=null)):Re(c)&&(c.value=null)),$(l))mt(l,a,12,[i,u]);else{const d=Ee(l),w=Re(l);if(d||w){const F=()=>{if(e.f){const I=d?u[l]:l.value;o?q(I)&&xs(I,s):q(I)?I.includes(s)||I.push(s):d?(u[l]=[s],se(f,l)&&(f[l]=u[l])):(l.value=[s],e.k&&(u[e.k]=l.value))}else d?(u[l]=i,se(f,l)&&(f[l]=i)):Re(l)?(l.value=i,e.k&&(u[e.k]=i)):L("Invalid template ref type:",l,`(${typeof l})`)};i?(F.id=-1,De(F,n)):F()}else L("Invalid template ref type:",l,`(${typeof l})`)}}let Pn,Tt;function ft(e,t){e.appContext.config.performance&&Lr()&&Tt.mark(`vue-${t}-${e.uid}`),tf(e,t,Lr()?Tt.now():Date.now())}function dt(e,t){if(e.appContext.config.performance&&Lr()){const n=`vue-${t}-${e.uid}`,r=n+":end";Tt.mark(r),Tt.measure(`<${co(e,e.type)}> ${t}`,n,r),Tt.clearMarks(n),Tt.clearMarks(r)}nf(e,t,Lr()?Tt.now():Date.now())}function Lr(){return Pn!==void 0||(typeof window!="undefined"&&window.performance?(Pn=!0,Tt=window.performance):Pn=!1),Pn}function Vf(){const e=[];if(e.length){const t=e.length>1;console.warn(`Feature flag${t?"s":""} ${e.join(", ")} ${t?"are":"is"} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}const De=df;function Kf(e){return qf(e)}function qf(e,t){Vf();const n=Aa();n.__VUE__=!0,ll(n.__VUE_DEVTOOLS_GLOBAL_HOOK__,n);const{insert:r,remove:o,patchProp:s,createElement:i,createText:a,createComment:l,setText:c,setElementText:u,parentNode:f,nextSibling:d,setScopeId:w=Ue,cloneNode:F,insertStaticContent:I}=e,x=(p,h,E,O=null,T=null,H=null,P=!1,A=null,b=tn?!1:!!h.dynamicChildren)=>{if(p===h)return;p&&!Kt(p,h)&&(O=re(p),Fe(p,T,H,!0),p=null),h.patchFlag===-2&&(b=!1,h.dynamicChildren=null);const{type:v,ref:W,shapeFlag:J}=h;switch(v){case In:R(p,h,E,O);break;case Te:g(p,h,E,O);break;case Vn:p==null?m(h,E,O,P):y(p,h,E,P);break;case He:Me(p,h,E,O,T,H,P,A,b);break;default:J&1?C(p,h,E,O,T,H,P,A,b):J&6?Ae(p,h,E,O,T,H,P,A,b):J&64||J&128?v.process(p,h,E,O,T,H,P,A,b,X):L("Invalid VNode type:",v,`(${typeof v})`)}W!=null&&T&&Qo(W,p&&p.ref,H,h||p,!h)},R=(p,h,E,O)=>{if(p==null)r(h.el=a(h.children),E,O);else{const T=h.el=p.el;h.children!==p.children&&c(T,h.children)}},g=(p,h,E,O)=>{p==null?r(h.el=l(h.children||""),E,O):h.el=p.el},m=(p,h,E,O)=>{[p.el,p.anchor]=I(p.children,h,E,O,p.el,p.anchor)},y=(p,h,E,O)=>{if(h.children!==p.children){const T=d(p.anchor);M(p),[h.el,h.anchor]=I(h.children,E,T,O)}else h.el=p.el,h.anchor=p.anchor},k=({el:p,anchor:h},E,O)=>{let T;for(;p&&p!==h;)T=d(p),r(p,E,O),p=T;r(h,E,O)},M=({el:p,anchor:h})=>{let E;for(;p&&p!==h;)E=d(p),o(p),p=E;o(h)},C=(p,h,E,O,T,H,P,A,b)=>{P=P||h.type==="svg",p==null?Y(h,E,O,T,H,P,A,b):te(p,h,T,H,P,A,b)},Y=(p,h,E,O,T,H,P,A)=>{let b,v;const{type:W,props:J,shapeFlag:U,transition:Q,patchFlag:oe,dirs:ae}=p;{if(b=p.el=i(p.type,H,J&&J.is,J),U&8?u(b,p.children):U&16&&K(p.children,b,null,O,T,H&&W!=="foreignObject",P,A),ae&&Nt(p,null,O,"created"),J){for(const he in J)he!=="value"&&!wr(he)&&s(b,he,null,J[he],H,p.children,O,T,Z);"value"in J&&s(b,"value",null,J.value),(v=J.onVnodeBeforeMount)&&st(v,O,p)}j(b,p,p.scopeId,P,O)}Object.defineProperty(b,"__vnode",{value:p,enumerable:!1}),Object.defineProperty(b,"__vueParentComponent",{value:O,enumerable:!1}),ae&&Nt(p,null,O,"beforeMount");const fe=(!T||T&&!T.pendingBranch)&&Q&&!Q.persisted;fe&&Q.beforeEnter(b),r(b,h,E),((v=J&&J.onVnodeMounted)||fe||ae)&&De(()=>{v&&st(v,O,p),fe&&Q.enter(b),ae&&Nt(p,null,O,"mounted")},T)},j=(p,h,E,O,T)=>{if(E&&w(p,E),O)for(let H=0;H<O.length;H++)w(p,O[H]);if(T){let H=T.subTree;if(H.patchFlag>0&&H.patchFlag&2048&&(H=hl(H.children)||H),h===H){const P=T.vnode;j(p,P,P.scopeId,P.slotScopeIds,T.parent)}}},K=(p,h,E,O,T,H,P,A,b=0)=>{for(let v=b;v<p.length;v++){const W=p[v]=A?It(p[v]):rt(p[v]);x(null,W,h,E,O,T,H,P,A)}},te=(p,h,E,O,T,H,P)=>{const A=h.el=p.el;let{patchFlag:b,dynamicChildren:v,dirs:W}=h;b|=p.patchFlag&16;const J=p.props||ue,U=h.props||ue;let Q;E&&zt(E,!1),(Q=U.onVnodeBeforeUpdate)&&st(Q,E,h,p),W&&Nt(h,p,E,"beforeUpdate"),E&&zt(E,!0),tn&&(b=0,P=!1,v=null);const oe=T&&h.type!=="foreignObject";if(v?(z(p.dynamicChildren,v,A,E,O,oe,H),E&&E.type.__hmrId&&Fr(p,h)):P||je(p,h,A,null,E,O,oe,H,!1),b>0){if(b&16)de(A,h,J,U,E,O,T);else if(b&2&&J.class!==U.class&&s(A,"class",null,U.class,T),b&4&&s(A,"style",J.style,U.style,T),b&8){const ae=h.dynamicProps;for(let fe=0;fe<ae.length;fe++){const he=ae[fe],nt=J[he],mn=U[he];(mn!==nt||he==="value")&&s(A,he,nt,mn,T,p.children,E,O,Z)}}b&1&&p.children!==h.children&&u(A,h.children)}else!P&&v==null&&de(A,h,J,U,E,O,T);((Q=U.onVnodeUpdated)||W)&&De(()=>{Q&&st(Q,E,h,p),W&&Nt(h,p,E,"updated")},O)},z=(p,h,E,O,T,H,P)=>{for(let A=0;A<h.length;A++){const b=p[A],v=h[A],W=b.el&&(b.type===He||!Kt(b,v)||b.shapeFlag&70)?f(b.el):E;x(b,v,W,null,O,T,H,P,!0)}},de=(p,h,E,O,T,H,P)=>{if(E!==O){for(const A in O){if(wr(A))continue;const b=O[A],v=E[A];b!==v&&A!=="value"&&s(p,A,v,b,P,h.children,T,H,Z)}if(E!==ue)for(const A in E)!wr(A)&&!(A in O)&&s(p,A,E[A],null,P,h.children,T,H,Z);"value"in O&&s(p,"value",E.value,O.value)}},Me=(p,h,E,O,T,H,P,A,b)=>{const v=h.el=p?p.el:a(""),W=h.anchor=p?p.anchor:a("");let{patchFlag:J,dynamicChildren:U,slotScopeIds:Q}=h;tn&&(J=0,b=!1,U=null),Q&&(A=A?A.concat(Q):Q),p==null?(r(v,E,O),r(W,E,O),K(h.children,E,W,T,H,P,A,b)):J>0&&J&64&&U&&p.dynamicChildren?(z(p.dynamicChildren,U,E,T,H,P,A),T&&T.type.__hmrId?Fr(p,h):(h.key!=null||T&&h===T.subTree)&&Fr(p,h,!0)):je(p,h,E,W,T,H,P,A,b)},Ae=(p,h,E,O,T,H,P,A,b)=>{h.slotScopeIds=A,p==null?h.shapeFlag&512?T.ctx.activate(h,E,O,P,b):ge(h,E,O,T,H,P,b):_(p,h,b)},ge=(p,h,E,O,T,H,P)=>{const A=p.component=cd(p,O,T);if(A.type.__hmrId&&Vu(A),xr(p),ft(A,"mount"),lr(p)&&(A.ctx.renderer=X),ft(A,"init"),fd(A),dt(A,"init"),A.asyncDep){if(T&&T.registerDep(A,V),!p.el){const b=A.subTree=D(Te);g(null,b,h,E)}return}V(A,p,h,E,T,H,P),kr(),dt(A,"mount")},_=(p,h,E)=>{const O=h.component=p.component;if(cf(p,h,E))if(O.asyncDep&&!O.asyncResolved){xr(h),ye(O,h,E),kr();return}else O.next=h,Bu(O.update),O.update();else h.component=p.component,h.el=p.el,O.vnode=h},V=(p,h,E,O,T,H,P)=>{const A=()=>{if(p.isMounted){let{next:W,bu:J,u:U,parent:Q,vnode:oe}=p,ae=W,fe;xr(W||p.vnode),zt(p,!1),W?(W.el=oe.el,ye(p,W,P)):W=oe,J&&wn(J),(fe=W.props&&W.props.onVnodeBeforeUpdate)&&st(fe,Q,W,oe),zt(p,!0),ft(p,"render");const he=Eo(p);dt(p,"render");const nt=p.subTree;p.subTree=he,ft(p,"patch"),x(nt,he,f(nt.el),re(nt),p,T,H),dt(p,"patch"),W.el=he.el,ae===null&&uf(p,he.el),U&&De(U,T),(fe=W.props&&W.props.onVnodeUpdated)&&De(()=>st(fe,Q,W,oe),T),cl(p),kr()}else{let W;const{el:J,props:U}=h,{bm:Q,m:oe,parent:ae}=p,fe=jr(h);if(zt(p,!1),Q&&wn(Q),!fe&&(W=U&&U.onVnodeBeforeMount)&&st(W,ae,h),zt(p,!0),J&&le){const he=()=>{ft(p,"render"),p.subTree=Eo(p),dt(p,"render"),ft(p,"hydrate"),le(J,p.subTree,p,T,null),dt(p,"hydrate")};fe?h.type.__asyncLoader().then(()=>!p.isUnmounted&&he()):he()}else{ft(p,"render");const he=p.subTree=Eo(p);dt(p,"render"),ft(p,"patch"),x(null,he,E,O,p,T,H),dt(p,"patch"),h.el=he.el}if(oe&&De(oe,T),!fe&&(W=U&&U.onVnodeMounted)){const he=h;De(()=>st(W,ae,he),T)}h.shapeFlag&256&&p.a&&De(p.a,T),p.isMounted=!0,$u(p),h=E=O=null}},b=p.effect=new Is(A,()=>js(p.update),p.scope),v=p.update=b.run.bind(b);v.id=p.uid,zt(p,!0),b.onTrack=p.rtc?W=>wn(p.rtc,W):void 0,b.onTrigger=p.rtg?W=>wn(p.rtg,W):void 0,v.ownerInstance=p,v()},ye=(p,h,E)=>{h.component=p;const O=p.vnode.props;p.vnode=h,p.next=null,Lf(p,h.props,O,E),Zf(p,h.children,E),fn(),Hs(void 0,p.update),dn()},je=(p,h,E,O,T,H,P,A,b=!1)=>{const v=p&&p.children,W=p?p.shapeFlag:0,J=h.children,{patchFlag:U,shapeFlag:Q}=h;if(U>0){if(U&128){we(v,J,E,O,T,H,P,A,b);return}else if(U&256){Ne(v,J,E,O,T,H,P,A,b);return}}Q&8?(W&16&&Z(v,T,H),J!==v&&u(E,J)):W&16?Q&16?we(v,J,E,O,T,H,P,A,b):Z(v,T,H,!0):(W&8&&u(E,""),Q&16&&K(J,E,O,T,H,P,A,b))},Ne=(p,h,E,O,T,H,P,A,b)=>{p=p||Rn,h=h||Rn;const v=p.length,W=h.length,J=Math.min(v,W);let U;for(U=0;U<J;U++){const Q=h[U]=b?It(h[U]):rt(h[U]);x(p[U],Q,E,null,T,H,P,A,b)}v>W?Z(p,T,H,!0,!1,J):K(h,E,O,T,H,P,A,b,J)},we=(p,h,E,O,T,H,P,A,b)=>{let v=0;const W=h.length;let J=p.length-1,U=W-1;for(;v<=J&&v<=U;){const Q=p[v],oe=h[v]=b?It(h[v]):rt(h[v]);if(Kt(Q,oe))x(Q,oe,E,null,T,H,P,A,b);else break;v++}for(;v<=J&&v<=U;){const Q=p[J],oe=h[U]=b?It(h[U]):rt(h[U]);if(Kt(Q,oe))x(Q,oe,E,null,T,H,P,A,b);else break;J--,U--}if(v>J){if(v<=U){const Q=U+1,oe=Q<W?h[Q].el:O;for(;v<=U;)x(null,h[v]=b?It(h[v]):rt(h[v]),E,oe,T,H,P,A,b),v++}}else if(v>U)for(;v<=J;)Fe(p[v],T,H,!0),v++;else{const Q=v,oe=v,ae=new Map;for(v=oe;v<=U;v++){const ze=h[v]=b?It(h[v]):rt(h[v]);ze.key!=null&&(ae.has(ze.key)&&L("Duplicate keys found during update:",JSON.stringify(ze.key),"Make sure keys are unique."),ae.set(ze.key,v))}let fe,he=0;const nt=U-oe+1;let mn=!1,Qs=0;const Ln=new Array(nt);for(v=0;v<nt;v++)Ln[v]=0;for(v=Q;v<=J;v++){const ze=p[v];if(he>=nt){Fe(ze,T,H,!0);continue}let ot;if(ze.key!=null)ot=ae.get(ze.key);else for(fe=oe;fe<=U;fe++)if(Ln[fe-oe]===0&&Kt(ze,h[fe])){ot=fe;break}ot===void 0?Fe(ze,T,H,!0):(Ln[ot-oe]=v+1,ot>=Qs?Qs=ot:mn=!0,x(ze,h[ot],E,null,T,H,P,A,b),he++)}const _s=mn?Xf(Ln):Rn;for(fe=_s.length-1,v=nt-1;v>=0;v--){const ze=oe+v,ot=h[ze],$s=ze+1<W?h[ze+1].el:O;Ln[v]===0?x(null,ot,E,$s,T,H,P,A,b):mn&&(fe<0||v!==_s[fe]?tt(ot,E,$s,2):fe--)}}},tt=(p,h,E,O,T=null)=>{const{el:H,type:P,transition:A,children:b,shapeFlag:v}=p;if(v&6){tt(p.component.subTree,h,E,O);return}if(v&128){p.suspense.move(h,E,O);return}if(v&64){P.move(p,h,E,X);return}if(P===He){r(H,h,E);for(let J=0;J<b.length;J++)tt(b[J],h,E,O);r(p.anchor,h,E);return}if(P===Vn){k(p,h,E);return}if(O!==2&&v&1&&A)if(O===0)A.beforeEnter(H),r(H,h,E),De(()=>A.enter(H),T);else{const{leave:J,delayLeave:U,afterLeave:Q}=A,oe=()=>r(H,h,E),ae=()=>{J(H,()=>{oe(),Q&&Q()})};U?U(H,oe,ae):ae()}else r(H,h,E)},Fe=(p,h,E,O=!1,T=!1)=>{const{type:H,props:P,ref:A,children:b,dynamicChildren:v,shapeFlag:W,patchFlag:J,dirs:U}=p;if(A!=null&&Qo(A,null,E,p,!0),W&256){h.ctx.deactivate(p);return}const Q=W&1&&U,oe=!jr(p);let ae;if(oe&&(ae=P&&P.onVnodeBeforeUnmount)&&st(ae,h,p),W&6)N(p.component,E,O);else{if(W&128){p.suspense.unmount(E,O);return}Q&&Nt(p,null,h,"beforeUnmount"),W&64?p.type.remove(p,h,E,T,X,O):v&&(H!==He||J>0&&J&64)?Z(v,h,E,!1,!0):(H===He&&J&384||!T&&W&16)&&Z(b,h,E),O&&S(p)}(oe&&(ae=P&&P.onVnodeUnmounted)||Q)&&De(()=>{ae&&st(ae,h,p),Q&&Nt(p,null,h,"unmounted")},E)},S=p=>{const{type:h,el:E,anchor:O,transition:T}=p;if(h===He){p.patchFlag>0&&p.patchFlag&2048&&T&&!T.persisted?p.children.forEach(P=>{P.type===Te?o(P.el):S(P)}):G(E,O);return}if(h===Vn){M(p);return}const H=()=>{o(E),T&&!T.persisted&&T.afterLeave&&T.afterLeave()};if(p.shapeFlag&1&&T&&!T.persisted){const{leave:P,delayLeave:A}=T,b=()=>P(E,H);A?A(p.el,H,b):b()}else H()},G=(p,h)=>{let E;for(;p!==h;)E=d(p),o(p),p=E;o(h)},N=(p,h,E)=>{p.type.__hmrId&&Ku(p);const{bum:O,scope:T,update:H,subTree:P,um:A}=p;O&&wn(O),T.stop(),H&&(H.active=!1,Fe(P,p,h,E)),A&&De(A,h),De(()=>{p.isUnmounted=!0},h),h&&h.pendingBranch&&!h.isUnmounted&&p.asyncDep&&!p.asyncResolved&&p.suspenseId===h.pendingId&&(h.deps--,h.deps===0&&h.resolve()),ef(p)},Z=(p,h,E,O=!1,T=!1,H=0)=>{for(let P=H;P<p.length;P++)Fe(p[P],h,E,O,T)},re=p=>p.shapeFlag&6?re(p.component.subTree):p.shapeFlag&128?p.suspense.next():d(p.anchor||p.el),pe=(p,h,E)=>{p==null?h._vnode&&Fe(h._vnode,null,null,!0):x(h._vnode||null,p,h,null,null,null,E),sl(),h._vnode=p},X={p:x,um:Fe,m:tt,r:S,mt:ge,mc:K,pc:je,pbc:z,n:re,o:e};let ee,le;return t&&([ee,le]=t(X)),{render:pe,hydrate:ee,createApp:Uf(pe,ee)}}function zt({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function Fr(e,t,n=!1){const r=e.children,o=t.children;if(q(r)&&q(o))for(let s=0;s<r.length;s++){const i=r[s];let a=o[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=o[s]=It(o[s]),a.el=i.el),n||Fr(i,a)),a.type===Te&&!a.el&&(a.el=i.el)}}function Xf(e){const t=e.slice(),n=[0];let r,o,s,i,a;const l=e.length;for(r=0;r<l;r++){const c=e[r];if(c!==0){if(o=n[n.length-1],e[o]<c){t[r]=o,n.push(r);continue}for(s=0,i=n.length-1;s<i;)a=s+i>>1,e[n[a]]<c?s=a+1:i=a;c<e[n[s]]&&(s>0&&(t[r]=n[s-1]),n[s]=r)}}for(s=n.length,i=n[s-1];s-- >0;)n[s]=i,i=t[i];return n}const Qf=e=>e.__isTeleport,Pr="components";function io(e,t){return Al(Pr,e,!0,t)||e}const Ol=Symbol();function _f(e){return Ee(e)?Al(Pr,e,!1)||e:e||Ol}function Al(e,t,n=!0,r=!1){const o=Ce||Ie;if(o){const s=o.type;if(e===Pr){const a=Ns(s);if(a&&(a===t||a===ct(t)||a===sn(ct(t))))return s}const i=ki(o[e]||s[e],t)||ki(o.appContext[e],t);if(!i&&r)return s;if(n&&!i){const a=e===Pr?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";L(`Failed to resolve ${e.slice(0,-1)}: ${t}${a}`)}return i}else L(`resolve${sn(e.slice(0,-1))} can only be used in render() or setup().`)}function ki(e,t){return e&&(e[t]||e[ct(t)]||e[sn(ct(t))])}const He=Symbol("Fragment"),In=Symbol("Text"),Te=Symbol("Comment"),Vn=Symbol("Static"),Kn=[];let rn=null;function Xe(e=!1){Kn.push(rn=e?null:[])}function $f(){Kn.pop(),rn=Kn[Kn.length-1]||null}let Jr=1;function Ei(e){Jr+=e}function jl(e){return e.dynamicChildren=Jr>0?rn||Rn:null,$f(),Jr>0&&rn&&rn.push(e),e}function At(e,t,n,r,o,s){return jl(ve(e,t,n,r,o,s,!0))}function ur(e,t,n,r,o){return jl(D(e,t,n,r,o,!0))}function Lt(e){return e?e.__v_isVNode===!0:!1}function Kt(e,t){return t.shapeFlag&6&&kn.has(t.type)?!1:e.type===t.type&&e.key===t.key}const ed=(...e)=>td(...e),ao="__vInternal",Hl=({key:e})=>e!=null?e:null,Sr=({ref:e,ref_key:t,ref_for:n})=>e!=null?Ee(e)||Re(e)||$(e)?{i:Ce,r:e,k:t,f:!!n}:e:null;function ve(e,t=null,n=null,r=0,o=null,s=e===He?0:1,i=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Hl(t),ref:t&&Sr(t),scopeId:no,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:r,dynamicProps:o,dynamicChildren:null,appContext:null};return a?(Ys(l,n),s&128&&e.normalize(l)):n&&(l.shapeFlag|=Ee(n)?8:16),l.key!==l.key&&L("VNode created with invalid key (NaN). VNode type:",l.type),Jr>0&&!i&&rn&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&rn.push(l),l}const D=ed;function td(e,t=null,n=null,r=0,o=null,s=!1){if((!e||e===Ol)&&(e||L(`Invalid vnode type when creating vnode: ${e}.`),e=Te),Lt(e)){const a=bt(e,t,!0);return n&&Ys(a,n),a}if(Wl(e)&&(e=e.__vccOpts),t){t=nd(t);let{class:a,style:l}=t;a&&!Ee(a)&&(t.class=Br(a)),be(l)&&(zo(l)&&!q(l)&&(l=xe({},l)),t.style=ws(l))}const i=Ee(e)?1:ff(e)?128:Qf(e)?64:be(e)?4:$(e)?2:0;return i&4&&zo(e)&&(e=ne(e),L("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,e)),ve(e,t,n,r,o,i,s,!0)}function nd(e){return e?zo(e)||ao in e?xe({},e):e:null}function bt(e,t,n=!1){const{props:r,ref:o,patchFlag:s,children:i}=e,a=t?rd(r||{},t):r;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:a,key:a&&Hl(a),ref:t&&t.ref?n&&o?q(o)?o.concat(Sr(t)):[o,Sr(t)]:Sr(t):o,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:s===-1&&q(i)?i.map(Ll):i,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==He?s===-1?16:s|16:s,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&bt(e.ssContent),ssFallback:e.ssFallback&&bt(e.ssFallback),el:e.el,anchor:e.anchor}}function Ll(e){const t=bt(e);return q(e.children)&&(t.children=e.children.map(Ll)),t}function Je(e=" ",t=0){return D(In,null,e,t)}function Pl(e="",t=!1){return t?(Xe(),ur(Te,null,e)):D(Te,null,e)}function rt(e){return e==null||typeof e=="boolean"?D(Te):q(e)?D(He,null,e.slice()):typeof e=="object"?It(e):D(In,null,String(e))}function It(e){return e.el===null||e.memo?e:bt(e)}function Ys(e,t){let n=0;const{shapeFlag:r}=e;if(t==null)t=null;else if(q(t))n=16;else if(typeof t=="object")if(r&65){const o=t.default;o&&(o._c&&(o._d=!1),Ys(e,o()),o._c&&(o._d=!0));return}else{n=32;const o=t._;!o&&!(ao in t)?t._ctx=Ce:o===3&&Ce&&(Ce.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else $(t)?(t={default:t,_ctx:Ce},n=32):(t=String(t),r&64?(n=16,t=[Je(t)]):n=8);e.children=t,e.shapeFlag|=n}function rd(...e){const t={};for(let n=0;n<e.length;n++){const r=e[n];for(const o in r)if(o==="class")t.class!==r.class&&(t.class=Br([t.class,r.class]));else if(o==="style")t.style=ws([t.style,r.style]);else if(sr(o)){const s=t[o],i=r[o];i&&s!==i&&!(q(s)&&s.includes(i))&&(t[o]=s?[].concat(s,i):i)}else o!==""&&(t[o]=r[o])}return t}function st(e,t,n,r=null){et(e,t,7,[n,r])}function Rr(e,t,n={},r,o){if(Ce.isCE||Ce.parent&&jr(Ce.parent)&&Ce.parent.isCE)return D("slot",t==="default"?null:{name:t},r&&r());let s=e[t];s&&s.length>1&&(L("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),s=()=>[]),s&&s._c&&(s._d=!1),Xe();const i=s&&Jl(s(n)),a=ur(He,{key:n.key||`_${t}`},i||(r?r():[]),i&&e._===1?64:-2);return!o&&a.scopeId&&(a.slotScopeIds=[a.scopeId+"-s"]),s&&s._c&&(s._d=!0),a}function Jl(e){return e.some(t=>Lt(t)?!(t.type===Te||t.type===He&&!Jl(t.children)):!0)?e:null}const _o=e=>e?Nl(e)?lo(e)||e.proxy:_o(e.parent):null,Cn=xe(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>En(e.props),$attrs:e=>En(e.attrs),$slots:e=>En(e.slots),$refs:e=>En(e.refs),$parent:e=>_o(e.parent),$root:e=>_o(e.root),$emit:e=>e.emit,$options:e=>kl(e),$forceUpdate:e=>()=>js(e.update),$nextTick:e=>tl.bind(e.proxy),$watch:e=>mf.bind(e)}),Yl={get({_:e},t){const{ctx:n,setupState:r,data:o,props:s,accessCache:i,type:a,appContext:l}=e;if(t==="__isVue")return!0;if(r!==ue&&r.__isScriptSetup&&se(r,t))return r[t];let c;if(t[0]!=="$"){const w=i[t];if(w!==void 0)switch(w){case 1:return r[t];case 2:return o[t];case 4:return n[t];case 3:return s[t]}else{if(r!==ue&&se(r,t))return i[t]=1,r[t];if(o!==ue&&se(o,t))return i[t]=2,o[t];if((c=e.propsOptions[0])&&se(c,t))return i[t]=3,s[t];if(n!==ue&&se(n,t))return i[t]=4,n[t];Vo&&(i[t]=0)}}const u=Cn[t];let f,d;if(u)return t==="$attrs"&&(Qe(e,"get",t),Ar()),u(e);if((f=a.__cssModules)&&(f=f[t]))return f;if(n!==ue&&se(n,t))return i[t]=4,n[t];if(d=l.config.globalProperties,se(d,t))return d[t];Ce&&(!Ee(t)||t.indexOf("__v")!==0)&&(o!==ue&&(t[0]==="$"||t[0]==="_")&&se(o,t)?L(`Property ${JSON.stringify(t)} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`):e===Ce&&L(`Property ${JSON.stringify(t)} was accessed during render but is not defined on instance.`))},set({_:e},t,n){const{data:r,setupState:o,ctx:s}=e;return o!==ue&&se(o,t)?(o[t]=n,!0):r!==ue&&se(r,t)?(r[t]=n,!0):se(e.props,t)?(L(`Attempting to mutate prop "${t}". Props are readonly.`,e),!1):t[0]==="$"&&t.slice(1)in e?(L(`Attempting to mutate public property "${t}". Properties starting with $ are reserved and readonly.`,e),!1):(t in e.appContext.config.globalProperties?Object.defineProperty(s,t,{enumerable:!0,configurable:!0,value:n}):s[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:o,propsOptions:s}},i){let a;return!!n[i]||e!==ue&&se(e,i)||t!==ue&&se(t,i)||(a=s[0])&&se(a,i)||se(r,i)||se(Cn,i)||se(o.config.globalProperties,i)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:se(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};Yl.ownKeys=e=>(L("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(e));function od(e){const t={};return Object.defineProperty(t,"_",{configurable:!0,enumerable:!1,get:()=>e}),Object.keys(Cn).forEach(n=>{Object.defineProperty(t,n,{configurable:!0,enumerable:!1,get:()=>Cn[n](e),set:Ue})}),t}function sd(e){const{ctx:t,propsOptions:[n]}=e;n&&Object.keys(n).forEach(r=>{Object.defineProperty(t,r,{enumerable:!0,configurable:!0,get:()=>e.props[r],set:Ue})})}function id(e){const{ctx:t,setupState:n}=e;Object.keys(ne(n)).forEach(r=>{if(!n.__isScriptSetup){if(r[0]==="$"||r[0]==="_"){L(`setup() return property ${JSON.stringify(r)} should not start with "$" or "_" which are reserved prefixes for Vue internals.`);return}Object.defineProperty(t,r,{enumerable:!0,configurable:!0,get:()=>n[r],set:Ue})}})}const ad=Tl();let ld=0;function cd(e,t,n){const r=e.type,o=(t?t.appContext:e.appContext)||ad,s={uid:ld++,vnode:e,type:r,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new ou(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Fl(r,o),emitsOptions:fl(r,o),emit:null,emitted:null,propsDefaults:ue,inheritAttrs:r.inheritAttrs,ctx:ue,data:ue,props:ue,attrs:ue,slots:ue,refs:ue,setupState:ue,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx=od(s),s.root=t?t.root:s,s.emit=of.bind(null,s),e.ce&&e.ce(s),s}let Ie=null;const pn=()=>Ie||Ce,Tn=e=>{Ie=e,e.scope.on()},on=()=>{Ie&&Ie.scope.off(),Ie=null},ud=Jt("slot,component");function $o(e,t){const n=t.isNativeTag||Ca;(ud(e)||n(e))&&L("Do not use built-in or reserved HTML elements as component id: "+e)}function Nl(e){return e.vnode.shapeFlag&4}let er=!1;function fd(e,t=!1){er=t;const{props:n,children:r}=e.vnode,o=Nl(e);Hf(e,n,o,t),Gf(e,r);const s=o?dd(e,t):void 0;return er=!1,s}function dd(e,t){var n;const r=e.type;{if(r.name&&$o(r.name,e.appContext.config),r.components){const s=Object.keys(r.components);for(let i=0;i<s.length;i++)$o(s[i],e.appContext.config)}if(r.directives){const s=Object.keys(r.directives);for(let i=0;i<s.length;i++)Cl(s[i])}r.compilerOptions&&pd()&&L('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}e.accessCache=Object.create(null),e.proxy=Ka(new Proxy(e.ctx,Yl)),sd(e);const{setup:o}=r;if(o){const s=e.setupContext=o.length>1?md(e):null;Tn(e),fn();const i=mt(o,e,0,[En(e.props),s]);if(dn(),on(),Es(i)){if(i.then(on,on),t)return i.then(a=>{Fi(e,a,t)}).catch(a=>{eo(a,e,0)});if(e.asyncDep=i,!e.suspense){const a=(n=r.name)!==null&&n!==void 0?n:"Anonymous";L(`Component <${a}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`)}}else Fi(e,i,t)}else zl(e,t)}function Fi(e,t,n){$(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:be(t)?(Lt(t)&&L("setup() should not return VNodes directly - return a render function instead."),e.devtoolsRawSetupState=t,e.setupState=_a(t),id(e)):t!==void 0&&L(`setup() should return an object. Received: ${t===null?"null":typeof t}`),zl(e,n)}let es;const pd=()=>!es;function zl(e,t,n){const r=e.type;if(!e.render){if(!t&&es&&!r.render){const o=r.template;if(o){ft(e,"compile");const{isCustomElement:s,compilerOptions:i}=e.appContext.config,{delimiters:a,compilerOptions:l}=r,c=xe(xe({isCustomElement:s,delimiters:a},i),l);r.render=es(o,c),dt(e,"compile")}}e.render=r.render||Ue}Tn(e),fn(),Cf(e),dn(),on(),!r.render&&e.render===Ue&&!t&&(r.template?L('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):L("Component is missing template or render function."))}function hd(e){return new Proxy(e.attrs,{get(t,n){return Ar(),Qe(e,"get","$attrs"),t[n]},set(){return L("setupContext.attrs is readonly."),!1},deleteProperty(){return L("setupContext.attrs is readonly."),!1}})}function md(e){const t=r=>{e.exposed&&L("expose() should be called only once per setup()."),e.exposed=r||{}};let n;return Object.freeze({get attrs(){return n||(n=hd(e))},get slots(){return En(e.slots)},get emit(){return(r,...o)=>e.emit(r,...o)},expose:t})}function lo(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(_a(Ka(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in Cn)return Cn[n](e)}}))}const gd=/(?:^|[-_])(\w)/g,yd=e=>e.replace(gd,t=>t.toUpperCase()).replace(/[-_]/g,"");function Ns(e){return $(e)&&e.displayName||e.name}function co(e,t,n=!1){let r=Ns(t);if(!r&&t.__file){const o=t.__file.match(/([^/\\]+)\.\w+$/);o&&(r=o[1])}if(!r&&e&&e.parent){const o=s=>{for(const i in s)if(s[i]===t)return i};r=o(e.components||e.parent.type.components)||o(e.appContext.components)}return r?yd(r):n?"App":"Anonymous"}function Wl(e){return $(e)&&"__vccOpts"in e}const ke=(e,t)=>Ju(e,t,er);function lt(e,t,n){const r=arguments.length;return r===2?be(t)&&!q(t)?Lt(t)?D(e,null,[t]):D(e,t):D(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):r===3&&Lt(n)&&(n=[n]),D(e,t,n))}function So(e){return!!(e&&e.__v_isShallow)}function bd(){if(typeof window=="undefined")return;const e={style:"color:#3ba776"},t={style:"color:#0b1bc9"},n={style:"color:#b62e24"},r={style:"color:#9d288c"},o={header(f){return be(f)?f.__isVue?["div",e,"VueInstance"]:Re(f)?["div",{},["span",e,u(f)],"<",a(f.value),">"]:$t(f)?["div",{},["span",e,So(f)?"ShallowReactive":"Reactive"],"<",a(f),`>${an(f)?" (readonly)":""}`]:an(f)?["div",{},["span",e,So(f)?"ShallowReadonly":"Readonly"],"<",a(f),">"]:null:null},hasBody(f){return f&&f.__isVue},body(f){if(f&&f.__isVue)return["div",{},...s(f.$)]}};function s(f){const d=[];f.type.props&&f.props&&d.push(i("props",ne(f.props))),f.setupState!==ue&&d.push(i("setup",f.setupState)),f.data!==ue&&d.push(i("data",ne(f.data)));const w=l(f,"computed");w&&d.push(i("computed",w));const F=l(f,"inject");return F&&d.push(i("injected",F)),d.push(["div",{},["span",{style:r.style+";opacity:0.66"},"$ (internal): "],["object",{object:f}]]),d}function i(f,d){return d=xe({},d),Object.keys(d).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},f],["div",{style:"padding-left:1.25em"},...Object.keys(d).map(w=>["div",{},["span",r,w+": "],a(d[w],!1)])]]:["span",{}]}function a(f,d=!0){return typeof f=="number"?["span",t,f]:typeof f=="string"?["span",n,JSON.stringify(f)]:typeof f=="boolean"?["span",r,f]:be(f)?["object",{object:d?ne(f):f}]:["span",n,String(f)]}function l(f,d){const w=f.type;if($(w))return;const F={};for(const I in f.ctx)c(w,I,d)&&(F[I]=f.ctx[I]);return F}function c(f,d,w){const F=f[w];if(q(F)&&F.includes(d)||be(F)&&d in F||f.extends&&c(f.extends,d,w)||f.mixins&&f.mixins.some(I=>c(I,d,w)))return!0}function u(f){return So(f)?"ShallowRef":f.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(o):window.devtoolsFormatters=[o]}const Si="3.2.33",vd="http://www.w3.org/2000/svg",qt=typeof document!="undefined"?document:null,Ri=qt&&qt.createElement("template"),wd={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,r)=>{const o=t?qt.createElementNS(vd,e):qt.createElement(e,n?{is:n}:void 0);return e==="select"&&r&&r.multiple!=null&&o.setAttribute("multiple",r.multiple),o},createText:e=>qt.createTextNode(e),createComment:e=>qt.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>qt.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},cloneNode(e){const t=e.cloneNode(!0);return"_value"in e&&(t._value=e._value),t},insertStaticContent(e,t,n,r,o,s){const i=n?n.previousSibling:t.lastChild;if(o&&(o===s||o.nextSibling))for(;t.insertBefore(o.cloneNode(!0),n),!(o===s||!(o=o.nextSibling)););else{Ri.innerHTML=r?`<svg>${e}</svg>`:e;const a=Ri.content;if(r){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}t.insertBefore(a,n)}return[i?i.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function xd(e,t,n){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function kd(e,t,n){const r=e.style,o=Ee(n);if(n&&!o){for(const s in n)ts(r,s,n[s]);if(t&&!Ee(t))for(const s in t)n[s]==null&&ts(r,s,"")}else{const s=r.display;o?t!==n&&(r.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=s)}}const Mi=/\s*!important$/;function ts(e,t,n){if(q(n))n.forEach(r=>ts(e,t,r));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const r=Ed(e,t);Mi.test(n)?e.setProperty(jt(r),n.replace(Mi,""),"important"):e[r]=n}}const Ii=["Webkit","Moz","ms"],Ro={};function Ed(e,t){const n=Ro[t];if(n)return n;let r=ct(t);if(r!=="filter"&&r in e)return Ro[t]=r;r=sn(r);for(let o=0;o<Ii.length;o++){const s=Ii[o]+r;if(s in e)return Ro[t]=s}return t}const Ci="http://www.w3.org/1999/xlink";function Fd(e,t,n,r,o){if(r&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(Ci,t.slice(6,t.length)):e.setAttributeNS(Ci,t,n);else{const s=Zc(t);n==null||s&&!Ma(n)?e.removeAttribute(t):e.setAttribute(t,s?"":n)}}function Sd(e,t,n,r,o,s,i){if(t==="innerHTML"||t==="textContent"){r&&i(r,o,s),e[t]=n==null?"":n;return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=n;const l=n==null?"":n;(e.value!==l||e.tagName==="OPTION")&&(e.value=l),n==null&&e.removeAttribute(t);return}let a=!1;if(n===""||n==null){const l=typeof e[t];l==="boolean"?n=Ma(n):n==null&&l==="string"?(n="",a=!0):l==="number"&&(n=0,a=!0)}try{e[t]=n}catch(l){L(`Failed setting prop "${t}" on <${e.tagName.toLowerCase()}>: value ${n} is invalid.`,l)}a&&e.removeAttribute(t)}const[Gl,Rd]=(()=>{let e=Date.now,t=!1;if(typeof window!="undefined"){Date.now()>document.createEvent("Event").timeStamp&&(e=()=>performance.now());const n=navigator.userAgent.match(/firefox\/(\d+)/i);t=!!(n&&Number(n[1])<=53)}return[e,t]})();let ns=0;const Md=Promise.resolve(),Id=()=>{ns=0},Cd=()=>ns||(Md.then(Id),ns=Gl());function Zl(e,t,n,r){e.addEventListener(t,n,r)}function Td(e,t,n,r){e.removeEventListener(t,n,r)}function Od(e,t,n,r,o=null){const s=e._vei||(e._vei={}),i=s[t];if(r&&i)i.value=r;else{const[a,l]=Ad(t);if(r){const c=s[t]=jd(r,o);Zl(e,a,c,l)}else i&&(Td(e,a,i,l),s[t]=void 0)}}const Ti=/(?:Once|Passive|Capture)$/;function Ad(e){let t;if(Ti.test(e)){t={};let n;for(;n=e.match(Ti);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[jt(e.slice(2)),t]}function jd(e,t){const n=r=>{const o=r.timeStamp||Gl();(Rd||o>=n.attached-1)&&et(Hd(r,n.value),t,5,[r])};return n.value=e,n.attached=Cd(),n}function Hd(e,t){if(q(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(r=>o=>!o._stopped&&r&&r(o))}else return t}const Oi=/^on[a-z]/,Ld=(e,t,n,r,o=!1,s,i,a,l)=>{t==="class"?xd(e,r,o):t==="style"?kd(e,n,r):sr(t)?Ir(t)||Od(e,t,n,r,i):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):Pd(e,t,r,o))?Sd(e,t,r,s,i,a,l):(t==="true-value"?e._trueValue=r:t==="false-value"&&(e._falseValue=r),Fd(e,t,r,o))};function Pd(e,t,n,r){return r?!!(t==="innerHTML"||t==="textContent"||t in e&&Oi.test(t)&&$(n)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||Oi.test(t)&&Ee(n)?!1:t in e}function Jd(e){const t=pn();if(!t){L("useCssVars is called without current active component instance.");return}const n=()=>rs(t.subTree,e(t.proxy));hf(n),cr(()=>{const r=new MutationObserver(n);r.observe(t.subTree.el.parentNode,{childList:!0}),so(()=>r.disconnect())})}function rs(e,t){if(e.shapeFlag&128){const n=e.suspense;e=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push(()=>{rs(n.activeBranch,t)})}for(;e.component;)e=e.component.subTree;if(e.shapeFlag&1&&e.el)Ai(e.el,t);else if(e.type===He)e.children.forEach(n=>rs(n,t));else if(e.type===Vn){let{el:n,anchor:r}=e;for(;n&&(Ai(n,t),n!==r);)n=n.nextSibling}}function Ai(e,t){if(e.nodeType===1){const n=e.style;for(const r in t)n.setProperty(`--${r}`,t[r])}}const Et="transition",Jn="animation",zs=(e,{slots:t})=>lt(gl,Yd(e),t);zs.displayName="Transition";const Dl={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};zs.props=xe({},gl.props,Dl);const Wt=(e,t=[])=>{q(e)?e.forEach(n=>n(...t)):e&&e(...t)},ji=e=>e?q(e)?e.some(t=>t.length>1):e.length>1:!1;function Yd(e){const t={};for(const z in e)z in Dl||(t[z]=e[z]);if(e.css===!1)return t;const{name:n="v",type:r,duration:o,enterFromClass:s=`${n}-enter-from`,enterActiveClass:i=`${n}-enter-active`,enterToClass:a=`${n}-enter-to`,appearFromClass:l=s,appearActiveClass:c=i,appearToClass:u=a,leaveFromClass:f=`${n}-leave-from`,leaveActiveClass:d=`${n}-leave-active`,leaveToClass:w=`${n}-leave-to`}=e,F=Nd(o),I=F&&F[0],x=F&&F[1],{onBeforeEnter:R,onEnter:g,onEnterCancelled:m,onLeave:y,onLeaveCancelled:k,onBeforeAppear:M=R,onAppear:C=g,onAppearCancelled:Y=m}=t,j=(z,de,Me)=>{gn(z,de?u:a),gn(z,de?c:i),Me&&Me()},K=(z,de)=>{gn(z,w),gn(z,d),de&&de()},te=z=>(de,Me)=>{const Ae=z?C:g,ge=()=>j(de,z,Me);Wt(Ae,[de,ge]),Hi(()=>{gn(de,z?l:s),Ft(de,z?u:a),ji(Ae)||Li(de,r,I,ge)})};return xe(t,{onBeforeEnter(z){Wt(R,[z]),Ft(z,s),Ft(z,i)},onBeforeAppear(z){Wt(M,[z]),Ft(z,l),Ft(z,c)},onEnter:te(!1),onAppear:te(!0),onLeave(z,de){const Me=()=>K(z,de);Ft(z,f),Zd(),Ft(z,d),Hi(()=>{gn(z,f),Ft(z,w),ji(y)||Li(z,r,x,Me)}),Wt(y,[z,Me])},onEnterCancelled(z){j(z,!1),Wt(m,[z])},onAppearCancelled(z){j(z,!0),Wt(Y,[z])},onLeaveCancelled(z){K(z),Wt(k,[z])}})}function Nd(e){if(e==null)return null;if(be(e))return[Mo(e.enter),Mo(e.leave)];{const t=Mo(e);return[t,t]}}function Mo(e){const t=Rs(e);return zd(t),t}function zd(e){typeof e!="number"?L(`<transition> explicit duration is not a valid number - got ${JSON.stringify(e)}.`):isNaN(e)&&L("<transition> explicit duration is NaN - the duration expression might be incorrect.")}function Ft(e,t){t.split(/\s+/).forEach(n=>n&&e.classList.add(n)),(e._vtc||(e._vtc=new Set)).add(t)}function gn(e,t){t.split(/\s+/).forEach(r=>r&&e.classList.remove(r));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function Hi(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let Wd=0;function Li(e,t,n,r){const o=e._endId=++Wd,s=()=>{o===e._endId&&r()};if(n)return setTimeout(s,n);const{type:i,timeout:a,propCount:l}=Gd(e,t);if(!i)return r();const c=i+"end";let u=0;const f=()=>{e.removeEventListener(c,d),s()},d=w=>{w.target===e&&++u>=l&&f()};setTimeout(()=>{u<l&&f()},a+1),e.addEventListener(c,d)}function Gd(e,t){const n=window.getComputedStyle(e),r=F=>(n[F]||"").split(", "),o=r(Et+"Delay"),s=r(Et+"Duration"),i=Pi(o,s),a=r(Jn+"Delay"),l=r(Jn+"Duration"),c=Pi(a,l);let u=null,f=0,d=0;t===Et?i>0&&(u=Et,f=i,d=s.length):t===Jn?c>0&&(u=Jn,f=c,d=l.length):(f=Math.max(i,c),u=f>0?i>c?Et:Jn:null,d=u?u===Et?s.length:l.length:0);const w=u===Et&&/\b(transform|all)(,|$)/.test(n[Et+"Property"]);return{type:u,timeout:f,propCount:d,hasTransform:w}}function Pi(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max(...t.map((n,r)=>Ji(n)+Ji(e[r])))}function Ji(e){return Number(e.slice(0,-1).replace(",","."))*1e3}function Zd(){return document.body.offsetHeight}const Yi=e=>{const t=e.props["onUpdate:modelValue"];return q(t)?n=>wn(t,n):t},Dd={deep:!0,created(e,{value:t,modifiers:{number:n}},r){const o=Vr(t);Zl(e,"change",()=>{const s=Array.prototype.filter.call(e.options,i=>i.selected).map(i=>n?Rs(Yr(i)):Yr(i));e._assign(e.multiple?o?new Set(s):s:s[0])}),e._assign=Yi(r)},mounted(e,{value:t}){Ni(e,t)},beforeUpdate(e,t,n){e._assign=Yi(n)},updated(e,{value:t}){Ni(e,t)}};function Ni(e,t){const n=e.multiple;if(n&&!q(t)&&!Vr(t)){L(`<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(t).slice(8,-1)}.`);return}for(let r=0,o=e.options.length;r<o;r++){const s=e.options[r],i=Yr(s);if(n)q(t)?s.selected=_c(t,i)>-1:s.selected=t.has(i);else if(Ur(Yr(s),t)){e.selectedIndex!==r&&(e.selectedIndex=r);return}}!n&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}function Yr(e){return"_value"in e?e._value:e.value}const Bd=["ctrl","shift","alt","meta"],Ud={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,t)=>Bd.some(n=>e[`${n}Key`]&&!t.includes(n))},Ut=(e,t)=>(n,...r)=>{for(let o=0;o<t.length;o++){const s=Ud[t[o]];if(s&&s(n,t))return}return e(n,...r)},Vd=xe({patchProp:Ld},wd);let zi;function Kd(){return zi||(zi=Kf(Vd))}const qd=(...e)=>{const t=Kd().createApp(...e);Xd(t),Qd(t);const{mount:n}=t;return t.mount=r=>{const o=_d(r);if(!o)return;const s=t._component;!$(s)&&!s.render&&!s.template&&(s.template=o.innerHTML),o.innerHTML="";const i=n(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),i},t};function Xd(e){Object.defineProperty(e.config,"isNativeTag",{value:t=>qc(t)||Xc(t),writable:!1})}function Qd(e){{const t=e.config.isCustomElement;Object.defineProperty(e.config,"isCustomElement",{get(){return t},set(){L("The `isCustomElement` config option is deprecated. Use `compilerOptions.isCustomElement` instead.")}});const n=e.config.compilerOptions,r='The `compilerOptions` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka "full build"). Since you are using the runtime-only build, `compilerOptions` must be passed to `@vue/compiler-dom` in the build setup instead.\n- For vue-loader: pass it via vue-loader\'s `compilerOptions` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom';Object.defineProperty(e.config,"compilerOptions",{get(){return L(r),n},set(){L(r)}})}}function _d(e){if(Ee(e)){const t=document.querySelector(e);return t||L(`Failed to mount app: mount target selector "${e}" returned null.`),t}return window.ShadowRoot&&e instanceof window.ShadowRoot&&e.mode==="closed"&&L('mounting on a ShadowRoot with `{mode: "closed"}` may lead to unpredictable bugs'),e}function $d(){bd()}$d();function ep(){return Bl().__VUE_DEVTOOLS_GLOBAL_HOOK__}function Bl(){return typeof navigator!="undefined"&&typeof window!="undefined"?window:typeof global!="undefined"?global:{}}const tp=typeof Proxy=="function",np="devtools-plugin:setup",rp="plugin:settings:set";let yn,os;function op(){var e;return yn!==void 0||(typeof window!="undefined"&&window.performance?(yn=!0,os=window.performance):typeof global!="undefined"&&((e=global.perf_hooks)===null||e===void 0?void 0:e.performance)?(yn=!0,os=global.perf_hooks.performance):yn=!1),yn}function sp(){return op()?os.now():Date.now()}class ip{constructor(t,n){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=t,this.hook=n;const r={};if(t.settings)for(const i in t.settings){const a=t.settings[i];r[i]=a.defaultValue}const o=`__vue-devtools-plugin-settings__${t.id}`;let s=Object.assign({},r);try{const i=localStorage.getItem(o),a=JSON.parse(i);Object.assign(s,a)}catch{}this.fallbacks={getSettings(){return s},setSettings(i){try{localStorage.setItem(o,JSON.stringify(i))}catch{}s=i},now(){return sp()}},n&&n.on(rp,(i,a)=>{i===this.plugin.id&&this.fallbacks.setSettings(a)}),this.proxiedOn=new Proxy({},{get:(i,a)=>this.target?this.target.on[a]:(...l)=>{this.onQueue.push({method:a,args:l})}}),this.proxiedTarget=new Proxy({},{get:(i,a)=>this.target?this.target[a]:a==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(a)?(...l)=>(this.targetQueue.push({method:a,args:l,resolve:()=>{}}),this.fallbacks[a](...l)):(...l)=>new Promise(c=>{this.targetQueue.push({method:a,args:l,resolve:c})})})}async setRealTarget(t){this.target=t;for(const n of this.onQueue)this.target.on[n.method](...n.args);for(const n of this.targetQueue)n.resolve(await this.target[n.method](...n.args))}}function Ul(e,t){const n=e,r=Bl(),o=ep(),s=tp&&n.enableEarlyProxy;if(o&&(r.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!s))o.emit(np,e,t);else{const i=s?new ip(n,o):null;(r.__VUE_DEVTOOLS_PLUGINS__=r.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:n,setupFn:t,proxy:i}),i&&t(i.proxiedTarget)}}/*!
  * vue-router v4.0.14
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */const Vl=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol",jn=e=>Vl?Symbol("[vue-router]: "+e):"[vue-router]: "+e,ap=jn("router view location matched"),Wi=jn("router view depth"),Ws=jn("router"),Kl=jn("route location"),ss=jn("router view location"),pt=typeof window!="undefined";function lp(e){return e.__esModule||Vl&&e[Symbol.toStringTag]==="Module"}const me=Object.assign;function Io(e,t){const n={};for(const r in t){const o=t[r];n[r]=Array.isArray(o)?o.map(e):e(o)}return n}const qn=()=>{};function ce(e){const t=Array.from(arguments).slice(1);console.warn.apply(console,["[Vue Router warn]: "+e].concat(t))}const cp=/\/$/,up=e=>e.replace(cp,"");function Co(e,t,n="/"){let r,o={},s="",i="";const a=t.indexOf("?"),l=t.indexOf("#",a>-1?a:0);return a>-1&&(r=t.slice(0,a),s=t.slice(a+1,l>-1?l:t.length),o=e(s)),l>-1&&(r=r||t.slice(0,l),i=t.slice(l,t.length)),r=pp(r!=null?r:t,n),{fullPath:r+(s&&"?")+s+i,path:r,query:o,hash:i}}function fp(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function Gi(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function Zi(e,t,n){const r=t.matched.length-1,o=n.matched.length-1;return r>-1&&r===o&&Pt(t.matched[r],n.matched[o])&&ql(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function Pt(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function ql(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!dp(e[n],t[n]))return!1;return!0}function dp(e,t){return Array.isArray(e)?Di(e,t):Array.isArray(t)?Di(t,e):e===t}function Di(e,t){return Array.isArray(t)?e.length===t.length&&e.every((n,r)=>n===t[r]):e.length===1&&e[0]===t}function pp(e,t){if(e.startsWith("/"))return e;if(!t.startsWith("/"))return ce(`Cannot resolve a relative location without an absolute path. Trying to resolve "${e}" from "${t}". It should look like "/${t}".`),e;if(!e)return t;const n=t.split("/"),r=e.split("/");let o=n.length-1,s,i;for(s=0;s<r.length;s++)if(i=r[s],!(o===1||i==="."))if(i==="..")o--;else break;return n.slice(0,o).join("/")+"/"+r.slice(s-(s===r.length?1:0)).join("/")}var tr;(function(e){e.pop="pop",e.push="push"})(tr||(tr={}));var Xn;(function(e){e.back="back",e.forward="forward",e.unknown=""})(Xn||(Xn={}));function hp(e){if(!e)if(pt){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),up(e)}const mp=/^[^#]+#/;function gp(e,t){return e.replace(mp,"#")+t}function yp(e,t){const n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{behavior:t.behavior,left:r.left-n.left-(t.left||0),top:r.top-n.top-(t.top||0)}}const uo=()=>({left:window.pageXOffset,top:window.pageYOffset});function bp(e){let t;if("el"in e){const n=e.el,r=typeof n=="string"&&n.startsWith("#");if(typeof e.el=="string"&&(!r||!document.getElementById(e.el.slice(1))))try{const s=document.querySelector(e.el);if(r&&s){ce(`The selector "${e.el}" should be passed as "el: document.querySelector('${e.el}')" because it starts with "#".`);return}}catch{ce(`The selector "${e.el}" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);return}const o=typeof n=="string"?r?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!o){ce(`Couldn't find element using selector "${e.el}" returned by scrollBehavior.`);return}t=yp(o,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.pageXOffset,t.top!=null?t.top:window.pageYOffset)}function Bi(e,t){return(history.state?history.state.position-t:-1)+e}const is=new Map;function vp(e,t){is.set(e,t)}function wp(e){const t=is.get(e);return is.delete(e),t}let xp=()=>location.protocol+"//"+location.host;function Xl(e,t){const{pathname:n,search:r,hash:o}=t,s=e.indexOf("#");if(s>-1){let a=o.includes(e.slice(s))?e.slice(s).length:1,l=o.slice(a);return l[0]!=="/"&&(l="/"+l),Gi(l,"")}return Gi(n,e)+r+o}function kp(e,t,n,r){let o=[],s=[],i=null;const a=({state:d})=>{const w=Xl(e,location),F=n.value,I=t.value;let x=0;if(d){if(n.value=w,t.value=d,i&&i===F){i=null;return}x=I?d.position-I.position:0}else r(w);o.forEach(R=>{R(n.value,F,{delta:x,type:tr.pop,direction:x?x>0?Xn.forward:Xn.back:Xn.unknown})})};function l(){i=n.value}function c(d){o.push(d);const w=()=>{const F=o.indexOf(d);F>-1&&o.splice(F,1)};return s.push(w),w}function u(){const{history:d}=window;!d.state||d.replaceState(me({},d.state,{scroll:uo()}),"")}function f(){for(const d of s)d();s=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",u),{pauseListeners:l,listen:c,destroy:f}}function Ui(e,t,n,r=!1,o=!1){return{back:e,current:t,forward:n,replaced:r,position:window.history.length,scroll:o?uo():null}}function Ep(e){const{history:t,location:n}=window,r={value:Xl(e,n)},o={value:t.state};o.value||s(r.value,{back:null,current:r.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function s(l,c,u){const f=e.indexOf("#"),d=f>-1?(n.host&&document.querySelector("base")?e:e.slice(f))+l:xp()+e+l;try{t[u?"replaceState":"pushState"](c,"",d),o.value=c}catch(w){ce("Error with push/replace State",w),n[u?"replace":"assign"](d)}}function i(l,c){const u=me({},t.state,Ui(o.value.back,l,o.value.forward,!0),c,{position:o.value.position});s(l,u,!0),r.value=l}function a(l,c){const u=me({},o.value,t.state,{forward:l,scroll:uo()});t.state||ce(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:

history.replaceState(history.state, '', url)

You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`),s(u.current,u,!0);const f=me({},Ui(r.value,l,null),{position:u.position+1},c);s(l,f,!1),r.value=l}return{location:r,state:o,push:a,replace:i}}function Fp(e){e=hp(e);const t=Ep(e),n=kp(e,t.state,t.location,t.replace);function r(s,i=!0){i||n.pauseListeners(),history.go(s)}const o=me({location:"",base:e,go:r,createHref:gp.bind(null,e)},t,n);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>t.state.value}),o}function Sp(e){return typeof e=="string"||e&&typeof e=="object"}function Ql(e){return typeof e=="string"||typeof e=="symbol"}const St={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},_l=jn("navigation failure");var Vi;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(Vi||(Vi={}));const Rp={[1]({location:e,currentLocation:t}){return`No match for
 ${JSON.stringify(e)}${t?`
while being at
`+JSON.stringify(t):""}`},[2]({from:e,to:t}){return`Redirected from "${e.fullPath}" to "${Ip(t)}" via a navigation guard.`},[4]({from:e,to:t}){return`Navigation aborted from "${e.fullPath}" to "${t.fullPath}" via a navigation guard.`},[8]({from:e,to:t}){return`Navigation cancelled from "${e.fullPath}" to "${t.fullPath}" with a new navigation.`},[16]({from:e,to:t}){return`Avoided redundant navigation to current location: "${e.fullPath}".`}};function On(e,t){return me(new Error(Rp[e](t)),{type:e,[_l]:!0},t)}function Rt(e,t){return e instanceof Error&&_l in e&&(t==null||!!(e.type&t))}const Mp=["params","query","hash"];function Ip(e){if(typeof e=="string")return e;if("path"in e)return e.path;const t={};for(const n of Mp)n in e&&(t[n]=e[n]);return JSON.stringify(t,null,2)}const Ki="[^/]+?",Cp={sensitive:!1,strict:!1,start:!0,end:!0},Tp=/[.+*?^${}()[\]/\\]/g;function Op(e,t){const n=me({},Cp,t),r=[];let o=n.start?"^":"";const s=[];for(const c of e){const u=c.length?[]:[90];n.strict&&!c.length&&(o+="/");for(let f=0;f<c.length;f++){const d=c[f];let w=40+(n.sensitive?.25:0);if(d.type===0)f||(o+="/"),o+=d.value.replace(Tp,"\\$&"),w+=40;else if(d.type===1){const{value:F,repeatable:I,optional:x,regexp:R}=d;s.push({name:F,repeatable:I,optional:x});const g=R||Ki;if(g!==Ki){w+=10;try{new RegExp(`(${g})`)}catch(y){throw new Error(`Invalid custom RegExp for param "${F}" (${g}): `+y.message)}}let m=I?`((?:${g})(?:/(?:${g}))*)`:`(${g})`;f||(m=x&&c.length<2?`(?:/${m})`:"/"+m),x&&(m+="?"),o+=m,w+=20,x&&(w+=-8),I&&(w+=-20),g===".*"&&(w+=-50)}u.push(w)}r.push(u)}if(n.strict&&n.end){const c=r.length-1;r[c][r[c].length-1]+=.7000000000000001}n.strict||(o+="/?"),n.end?o+="$":n.strict&&(o+="(?:/|$)");const i=new RegExp(o,n.sensitive?"":"i");function a(c){const u=c.match(i),f={};if(!u)return null;for(let d=1;d<u.length;d++){const w=u[d]||"",F=s[d-1];f[F.name]=w&&F.repeatable?w.split("/"):w}return f}function l(c){let u="",f=!1;for(const d of e){(!f||!u.endsWith("/"))&&(u+="/"),f=!1;for(const w of d)if(w.type===0)u+=w.value;else if(w.type===1){const{value:F,repeatable:I,optional:x}=w,R=F in c?c[F]:"";if(Array.isArray(R)&&!I)throw new Error(`Provided param "${F}" is an array but it is not repeatable (* or + modifiers)`);const g=Array.isArray(R)?R.join("/"):R;if(!g)if(x)d.length<2&&(u.endsWith("/")?u=u.slice(0,-1):f=!0);else throw new Error(`Missing required param "${F}"`);u+=g}}return u}return{re:i,score:r,keys:s,parse:a,stringify:l}}function Ap(e,t){let n=0;for(;n<e.length&&n<t.length;){const r=t[n]-e[n];if(r)return r;n++}return e.length<t.length?e.length===1&&e[0]===40+40?-1:1:e.length>t.length?t.length===1&&t[0]===40+40?1:-1:0}function jp(e,t){let n=0;const r=e.score,o=t.score;for(;n<r.length&&n<o.length;){const s=Ap(r[n],o[n]);if(s)return s;n++}return o.length-r.length}const Hp={type:0,value:""},Lp=/[a-zA-Z0-9_]/;function Pp(e){if(!e)return[[]];if(e==="/")return[[Hp]];if(!e.startsWith("/"))throw new Error(`Route paths should start with a "/": "${e}" should be "/${e}".`);function t(w){throw new Error(`ERR (${n})/"${c}": ${w}`)}let n=0,r=n;const o=[];let s;function i(){s&&o.push(s),s=[]}let a=0,l,c="",u="";function f(){!c||(n===0?s.push({type:0,value:c}):n===1||n===2||n===3?(s.length>1&&(l==="*"||l==="+")&&t(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),s.push({type:1,value:c,regexp:u,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):t("Invalid state to consume buffer"),c="")}function d(){c+=l}for(;a<e.length;){if(l=e[a++],l==="\\"&&n!==2){r=n,n=4;continue}switch(n){case 0:l==="/"?(c&&f(),i()):l===":"?(f(),n=1):d();break;case 4:d(),n=r;break;case 1:l==="("?n=2:Lp.test(l)?d():(f(),n=0,l!=="*"&&l!=="?"&&l!=="+"&&a--);break;case 2:l===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+l:n=3:u+=l;break;case 3:f(),n=0,l!=="*"&&l!=="?"&&l!=="+"&&a--,u="";break;default:t("Unknown state");break}}return n===2&&t(`Unfinished custom RegExp for param "${c}"`),f(),i(),o}function Jp(e,t,n){const r=Op(Pp(e.path),n);{const s=new Set;for(const i of r.keys)s.has(i.name)&&ce(`Found duplicated params with name "${i.name}" for path "${e.path}". Only the last one will be available on "$route.params".`),s.add(i.name)}const o=me(r,{record:e,parent:t,children:[],alias:[]});return t&&!o.record.aliasOf==!t.record.aliasOf&&t.children.push(o),o}function Yp(e,t){const n=[],r=new Map;t=Xi({strict:!1,end:!0,sensitive:!1},t);function o(u){return r.get(u)}function s(u,f,d){const w=!d,F=zp(u);F.aliasOf=d&&d.record;const I=Xi(t,u),x=[F];if("alias"in u){const m=typeof u.alias=="string"?[u.alias]:u.alias;for(const y of m)x.push(me({},F,{components:d?d.record.components:F.components,path:y,aliasOf:d?d.record:F}))}let R,g;for(const m of x){const{path:y}=m;if(f&&y[0]!=="/"){const k=f.record.path,M=k[k.length-1]==="/"?"":"/";m.path=f.record.path+(y&&M+y)}if(m.path==="*")throw new Error(`Catch all routes ("*") must now be defined using a param with a custom regexp.
See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.`);if(R=Jp(m,f,I),f&&y[0]==="/"&&Dp(R,f),d?(d.alias.push(R),Zp(d,R)):(g=g||R,g!==R&&g.alias.push(R),w&&u.name&&!qi(R)&&i(u.name)),"children"in F){const k=F.children;for(let M=0;M<k.length;M++)s(k[M],R,d&&d.children[M])}d=d||R,l(R)}return g?()=>{i(g)}:qn}function i(u){if(Ql(u)){const f=r.get(u);f&&(r.delete(u),n.splice(n.indexOf(f),1),f.children.forEach(i),f.alias.forEach(i))}else{const f=n.indexOf(u);f>-1&&(n.splice(f,1),u.record.name&&r.delete(u.record.name),u.children.forEach(i),u.alias.forEach(i))}}function a(){return n}function l(u){let f=0;for(;f<n.length&&jp(u,n[f])>=0&&(u.record.path!==n[f].record.path||!$l(u,n[f]));)f++;n.splice(f,0,u),u.record.name&&!qi(u)&&r.set(u.record.name,u)}function c(u,f){let d,w={},F,I;if("name"in u&&u.name){if(d=r.get(u.name),!d)throw On(1,{location:u});I=d.record.name,w=me(Np(f.params,d.keys.filter(g=>!g.optional).map(g=>g.name)),u.params),F=d.stringify(w)}else if("path"in u)F=u.path,F.startsWith("/")||ce(`The Matcher cannot resolve relative paths but received "${F}". Unless you directly called \`matcher.resolve("${F}")\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`),d=n.find(g=>g.re.test(F)),d&&(w=d.parse(F),I=d.record.name);else{if(d=f.name?r.get(f.name):n.find(g=>g.re.test(f.path)),!d)throw On(1,{location:u,currentLocation:f});I=d.record.name,w=me({},f.params,u.params),F=d.stringify(w)}const x=[];let R=d;for(;R;)x.unshift(R.record),R=R.parent;return{name:I,path:F,params:w,matched:x,meta:Gp(x)}}return e.forEach(u=>s(u)),{addRoute:s,resolve:c,removeRoute:i,getRoutes:a,getRecordMatcher:o}}function Np(e,t){const n={};for(const r of t)r in e&&(n[r]=e[r]);return n}function zp(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:Wp(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||{}:{default:e.component}}}function Wp(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const r in e.components)t[r]=typeof n=="boolean"?n:n[r];return t}function qi(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function Gp(e){return e.reduce((t,n)=>me(t,n.meta),{})}function Xi(e,t){const n={};for(const r in e)n[r]=r in t?t[r]:e[r];return n}function as(e,t){return e.name===t.name&&e.optional===t.optional&&e.repeatable===t.repeatable}function Zp(e,t){for(const n of e.keys)if(!n.optional&&!t.keys.find(as.bind(null,n)))return ce(`Alias "${t.record.path}" and the original record: "${e.record.path}" should have the exact same param named "${n.name}"`);for(const n of t.keys)if(!n.optional&&!e.keys.find(as.bind(null,n)))return ce(`Alias "${t.record.path}" and the original record: "${e.record.path}" should have the exact same param named "${n.name}"`)}function Dp(e,t){for(const n of t.keys)if(!e.keys.find(as.bind(null,n)))return ce(`Absolute path "${e.record.path}" should have the exact same param named "${n.name}" as its parent "${t.record.path}".`)}function $l(e,t){return t.children.some(n=>n===e||$l(e,n))}const ec=/#/g,Bp=/&/g,Up=/\//g,Vp=/=/g,Kp=/\?/g,tc=/\+/g,qp=/%5B/g,Xp=/%5D/g,nc=/%5E/g,Qp=/%60/g,rc=/%7B/g,_p=/%7C/g,oc=/%7D/g,$p=/%20/g;function Gs(e){return encodeURI(""+e).replace(_p,"|").replace(qp,"[").replace(Xp,"]")}function eh(e){return Gs(e).replace(rc,"{").replace(oc,"}").replace(nc,"^")}function ls(e){return Gs(e).replace(tc,"%2B").replace($p,"+").replace(ec,"%23").replace(Bp,"%26").replace(Qp,"`").replace(rc,"{").replace(oc,"}").replace(nc,"^")}function th(e){return ls(e).replace(Vp,"%3D")}function nh(e){return Gs(e).replace(ec,"%23").replace(Kp,"%3F")}function rh(e){return e==null?"":nh(e).replace(Up,"%2F")}function nr(e){try{return decodeURIComponent(""+e)}catch{ce(`Error decoding "${e}". Using original value`)}return""+e}function oh(e){const t={};if(e===""||e==="?")return t;const r=(e[0]==="?"?e.slice(1):e).split("&");for(let o=0;o<r.length;++o){const s=r[o].replace(tc," "),i=s.indexOf("="),a=nr(i<0?s:s.slice(0,i)),l=i<0?null:nr(s.slice(i+1));if(a in t){let c=t[a];Array.isArray(c)||(c=t[a]=[c]),c.push(l)}else t[a]=l}return t}function Qi(e){let t="";for(let n in e){const r=e[n];if(n=th(n),r==null){r!==void 0&&(t+=(t.length?"&":"")+n);continue}(Array.isArray(r)?r.map(s=>s&&ls(s)):[r&&ls(r)]).forEach(s=>{s!==void 0&&(t+=(t.length?"&":"")+n,s!=null&&(t+="="+s))})}return t}function sh(e){const t={};for(const n in e){const r=e[n];r!==void 0&&(t[n]=Array.isArray(r)?r.map(o=>o==null?null:""+o):r==null?r:""+r)}return t}function Yn(){let e=[];function t(r){return e.push(r),()=>{const o=e.indexOf(r);o>-1&&e.splice(o,1)}}function n(){e=[]}return{add:t,list:()=>e,reset:n}}function Ct(e,t,n,r,o){const s=r&&(r.enterCallbacks[o]=r.enterCallbacks[o]||[]);return()=>new Promise((i,a)=>{const l=f=>{f===!1?a(On(4,{from:n,to:t})):f instanceof Error?a(f):Sp(f)?a(On(2,{from:t,to:f})):(s&&r.enterCallbacks[o]===s&&typeof f=="function"&&s.push(f),i())},c=e.call(r&&r.instances[o],t,n,ih(l,t,n));let u=Promise.resolve(c);if(e.length<3&&(u=u.then(l)),e.length>2){const f=`The "next" callback was never called inside of ${e.name?'"'+e.name+'"':""}:
${e.toString()}
. If you are returning a value instead of calling "next", make sure to remove the "next" parameter from your function.`;if(typeof c=="object"&&"then"in c)u=u.then(d=>l._called?d:(ce(f),Promise.reject(new Error("Invalid navigation guard"))));else if(c!==void 0&&!l._called){ce(f),a(new Error("Invalid navigation guard"));return}}u.catch(f=>a(f))})}function ih(e,t,n){let r=0;return function(){r++===1&&ce(`The "next" callback was called more than once in one navigation guard when going from "${n.fullPath}" to "${t.fullPath}". It should be called exactly one time in each navigation guard. This will fail in production.`),e._called=!0,r===1&&e.apply(null,arguments)}}function To(e,t,n,r){const o=[];for(const s of e)for(const i in s.components){let a=s.components[i];{if(!a||typeof a!="object"&&typeof a!="function")throw ce(`Component "${i}" in record with path "${s.path}" is not a valid component. Received "${String(a)}".`),new Error("Invalid route component");if("then"in a){ce(`Component "${i}" in record with path "${s.path}" is a Promise instead of a function that returns a Promise. Did you write "import('./MyPage.vue')" instead of "() => import('./MyPage.vue')" ? This will break in production if not fixed.`);const l=a;a=()=>l}else a.__asyncLoader&&!a.__warnedDefineAsync&&(a.__warnedDefineAsync=!0,ce(`Component "${i}" in record with path "${s.path}" is defined using "defineAsyncComponent()". Write "() => import('./MyPage.vue')" instead of "defineAsyncComponent(() => import('./MyPage.vue'))".`))}if(!(t!=="beforeRouteEnter"&&!s.instances[i]))if(ah(a)){const c=(a.__vccOpts||a)[t];c&&o.push(Ct(c,n,r,s,i))}else{let l=a();"catch"in l||(ce(`Component "${i}" in record with path "${s.path}" is a function that does not return a Promise. If you were passing a functional component, make sure to add a "displayName" to the component. This will break in production if not fixed.`),l=Promise.resolve(l)),o.push(()=>l.then(c=>{if(!c)return Promise.reject(new Error(`Couldn't resolve component "${i}" at "${s.path}"`));const u=lp(c)?c.default:c;s.components[i]=u;const d=(u.__vccOpts||u)[t];return d&&Ct(d,n,r,s,i)()}))}}return o}function ah(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function _i(e){const t=gt(Ws),n=gt(Kl),r=ke(()=>t.resolve($e(e.to))),o=ke(()=>{const{matched:l}=r.value,{length:c}=l,u=l[c-1],f=n.matched;if(!u||!f.length)return-1;const d=f.findIndex(Pt.bind(null,u));if(d>-1)return d;const w=$i(l[c-2]);return c>1&&$i(u)===w&&f[f.length-1].path!==w?f.findIndex(Pt.bind(null,l[c-2])):d}),s=ke(()=>o.value>-1&&uh(n.params,r.value.params)),i=ke(()=>o.value>-1&&o.value===n.matched.length-1&&ql(n.params,r.value.params));function a(l={}){return ch(l)?t[$e(e.replace)?"replace":"push"]($e(e.to)).catch(qn):Promise.resolve()}if(pt){const l=pn();if(l){const c={route:r.value,isActive:s.value,isExactActive:i.value};l.__vrl_devtools=l.__vrl_devtools||[],l.__vrl_devtools.push(c),pf(()=>{c.route=r.value,c.isActive=s.value,c.isExactActive=i.value},{flush:"post"})}}return{route:r,href:ke(()=>r.value.href),isActive:s,isExactActive:i,navigate:a}}const lh=vt({name:"RouterLink",props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:_i,setup(e,{slots:t}){const n=ir(_i(e)),{options:r}=gt(Ws),o=ke(()=>({[ea(e.activeClass,r.linkActiveClass,"router-link-active")]:n.isActive,[ea(e.exactActiveClass,r.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const s=t.default&&t.default(n);return e.custom?s:lt("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:o.value},s)}}}),Fn=lh;function ch(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function uh(e,t){for(const n in t){const r=t[n],o=e[n];if(typeof r=="string"){if(r!==o)return!1}else if(!Array.isArray(o)||o.length!==r.length||r.some((s,i)=>s!==o[i]))return!1}return!0}function $i(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const ea=(e,t,n)=>e!=null?e:t!=null?t:n,fh=vt({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},setup(e,{attrs:t,slots:n}){dh();const r=gt(ss),o=ke(()=>e.route||r.value),s=gt(Wi,0),i=ke(()=>o.value.matched[s]);Er(Wi,s+1),Er(ap,i),Er(ss,o);const a=Be();return nn(()=>[a.value,i.value,e.name],([l,c,u],[f,d,w])=>{c&&(c.instances[u]=l,d&&d!==c&&l&&l===f&&(c.leaveGuards.size||(c.leaveGuards=d.leaveGuards),c.updateGuards.size||(c.updateGuards=d.updateGuards))),l&&c&&(!d||!Pt(c,d)||!f)&&(c.enterCallbacks[u]||[]).forEach(F=>F(l))},{flush:"post"}),()=>{const l=o.value,c=i.value,u=c&&c.components[e.name],f=e.name;if(!u)return ta(n.default,{Component:u,route:l});const d=c.props[e.name],w=d?d===!0?l.params:typeof d=="function"?d(l):d:null,I=lt(u,me({},w,t,{onVnodeUnmounted:x=>{x.component.isUnmounted&&(c.instances[f]=null)},ref:a}));if(pt&&I.ref){const x={depth:s,name:c.name,path:c.path,meta:c.meta};(Array.isArray(I.ref)?I.ref.map(g=>g.i):[I.ref.i]).forEach(g=>{g.__vrv_devtools=x})}return ta(n.default,{Component:I,route:l})||I}}});function ta(e,t){if(!e)return null;const n=e(t);return n.length===1?n[0]:n}const Zs=fh;function dh(){const e=pn(),t=e.parent&&e.parent.type.name;if(t&&(t==="KeepAlive"||t.includes("Transition"))){const n=t==="KeepAlive"?"keep-alive":"transition";ce(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.
Use slot props instead:

<router-view v-slot="{ Component }">
  <${n}>
    <component :is="Component" />
  </${n}>
</router-view>`)}}function Nn(e,t){const n=me({},e,{matched:e.matched.map(r=>xh(r,["instances","children","aliasOf"]))});return{_custom:{type:null,readOnly:!0,display:e.fullPath,tooltip:t,value:n}}}function yr(e){return{_custom:{display:e}}}let ph=0;function hh(e,t,n){if(t.__hasDevtools)return;t.__hasDevtools=!0;const r=ph++;Ul({id:"org.vuejs.router"+(r?"."+r:""),label:"Vue Router",packageName:"vue-router",homepage:"https://router.vuejs.org",logo:"https://router.vuejs.org/logo.png",componentStateTypes:["Routing"],app:e},o=>{o.on.inspectComponent((u,f)=>{u.instanceData&&u.instanceData.state.push({type:"Routing",key:"$route",editable:!1,value:Nn(t.currentRoute.value,"Current Route")})}),o.on.visitComponentTree(({treeNode:u,componentInstance:f})=>{if(f.__vrv_devtools){const d=f.__vrv_devtools;u.tags.push({label:(d.name?`${d.name.toString()}: `:"")+d.path,textColor:0,tooltip:"This component is rendered by &lt;router-view&gt;",backgroundColor:sc})}Array.isArray(f.__vrl_devtools)&&(f.__devtoolsApi=o,f.__vrl_devtools.forEach(d=>{let w=lc,F="";d.isExactActive?(w=ac,F="This is exactly active"):d.isActive&&(w=ic,F="This link is active"),u.tags.push({label:d.route.path,textColor:0,tooltip:F,backgroundColor:w})}))}),nn(t.currentRoute,()=>{l(),o.notifyComponentUpdate(),o.sendInspectorTree(a),o.sendInspectorState(a)});const s="router:navigations:"+r;o.addTimelineLayer({id:s,label:`Router${r?" "+r:""} Navigations`,color:4237508}),t.onError((u,f)=>{o.addTimelineEvent({layerId:s,event:{title:"Error during Navigation",subtitle:f.fullPath,logType:"error",time:o.now(),data:{error:u},groupId:f.meta.__navigationId}})});let i=0;t.beforeEach((u,f)=>{const d={guard:yr("beforeEach"),from:Nn(f,"Current Location during this navigation"),to:Nn(u,"Target location")};Object.defineProperty(u.meta,"__navigationId",{value:i++}),o.addTimelineEvent({layerId:s,event:{time:o.now(),title:"Start of navigation",subtitle:u.fullPath,data:d,groupId:u.meta.__navigationId}})}),t.afterEach((u,f,d)=>{const w={guard:yr("afterEach")};d?(w.failure={_custom:{type:Error,readOnly:!0,display:d?d.message:"",tooltip:"Navigation Failure",value:d}},w.status=yr("\u274C")):w.status=yr("\u2705"),w.from=Nn(f,"Current Location during this navigation"),w.to=Nn(u,"Target location"),o.addTimelineEvent({layerId:s,event:{title:"End of navigation",subtitle:u.fullPath,time:o.now(),data:w,logType:d?"warning":"default",groupId:u.meta.__navigationId}})});const a="router-inspector:"+r;o.addInspector({id:a,label:"Routes"+(r?" "+r:""),icon:"book",treeFilterPlaceholder:"Search routes"});function l(){if(!c)return;const u=c;let f=n.getRoutes().filter(d=>!d.parent);f.forEach(fc),u.filter&&(f=f.filter(d=>cs(d,u.filter.toLowerCase()))),f.forEach(d=>uc(d,t.currentRoute.value)),u.rootNodes=f.map(cc)}let c;o.on.getInspectorTree(u=>{c=u,u.app===e&&u.inspectorId===a&&l()}),o.on.getInspectorState(u=>{if(u.app===e&&u.inspectorId===a){const d=n.getRoutes().find(w=>w.record.__vd_id===u.nodeId);d&&(u.state={options:gh(d)})}}),o.sendInspectorTree(a),o.sendInspectorState(a)})}function mh(e){return e.optional?e.repeatable?"*":"?":e.repeatable?"+":""}function gh(e){const{record:t}=e,n=[{editable:!1,key:"path",value:t.path}];return t.name!=null&&n.push({editable:!1,key:"name",value:t.name}),n.push({editable:!1,key:"regexp",value:e.re}),e.keys.length&&n.push({editable:!1,key:"keys",value:{_custom:{type:null,readOnly:!0,display:e.keys.map(r=>`${r.name}${mh(r)}`).join(" "),tooltip:"Param keys",value:e.keys}}}),t.redirect!=null&&n.push({editable:!1,key:"redirect",value:t.redirect}),e.alias.length&&n.push({editable:!1,key:"aliases",value:e.alias.map(r=>r.record.path)}),n.push({key:"score",editable:!1,value:{_custom:{type:null,readOnly:!0,display:e.score.map(r=>r.join(", ")).join(" | "),tooltip:"Score used to sort routes",value:e.score}}}),n}const sc=15485081,ic=2450411,ac=8702998,yh=2282478,lc=16486972,bh=6710886;function cc(e){const t=[],{record:n}=e;n.name!=null&&t.push({label:String(n.name),textColor:0,backgroundColor:yh}),n.aliasOf&&t.push({label:"alias",textColor:0,backgroundColor:lc}),e.__vd_match&&t.push({label:"matches",textColor:0,backgroundColor:sc}),e.__vd_exactActive&&t.push({label:"exact",textColor:0,backgroundColor:ac}),e.__vd_active&&t.push({label:"active",textColor:0,backgroundColor:ic}),n.redirect&&t.push({label:"redirect: "+(typeof n.redirect=="string"?n.redirect:"Object"),textColor:16777215,backgroundColor:bh});let r=n.__vd_id;return r==null&&(r=String(vh++),n.__vd_id=r),{id:r,label:n.path,tags:t,children:e.children.map(cc)}}let vh=0;const wh=/^\/(.*)\/([a-z]*)$/;function uc(e,t){const n=t.matched.length&&Pt(t.matched[t.matched.length-1],e.record);e.__vd_exactActive=e.__vd_active=n,n||(e.__vd_active=t.matched.some(r=>Pt(r,e.record))),e.children.forEach(r=>uc(r,t))}function fc(e){e.__vd_match=!1,e.children.forEach(fc)}function cs(e,t){const n=String(e.re).match(wh);if(e.__vd_match=!1,!n||n.length<3)return!1;if(new RegExp(n[1].replace(/\$$/,""),n[2]).test(t))return e.children.forEach(i=>cs(i,t)),e.record.path!=="/"||t==="/"?(e.__vd_match=e.re.test(t),!0):!1;const o=e.record.path.toLowerCase(),s=nr(o);return!t.startsWith("/")&&(s.includes(t)||o.includes(t))||s.startsWith(t)||o.startsWith(t)||e.record.name&&String(e.record.name).includes(t)?!0:e.children.some(i=>cs(i,t))}function xh(e,t){const n={};for(const r in e)t.includes(r)||(n[r]=e[r]);return n}function kh(e){const t=Yp(e.routes,e),n=e.parseQuery||oh,r=e.stringifyQuery||Qi,o=e.history;if(!o)throw new Error('Provide the "history" option when calling "createRouter()": https://next.router.vuejs.org/api/#history.');const s=Yn(),i=Yn(),a=Yn(),l=ju(St);let c=St;pt&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=Io.bind(null,S=>""+S),f=Io.bind(null,rh),d=Io.bind(null,nr);function w(S,G){let N,Z;return Ql(S)?(N=t.getRecordMatcher(S),Z=G):Z=S,t.addRoute(Z,N)}function F(S){const G=t.getRecordMatcher(S);G?t.removeRoute(G):ce(`Cannot remove non-existent route "${String(S)}"`)}function I(){return t.getRoutes().map(S=>S.record)}function x(S){return!!t.getRecordMatcher(S)}function R(S,G){if(G=me({},G||l.value),typeof S=="string"){const ee=Co(n,S,G.path),le=t.resolve({path:ee.path},G),p=o.createHref(ee.fullPath);return p.startsWith("//")?ce(`Location "${S}" resolved to "${p}". A resolved location cannot start with multiple slashes.`):le.matched.length||ce(`No match found for location with path "${S}"`),me(ee,le,{params:d(le.params),hash:nr(ee.hash),redirectedFrom:void 0,href:p})}let N;if("path"in S)"params"in S&&!("name"in S)&&Object.keys(S.params).length&&ce(`Path "${S.path}" was passed with params but they will be ignored. Use a named route alongside params instead.`),N=me({},S,{path:Co(n,S.path,G.path).path});else{const ee=me({},S.params);for(const le in ee)ee[le]==null&&delete ee[le];N=me({},S,{params:f(S.params)}),G.params=f(G.params)}const Z=t.resolve(N,G),re=S.hash||"";re&&!re.startsWith("#")&&ce(`A \`hash\` should always start with the character "#". Replace "${re}" with "#${re}".`),Z.params=u(d(Z.params));const pe=fp(r,me({},S,{hash:eh(re),path:Z.path})),X=o.createHref(pe);return X.startsWith("//")?ce(`Location "${S}" resolved to "${X}". A resolved location cannot start with multiple slashes.`):Z.matched.length||ce(`No match found for location with path "${"path"in S?S.path:S}"`),me({fullPath:pe,hash:re,query:r===Qi?sh(S.query):S.query||{}},Z,{redirectedFrom:void 0,href:X})}function g(S){return typeof S=="string"?Co(n,S,l.value.path):me({},S)}function m(S,G){if(c!==S)return On(8,{from:G,to:S})}function y(S){return C(S)}function k(S){return y(me(g(S),{replace:!0}))}function M(S){const G=S.matched[S.matched.length-1];if(G&&G.redirect){const{redirect:N}=G;let Z=typeof N=="function"?N(S):N;if(typeof Z=="string"&&(Z=Z.includes("?")||Z.includes("#")?Z=g(Z):{path:Z},Z.params={}),!("path"in Z)&&!("name"in Z))throw ce(`Invalid redirect found:
${JSON.stringify(Z,null,2)}
 when navigating to "${S.fullPath}". A redirect must contain a name or path. This will break in production.`),new Error("Invalid redirect");return me({query:S.query,hash:S.hash,params:S.params},Z)}}function C(S,G){const N=c=R(S),Z=l.value,re=S.state,pe=S.force,X=S.replace===!0,ee=M(N);if(ee)return C(me(g(ee),{state:re,force:pe,replace:X}),G||N);const le=N;le.redirectedFrom=G;let p;return!pe&&Zi(r,Z,N)&&(p=On(16,{to:le,from:Z}),je(Z,Z,!0,!1)),(p?Promise.resolve(p):j(le,Z)).catch(h=>Rt(h)?Rt(h,2)?h:ye(h):_(h,le,Z)).then(h=>{if(h){if(Rt(h,2))return Zi(r,R(h.to),le)&&G&&(G._count=G._count?G._count+1:1)>10?(ce(`Detected an infinite redirection in a navigation guard when going from "${Z.fullPath}" to "${le.fullPath}". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`),Promise.reject(new Error("Infinite redirect in navigation guard"))):C(me(g(h.to),{state:re,force:pe,replace:X}),G||le)}else h=te(le,Z,!0,X,re);return K(le,Z,h),h})}function Y(S,G){const N=m(S,G);return N?Promise.reject(N):Promise.resolve()}function j(S,G){let N;const[Z,re,pe]=Eh(S,G);N=To(Z.reverse(),"beforeRouteLeave",S,G);for(const ee of Z)ee.leaveGuards.forEach(le=>{N.push(Ct(le,S,G))});const X=Y.bind(null,S,G);return N.push(X),bn(N).then(()=>{N=[];for(const ee of s.list())N.push(Ct(ee,S,G));return N.push(X),bn(N)}).then(()=>{N=To(re,"beforeRouteUpdate",S,G);for(const ee of re)ee.updateGuards.forEach(le=>{N.push(Ct(le,S,G))});return N.push(X),bn(N)}).then(()=>{N=[];for(const ee of S.matched)if(ee.beforeEnter&&!G.matched.includes(ee))if(Array.isArray(ee.beforeEnter))for(const le of ee.beforeEnter)N.push(Ct(le,S,G));else N.push(Ct(ee.beforeEnter,S,G));return N.push(X),bn(N)}).then(()=>(S.matched.forEach(ee=>ee.enterCallbacks={}),N=To(pe,"beforeRouteEnter",S,G),N.push(X),bn(N))).then(()=>{N=[];for(const ee of i.list())N.push(Ct(ee,S,G));return N.push(X),bn(N)}).catch(ee=>Rt(ee,8)?ee:Promise.reject(ee))}function K(S,G,N){for(const Z of a.list())Z(S,G,N)}function te(S,G,N,Z,re){const pe=m(S,G);if(pe)return pe;const X=G===St,ee=pt?history.state:{};N&&(Z||X?o.replace(S.fullPath,me({scroll:X&&ee&&ee.scroll},re)):o.push(S.fullPath,re)),l.value=S,je(S,G,N,X),ye()}let z;function de(){z=o.listen((S,G,N)=>{const Z=R(S),re=M(Z);if(re){C(me(re,{replace:!0}),Z).catch(qn);return}c=Z;const pe=l.value;pt&&vp(Bi(pe.fullPath,N.delta),uo()),j(Z,pe).catch(X=>Rt(X,12)?X:Rt(X,2)?(C(X.to,Z).then(ee=>{Rt(ee,20)&&!N.delta&&N.type===tr.pop&&o.go(-1,!1)}).catch(qn),Promise.reject()):(N.delta&&o.go(-N.delta,!1),_(X,Z,pe))).then(X=>{X=X||te(Z,pe,!1),X&&(N.delta?o.go(-N.delta,!1):N.type===tr.pop&&Rt(X,20)&&o.go(-1,!1)),K(Z,pe,X)}).catch(qn)})}let Me=Yn(),Ae=Yn(),ge;function _(S,G,N){ye(S);const Z=Ae.list();return Z.length?Z.forEach(re=>re(S,G,N)):(ce("uncaught error during route navigation:"),console.error(S)),Promise.reject(S)}function V(){return ge&&l.value!==St?Promise.resolve():new Promise((S,G)=>{Me.add([S,G])})}function ye(S){return ge||(ge=!S,de(),Me.list().forEach(([G,N])=>S?N(S):G()),Me.reset()),S}function je(S,G,N,Z){const{scrollBehavior:re}=e;if(!pt||!re)return Promise.resolve();const pe=!N&&wp(Bi(S.fullPath,0))||(Z||!N)&&history.state&&history.state.scroll||null;return tl().then(()=>re(S,G,pe)).then(X=>X&&bp(X)).catch(X=>_(X,S,G))}const Ne=S=>o.go(S);let we;const tt=new Set;return{currentRoute:l,addRoute:w,removeRoute:F,hasRoute:x,getRoutes:I,resolve:R,options:e,push:y,replace:k,go:Ne,back:()=>Ne(-1),forward:()=>Ne(1),beforeEach:s.add,beforeResolve:i.add,afterEach:a.add,onError:Ae.add,isReady:V,install(S){const G=this;S.component("RouterLink",Fn),S.component("RouterView",Zs),S.config.globalProperties.$router=G,Object.defineProperty(S.config.globalProperties,"$route",{enumerable:!0,get:()=>$e(l)}),pt&&!we&&l.value===St&&(we=!0,y(o.location).catch(re=>{ce("Unexpected error when starting the router:",re)}));const N={};for(const re in St)N[re]=ke(()=>l.value[re]);S.provide(Ws,G),S.provide(Kl,ir(N)),S.provide(ss,l);const Z=S.unmount;tt.add(S),S.unmount=function(){tt.delete(S),tt.size<1&&(c=St,z&&z(),l.value=St,we=!1,ge=!1),Z()},pt&&hh(S,G,t)}}}function bn(e){return e.reduce((t,n)=>t.then(()=>n()),Promise.resolve())}function Eh(e,t){const n=[],r=[],o=[],s=Math.max(t.matched.length,e.matched.length);for(let i=0;i<s;i++){const a=t.matched[i];a&&(e.matched.find(c=>Pt(c,a))?r.push(a):n.push(a));const l=e.matched[i];l&&(t.matched.find(c=>Pt(c,l))||o.push(l))}return[n,r,o]}const Fh=vt({setup(){return()=>D(Zs,null,null)}}),Sh="_container_uelaq_1",Rh="_banner_uelaq_4",Mh="_content_uelaq_8",Ih="_actions_uelaq_16",Ch="_feature_uelaq_34";var Mt={container:Sh,banner:Rh,content:Mh,actions:Ih,feature:Ch};/*!
  * @intlify/shared v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const cn=typeof window!="undefined";let Ke,un;{const e=cn&&window.performance;e&&e.mark&&e.measure&&e.clearMarks&&e.clearMeasures&&(Ke=t=>e.mark(t),un=(t,n,r)=>{e.measure(t,n,r),e.clearMarks(n),e.clearMarks(r)})}const Th=/\{([0-9a-zA-Z]+)\}/g;function Ds(e,...t){return t.length===1&&Oe(t[0])&&(t=t[0]),(!t||!t.hasOwnProperty)&&(t={}),e.replace(Th,(n,r)=>t.hasOwnProperty(r)?t[r]:"")}const Oh=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol",xt=e=>Oh?Symbol(e):e,Ah=(e,t,n)=>jh({l:e,k:t,s:n}),jh=e=>JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029").replace(/\u0027/g,"\\u0027"),Le=e=>typeof e=="number"&&isFinite(e),Hh=e=>Us(e)==="[object Date]",Nr=e=>Us(e)==="[object RegExp]",fo=e=>ie(e)&&Object.keys(e).length===0;function Hn(e,t){typeof console!="undefined"&&(console.warn("[intlify] "+e),t&&console.warn(t.stack))}const Ze=Object.assign;let na;const Bs=()=>na||(na=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function ra(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}const Lh=Object.prototype.hasOwnProperty;function dc(e,t){return Lh.call(e,t)}const Pe=Array.isArray,Ye=e=>typeof e=="function",B=e=>typeof e=="string",Se=e=>typeof e=="boolean",Oe=e=>e!==null&&typeof e=="object",pc=Object.prototype.toString,Us=e=>pc.call(e),ie=e=>Us(e)==="[object Object]",Ph=e=>e==null?"":Pe(e)||ie(e)&&e.toString===pc?JSON.stringify(e,null,2):String(e),oa=2;function Jh(e,t=0,n=e.length){const r=e.split(/\r?\n/);let o=0;const s=[];for(let i=0;i<r.length;i++)if(o+=r[i].length+1,o>=t){for(let a=i-oa;a<=i+oa||n>o;a++){if(a<0||a>=r.length)continue;const l=a+1;s.push(`${l}${" ".repeat(3-String(l).length)}|  ${r[a]}`);const c=r[a].length;if(a===i){const u=t-(o-c)+1,f=Math.max(1,n>o?c-u:n-t);s.push("   |  "+" ".repeat(u)+"^".repeat(f))}else if(a>i){if(n>o){const u=Math.max(Math.min(n-o,c),1);s.push("   |  "+"^".repeat(u))}o+=c+1}}break}return s.join(`
`)}function hc(){const e=new Map;return{events:e,on(n,r){const o=e.get(n);o&&o.push(r)||e.set(n,[r])},off(n,r){const o=e.get(n);o&&o.splice(o.indexOf(r)>>>0,1)},emit(n,r){(e.get(n)||[]).slice().map(o=>o(r)),(e.get("*")||[]).slice().map(o=>o(n,r))}}}/*!
  * @intlify/message-resolver v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const Yh=Object.prototype.hasOwnProperty;function Nh(e,t){return Yh.call(e,t)}const Mr=e=>e!==null&&typeof e=="object",Yt=[];Yt[0]={w:[0],i:[3,0],["["]:[4],o:[7]};Yt[1]={w:[1],["."]:[2],["["]:[4],o:[7]};Yt[2]={w:[2],i:[3,0],["0"]:[3,0]};Yt[3]={i:[3,0],["0"]:[3,0],w:[1,1],["."]:[2,1],["["]:[4,1],o:[7,1]};Yt[4]={["'"]:[5,0],['"']:[6,0],["["]:[4,2],["]"]:[1,3],o:8,l:[4,0]};Yt[5]={["'"]:[4,0],o:8,l:[5,0]};Yt[6]={['"']:[4,0],o:8,l:[6,0]};const zh=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function Wh(e){return zh.test(e)}function Gh(e){const t=e.charCodeAt(0),n=e.charCodeAt(e.length-1);return t===n&&(t===34||t===39)?e.slice(1,-1):e}function Zh(e){if(e==null)return"o";switch(e.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return e;case 95:case 36:case 45:return"i";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"w"}return"i"}function Dh(e){const t=e.trim();return e.charAt(0)==="0"&&isNaN(parseInt(e))?!1:Wh(t)?Gh(t):"*"+t}function Bh(e){const t=[];let n=-1,r=0,o=0,s,i,a,l,c,u,f;const d=[];d[0]=()=>{i===void 0?i=a:i+=a},d[1]=()=>{i!==void 0&&(t.push(i),i=void 0)},d[2]=()=>{d[0](),o++},d[3]=()=>{if(o>0)o--,r=4,d[0]();else{if(o=0,i===void 0||(i=Dh(i),i===!1))return!1;d[1]()}};function w(){const F=e[n+1];if(r===5&&F==="'"||r===6&&F==='"')return n++,a="\\"+F,d[0](),!0}for(;r!==null;)if(n++,s=e[n],!(s==="\\"&&w())){if(l=Zh(s),f=Yt[r],c=f[l]||f.l||8,c===8||(r=c[0],c[1]!==void 0&&(u=d[c[1]],u&&(a=s,u()===!1))))return;if(r===7)return t}}const sa=new Map;function zr(e,t){if(!Mr(e))return null;let n=sa.get(t);if(n||(n=Bh(t),n&&sa.set(t,n)),!n)return null;const r=n.length;let o=e,s=0;for(;s<r;){const i=o[n[s]];if(i===void 0)return null;o=i,s++}return o}function us(e){if(!Mr(e))return e;for(const t in e)if(!!Nh(e,t))if(!t.includes("."))Mr(e[t])&&us(e[t]);else{const n=t.split("."),r=n.length-1;let o=e;for(let s=0;s<r;s++)n[s]in o||(o[n[s]]={}),o=o[n[s]];o[n[r]]=e[t],delete e[t],Mr(o[n[r]])&&us(o[n[r]])}return e}/*!
  * @intlify/runtime v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const Uh=e=>e,Vh=e=>"",Kh="text",qh=e=>e.length===0?"":e.join(""),Xh=Ph;function ia(e,t){return e=Math.abs(e),t===2?e?e>1?1:0:1:e?Math.min(e,2):0}function Qh(e){const t=Le(e.pluralIndex)?e.pluralIndex:-1;return e.named&&(Le(e.named.count)||Le(e.named.n))?Le(e.named.count)?e.named.count:Le(e.named.n)?e.named.n:t:t}function _h(e,t){t.count||(t.count=e),t.n||(t.n=e)}function $h(e={}){const t=e.locale,n=Qh(e),r=Oe(e.pluralRules)&&B(t)&&Ye(e.pluralRules[t])?e.pluralRules[t]:ia,o=Oe(e.pluralRules)&&B(t)&&Ye(e.pluralRules[t])?ia:void 0,s=x=>x[r(n,x.length,o)],i=e.list||[],a=x=>i[x],l=e.named||{};Le(e.pluralIndex)&&_h(n,l);const c=x=>l[x];function u(x){const R=Ye(e.messages)?e.messages(x):Oe(e.messages)?e.messages[x]:!1;return R||(e.parent?e.parent.message(x):Vh)}const f=x=>e.modifiers?e.modifiers[x]:Uh,d=ie(e.processor)&&Ye(e.processor.normalize)?e.processor.normalize:qh,w=ie(e.processor)&&Ye(e.processor.interpolate)?e.processor.interpolate:Xh,F=ie(e.processor)&&B(e.processor.type)?e.processor.type:Kh,I={list:a,named:c,plural:s,linked:(x,R)=>{const g=u(x)(I);return B(R)?f(R)(g):g},message:u,type:F,interpolate:w,normalize:d};return I}/*!
  * @intlify/message-compiler v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const em={[0]:"Expected token: '{0}'",[1]:"Invalid token in placeholder: '{0}'",[2]:"Unterminated single quote in placeholder",[3]:"Unknown escape sequence: \\{0}",[4]:"Invalid unicode escape sequence: {0}",[5]:"Unbalanced closing brace",[6]:"Unterminated closing brace",[7]:"Empty placeholder",[8]:"Not allowed nest placeholder",[9]:"Invalid linked format",[10]:"Plural must have messages",[11]:"Unexpected empty linked modifier",[12]:"Unexpected empty linked key",[13]:"Unexpected lexical analysis in token: '{0}'"};function mc(e,t,n={}){const{domain:r,messages:o,args:s}=n,i=Ds((o||em)[e]||"",...s||[]),a=new SyntaxError(String(i));return a.code=e,t&&(a.location=t),a.domain=r,a}/*!
  * @intlify/devtools-if v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const gc={I18nInit:"i18n:init",FunctionTranslate:"function:translate"};/*!
  * @intlify/core-base v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */let rr=null;function tm(e){rr=e}function nm(e,t,n){rr&&rr.emit(gc.I18nInit,{timestamp:Date.now(),i18n:e,version:t,meta:n})}const rm=om(gc.FunctionTranslate);function om(e){return t=>rr&&rr.emit(e,t)}const sm={[0]:"Not found '{key}' key in '{locale}' locale messages.",[1]:"Fall back to translate '{key}' key with '{target}' locale.",[2]:"Cannot format a number value due to not supported Intl.NumberFormat.",[3]:"Fall back to number format '{key}' key with '{target}' locale.",[4]:"Cannot format a date value due to not supported Intl.DateTimeFormat.",[5]:"Fall back to datetime format '{key}' key with '{target}' locale."};function An(e,...t){return Ds(sm[e],...t)}const im="9.1.9",po=-1,Wr="";function am(){return{upper:e=>B(e)?e.toUpperCase():e,lower:e=>B(e)?e.toLowerCase():e,capitalize:e=>B(e)?`${e.charAt(0).toLocaleUpperCase()}${e.substr(1)}`:e}}let lm,yc=null;const aa=e=>{yc=e},cm=()=>yc;let la=0;function um(e={}){const t=B(e.version)?e.version:im,n=B(e.locale)?e.locale:"en-US",r=Pe(e.fallbackLocale)||ie(e.fallbackLocale)||B(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:n,o=ie(e.messages)?e.messages:{[n]:{}},s=ie(e.datetimeFormats)?e.datetimeFormats:{[n]:{}},i=ie(e.numberFormats)?e.numberFormats:{[n]:{}},a=Ze({},e.modifiers||{},am()),l=e.pluralRules||{},c=Ye(e.missing)?e.missing:null,u=Se(e.missingWarn)||Nr(e.missingWarn)?e.missingWarn:!0,f=Se(e.fallbackWarn)||Nr(e.fallbackWarn)?e.fallbackWarn:!0,d=!!e.fallbackFormat,w=!!e.unresolving,F=Ye(e.postTranslation)?e.postTranslation:null,I=ie(e.processor)?e.processor:null,x=Se(e.warnHtmlMessage)?e.warnHtmlMessage:!0,R=!!e.escapeParameter,g=Ye(e.messageCompiler)?e.messageCompiler:lm,m=Ye(e.onWarn)?e.onWarn:Hn,y=e,k=Oe(y.__datetimeFormatters)?y.__datetimeFormatters:new Map,M=Oe(y.__numberFormatters)?y.__numberFormatters:new Map,C=Oe(y.__meta)?y.__meta:{};la++;const Y={version:t,cid:la,locale:n,fallbackLocale:r,messages:o,datetimeFormats:s,numberFormats:i,modifiers:a,pluralRules:l,missing:c,missingWarn:u,fallbackWarn:f,fallbackFormat:d,unresolving:w,postTranslation:F,processor:I,warnHtmlMessage:x,escapeParameter:R,messageCompiler:g,onWarn:m,__datetimeFormatters:k,__numberFormatters:M,__meta:C};return Y.__v_emitter=y.__v_emitter!=null?y.__v_emitter:void 0,nm(Y,t,C),Y}function ho(e,t){return e instanceof RegExp?e.test(t):e}function bc(e,t){return e instanceof RegExp?e.test(t):e}function Vs(e,t,n,r,o){const{missing:s,onWarn:i}=e;{const a=e.__v_emitter;a&&a.emit("missing",{locale:n,key:t,type:o,groupId:`${o}:${t}`})}if(s!==null){const a=s(e,n,t,o);return B(a)?a:t}else return bc(r,t)&&i(An(0,{key:t,locale:n})),t}function fr(e,t,n){const r=e;r.__localeChainCache||(r.__localeChainCache=new Map);let o=r.__localeChainCache.get(n);if(!o){o=[];let s=[n];for(;Pe(s);)s=ca(o,s,t);const i=Pe(t)?t:ie(t)?t.default?t.default:null:t;s=B(i)?[i]:i,Pe(s)&&ca(o,s,!1),r.__localeChainCache.set(n,o)}return o}function ca(e,t,n){let r=!0;for(let o=0;o<t.length&&Se(r);o++){const s=t[o];B(s)&&(r=fm(e,t[o],n))}return r}function fm(e,t,n){let r;const o=t.split("-");do{const s=o.join("-");r=dm(e,s,n),o.splice(-1,1)}while(o.length&&r===!0);return r}function dm(e,t,n){let r=!1;if(!e.includes(t)&&(r=!0,t)){r=t[t.length-1]!=="!";const o=t.replace(/!/g,"");e.push(o),(Pe(n)||ie(n))&&n[o]&&(r=n[o])}return r}function zn(e,t,n){const r=e;r.__localeChainCache=new Map,fr(e,n,t)}function Sn(e){return mc(e,null,{messages:pm})}const pm={[14]:"Invalid arguments",[15]:"The date provided is an invalid Date object.Make sure your Date represents a valid date.",[16]:"The argument provided is not a valid ISO date string"},ua=()=>"",at=e=>Ye(e);function fa(e,...t){const{fallbackFormat:n,postTranslation:r,unresolving:o,fallbackLocale:s,messages:i}=e,[a,l]=fs(...t),c=Se(l.missingWarn)?l.missingWarn:e.missingWarn,u=Se(l.fallbackWarn)?l.fallbackWarn:e.fallbackWarn,f=Se(l.escapeParameter)?l.escapeParameter:e.escapeParameter,d=!!l.resolvedMessage,w=B(l.default)||Se(l.default)?Se(l.default)?a:l.default:n?a:"",F=n||w!=="",I=B(l.locale)?l.locale:e.locale;f&&hm(l);let[x,R,g]=d?[a,I,i[I]||{}]:mm(e,a,I,s,u,c),m=a;if(!d&&!(B(x)||at(x))&&F&&(x=w,m=x),!d&&(!(B(x)||at(x))||!B(R)))return o?po:a;if(B(x)&&e.messageCompiler==null)return Hn(`The message format compilation is not supported in this build. Because message compiler isn't included. You need to pre-compilation all message format. So translate function return '${a}'.`),a;let y=!1;const k=()=>{y=!0},M=at(x)?x:vc(e,a,R,x,m,k);if(y)return x;const C=bm(e,R,g,l),Y=$h(C),j=gm(e,M,Y),K=r?r(j):j;{const te={timestamp:Date.now(),key:B(a)?a:at(x)?x.key:"",locale:R||(at(x)?x.locale:""),format:B(x)?x:at(x)?x.source:"",message:K};te.meta=Ze({},e.__meta,cm()||{}),rm(te)}return K}function hm(e){Pe(e.list)?e.list=e.list.map(t=>B(t)?ra(t):t):Oe(e.named)&&Object.keys(e.named).forEach(t=>{B(e.named[t])&&(e.named[t]=ra(e.named[t]))})}function mm(e,t,n,r,o,s){const{messages:i,onWarn:a}=e,l=fr(e,r,n);let c={},u,f=null,d=n,w=null;const F="translate";for(let I=0;I<l.length;I++){if(u=w=l[I],n!==u&&ho(o,t)&&a(An(1,{key:t,target:u})),n!==u){const y=e.__v_emitter;y&&y.emit("fallback",{type:F,key:t,from:d,to:w,groupId:`${F}:${t}`})}c=i[u]||{};let x=null,R,g;if(cn&&(x=window.performance.now(),R="intlify-message-resolve-start",g="intlify-message-resolve-end",Ke&&Ke(R)),(f=zr(c,t))===null&&(f=c[t]),cn){const y=window.performance.now(),k=e.__v_emitter;k&&x&&f&&k.emit("message-resolve",{type:"message-resolve",key:t,message:f,time:y-x,groupId:`${F}:${t}`}),R&&g&&Ke&&un&&(Ke(g),un("intlify message resolve",R,g))}if(B(f)||Ye(f))break;const m=Vs(e,t,u,s,F);m!==t&&(f=m),d=w}return[f,u,c]}function vc(e,t,n,r,o,s){const{messageCompiler:i,warnHtmlMessage:a}=e;if(at(r)){const d=r;return d.locale=d.locale||n,d.key=d.key||t,d}let l=null,c,u;cn&&(l=window.performance.now(),c="intlify-message-compilation-start",u="intlify-message-compilation-end",Ke&&Ke(c));const f=i(r,ym(e,n,o,r,a,s));if(cn){const d=window.performance.now(),w=e.__v_emitter;w&&l&&w.emit("message-compilation",{type:"message-compilation",message:r,time:d-l,groupId:`translate:${t}`}),c&&u&&Ke&&un&&(Ke(u),un("intlify message compilation",c,u))}return f.locale=n,f.key=t,f.source=r,f}function gm(e,t,n){let r=null,o,s;cn&&(r=window.performance.now(),o="intlify-message-evaluation-start",s="intlify-message-evaluation-end",Ke&&Ke(o));const i=t(n);if(cn){const a=window.performance.now(),l=e.__v_emitter;l&&r&&l.emit("message-evaluation",{type:"message-evaluation",value:i,time:a-r,groupId:`translate:${t.key}`}),o&&s&&Ke&&un&&(Ke(s),un("intlify message evaluation",o,s))}return i}function fs(...e){const[t,n,r]=e,o={};if(!B(t)&&!Le(t)&&!at(t))throw Sn(14);const s=Le(t)?String(t):(at(t),t);return Le(n)?o.plural=n:B(n)?o.default=n:ie(n)&&!fo(n)?o.named=n:Pe(n)&&(o.list=n),Le(r)?o.plural=r:B(r)?o.default=r:ie(r)&&Ze(o,r),[s,o]}function ym(e,t,n,r,o,s){return{warnHtmlMessage:o,onError:i=>{s&&s(i);{const a=`Message compilation error: ${i.message}`,l=i.location&&Jh(r,i.location.start.offset,i.location.end.offset),c=e.__v_emitter;c&&c.emit("compile-error",{message:r,error:i.message,start:i.location&&i.location.start.offset,end:i.location&&i.location.end.offset,groupId:`translate:${n}`}),console.error(l?`${a}
${l}`:a)}},onCacheKey:i=>Ah(t,n,i)}}function bm(e,t,n,r){const{modifiers:o,pluralRules:s}=e,a={locale:t,modifiers:o,pluralRules:s,messages:l=>{const c=zr(n,l);if(B(c)){let u=!1;const d=vc(e,l,t,c,l,()=>{u=!0});return u?ua:d}else return at(c)?c:ua}};return e.processor&&(a.processor=e.processor),r.list&&(a.list=r.list),r.named&&(a.named=r.named),Le(r.plural)&&(a.pluralIndex=r.plural),a}const da=typeof Intl!="undefined",wc={dateTimeFormat:da&&typeof Intl.DateTimeFormat!="undefined",numberFormat:da&&typeof Intl.NumberFormat!="undefined"};function pa(e,...t){const{datetimeFormats:n,unresolving:r,fallbackLocale:o,onWarn:s}=e,{__datetimeFormatters:i}=e;if(!wc.dateTimeFormat)return s(An(4)),Wr;const[a,l,c,u]=ds(...t),f=Se(c.missingWarn)?c.missingWarn:e.missingWarn,d=Se(c.fallbackWarn)?c.fallbackWarn:e.fallbackWarn,w=!!c.part,F=B(c.locale)?c.locale:e.locale,I=fr(e,o,F);if(!B(a)||a==="")return new Intl.DateTimeFormat(F).format(l);let x={},R,g=null,m=F,y=null;const k="datetime format";for(let Y=0;Y<I.length;Y++){if(R=y=I[Y],F!==R&&ho(d,a)&&s(An(5,{key:a,target:R})),F!==R){const j=e.__v_emitter;j&&j.emit("fallback",{type:k,key:a,from:m,to:y,groupId:`${k}:${a}`})}if(x=n[R]||{},g=x[a],ie(g))break;Vs(e,a,R,f,k),m=y}if(!ie(g)||!B(R))return r?po:a;let M=`${R}__${a}`;fo(u)||(M=`${M}__${JSON.stringify(u)}`);let C=i.get(M);return C||(C=new Intl.DateTimeFormat(R,Ze({},g,u)),i.set(M,C)),w?C.formatToParts(l):C.format(l)}function ds(...e){const[t,n,r,o]=e;let s={},i={},a;if(B(t)){if(!/\d{4}-\d{2}-\d{2}(T.*)?/.test(t))throw Sn(16);a=new Date(t);try{a.toISOString()}catch{throw Sn(16)}}else if(Hh(t)){if(isNaN(t.getTime()))throw Sn(15);a=t}else if(Le(t))a=t;else throw Sn(14);return B(n)?s.key=n:ie(n)&&(s=n),B(r)?s.locale=r:ie(r)&&(i=r),ie(o)&&(i=o),[s.key||"",a,s,i]}function ha(e,t,n){const r=e;for(const o in n){const s=`${t}__${o}`;!r.__datetimeFormatters.has(s)||r.__datetimeFormatters.delete(s)}}function ma(e,...t){const{numberFormats:n,unresolving:r,fallbackLocale:o,onWarn:s}=e,{__numberFormatters:i}=e;if(!wc.numberFormat)return s(An(2)),Wr;const[a,l,c,u]=ps(...t),f=Se(c.missingWarn)?c.missingWarn:e.missingWarn,d=Se(c.fallbackWarn)?c.fallbackWarn:e.fallbackWarn,w=!!c.part,F=B(c.locale)?c.locale:e.locale,I=fr(e,o,F);if(!B(a)||a==="")return new Intl.NumberFormat(F).format(l);let x={},R,g=null,m=F,y=null;const k="number format";for(let Y=0;Y<I.length;Y++){if(R=y=I[Y],F!==R&&ho(d,a)&&s(An(3,{key:a,target:R})),F!==R){const j=e.__v_emitter;j&&j.emit("fallback",{type:k,key:a,from:m,to:y,groupId:`${k}:${a}`})}if(x=n[R]||{},g=x[a],ie(g))break;Vs(e,a,R,f,k),m=y}if(!ie(g)||!B(R))return r?po:a;let M=`${R}__${a}`;fo(u)||(M=`${M}__${JSON.stringify(u)}`);let C=i.get(M);return C||(C=new Intl.NumberFormat(R,Ze({},g,u)),i.set(M,C)),w?C.formatToParts(l):C.format(l)}function ps(...e){const[t,n,r,o]=e;let s={},i={};if(!Le(t))throw Sn(14);const a=t;return B(n)?s.key=n:ie(n)&&(s=n),B(r)?s.locale=r:ie(r)&&(i=r),ie(o)&&(i=o),[s.key||"",a,s,i]}function ga(e,t,n){const r=e;for(const o in n){const s=`${t}__${o}`;!r.__numberFormatters.has(s)||r.__numberFormatters.delete(s)}}typeof __INTLIFY_PROD_DEVTOOLS__!="boolean"&&(Bs().__INTLIFY_PROD_DEVTOOLS__=!1);/*!
  * @intlify/vue-devtools v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const Oo={["vue-devtools-plugin-vue-i18n"]:"Vue I18n devtools",["vue-i18n-resource-inspector"]:"I18n Resources",["vue-i18n-timeline"]:"Vue I18n"},vm={["vue-i18n-resource-inspector"]:"Search for scopes ..."},wm={["vue-i18n-timeline"]:16764185};/*!
  * vue-i18n v9.1.9
  * (c) 2021 kazuya kawaguchi
  * Released under the MIT License.
  */const xm="9.1.9";function km(){let e=!1;typeof __INTLIFY_PROD_DEVTOOLS__!="boolean"&&(Bs().__INTLIFY_PROD_DEVTOOLS__=!1),e=!0,e&&console.warn("You are running the esm-bundler build of vue-i18n. It is recommended to configure your bundler to explicitly replace feature flag globals with boolean literals to get proper tree-shaking in the final bundle.")}const Em={[6]:"Fall back to {type} '{key}' with root locale.",[7]:"Not supported 'preserve'.",[8]:"Not supported 'formatter'.",[9]:"Not supported 'preserveDirectiveContent'.",[10]:"Not supported 'getChoiceIndex'.",[11]:"Component name legacy compatible: '{name}' -> 'i18n'",[12]:"Not found parent scope. use the global scope."};function mo(e,...t){return Ds(Em[e],...t)}function qe(e,...t){return mc(e,null,{messages:Fm,args:t})}const Fm={[14]:"Unexpected return type in composer",[15]:"Invalid argument",[16]:"Must be called at the top of a `setup` function",[17]:"Need to install with `app.use` function",[22]:"Unexpected error",[18]:"Not available in legacy mode",[19]:"Required in value: {0}",[20]:"Invalid value",[21]:"Cannot setup vue-devtools plugin"},Ao="__INTLIFY_META__",hs=xt("__transrateVNode"),ms=xt("__datetimeParts"),gs=xt("__numberParts"),or=xt("__enableEmitter"),ys=xt("__disableEmitter"),Sm=xt("__setPluralRules");xt("__intlifyMeta");const xc=xt("__injectWithOption");let ya=0;function ba(e){return(t,n,r,o)=>e(n,r,pn()||void 0,o)}function kc(e,t){const{messages:n,__i18n:r}=t,o=ie(n)?n:Pe(r)?{}:{[e]:{}};if(Pe(r)&&r.forEach(({locale:s,resource:i})=>{s?(o[s]=o[s]||{},Gr(i,o[s])):Gr(i,o)}),t.flatJson)for(const s in o)dc(o,s)&&us(o[s]);return o}const br=e=>!Oe(e)||Pe(e);function Gr(e,t){if(br(e)||br(t))throw qe(20);for(const n in e)dc(e,n)&&(br(e[n])||br(t[n])?t[n]=e[n]:Gr(e[n],t[n]))}const Rm=()=>{const e=pn();return e&&e.type[Ao]?{[Ao]:e.type[Ao]}:null};function Ec(e={}){const{__root:t}=e,n=t===void 0;let r=Se(e.inheritLocale)?e.inheritLocale:!0;const o=Be(t&&r?t.locale.value:B(e.locale)?e.locale:"en-US"),s=Be(t&&r?t.fallbackLocale.value:B(e.fallbackLocale)||Pe(e.fallbackLocale)||ie(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:o.value),i=Be(kc(o.value,e)),a=Be(ie(e.datetimeFormats)?e.datetimeFormats:{[o.value]:{}}),l=Be(ie(e.numberFormats)?e.numberFormats:{[o.value]:{}});let c=t?t.missingWarn:Se(e.missingWarn)||Nr(e.missingWarn)?e.missingWarn:!0,u=t?t.fallbackWarn:Se(e.fallbackWarn)||Nr(e.fallbackWarn)?e.fallbackWarn:!0,f=t?t.fallbackRoot:Se(e.fallbackRoot)?e.fallbackRoot:!0,d=!!e.fallbackFormat,w=Ye(e.missing)?e.missing:null,F=Ye(e.missing)?ba(e.missing):null,I=Ye(e.postTranslation)?e.postTranslation:null,x=Se(e.warnHtmlMessage)?e.warnHtmlMessage:!0,R=!!e.escapeParameter;const g=t?t.modifiers:ie(e.modifiers)?e.modifiers:{};let m=e.pluralRules||t&&t.pluralRules,y;function k(){return um({version:xm,locale:o.value,fallbackLocale:s.value,messages:i.value,datetimeFormats:a.value,numberFormats:l.value,modifiers:g,pluralRules:m,missing:F===null?void 0:F,missingWarn:c,fallbackWarn:u,fallbackFormat:d,unresolving:!0,postTranslation:I===null?void 0:I,warnHtmlMessage:x,escapeParameter:R,__datetimeFormatters:ie(y)?y.__datetimeFormatters:void 0,__numberFormatters:ie(y)?y.__numberFormatters:void 0,__v_emitter:ie(y)?y.__v_emitter:void 0,__meta:{framework:"vue"}})}y=k(),zn(y,o.value,s.value);function M(){return[o.value,s.value,i.value,a.value,l.value]}const C=ke({get:()=>o.value,set:b=>{o.value=b,y.locale=o.value}}),Y=ke({get:()=>s.value,set:b=>{s.value=b,y.fallbackLocale=s.value,zn(y,o.value,b)}}),j=ke(()=>i.value),K=ke(()=>a.value),te=ke(()=>l.value);function z(){return Ye(I)?I:null}function de(b){I=b,y.postTranslation=b}function Me(){return w}function Ae(b){b!==null&&(F=ba(b)),w=b,y.missing=F}function ge(b,v){return b!=="translate"||!v.resolvedMessage}function _(b,v,W,J,U,Q){M();let oe;try{aa(Rm()),oe=b(y)}finally{aa(null)}if(Le(oe)&&oe===po){const[ae,fe]=v();if(t&&B(ae)&&ge(W,fe)){f&&(ho(u,ae)||bc(c,ae))&&Hn(mo(6,{key:ae,type:W}));{const{__v_emitter:he}=y;he&&f&&he.emit("fallback",{type:W,key:ae,to:"global",groupId:`${W}:${ae}`})}}return t&&f?J(t):U(ae)}else{if(Q(oe))return oe;throw qe(14)}}function V(...b){return _(v=>fa(v,...b),()=>fs(...b),"translate",v=>v.t(...b),v=>v,v=>B(v))}function ye(...b){const[v,W,J]=b;if(J&&!Oe(J))throw qe(15);return V(v,W,Ze({resolvedMessage:!0},J||{}))}function je(...b){return _(v=>pa(v,...b),()=>ds(...b),"datetime format",v=>v.d(...b),()=>Wr,v=>B(v))}function Ne(...b){return _(v=>ma(v,...b),()=>ps(...b),"number format",v=>v.n(...b),()=>Wr,v=>B(v))}function we(b){return b.map(v=>B(v)?D(In,null,v,0):v)}const Fe={normalize:we,interpolate:b=>b,type:"vnode"};function S(...b){return _(v=>{let W;const J=v;try{J.processor=Fe,W=fa(J,...b)}finally{J.processor=null}return W},()=>fs(...b),"translate",v=>v[hs](...b),v=>[D(In,null,v,0)],v=>Pe(v))}function G(...b){return _(v=>ma(v,...b),()=>ps(...b),"number format",v=>v[gs](...b),()=>[],v=>B(v)||Pe(v))}function N(...b){return _(v=>pa(v,...b),()=>ds(...b),"datetime format",v=>v[ms](...b),()=>[],v=>B(v)||Pe(v))}function Z(b){m=b,y.pluralRules=m}function re(b,v){const W=B(v)?v:o.value,J=ee(W);return zr(J,b)!==null}function pe(b){let v=null;const W=fr(y,s.value,o.value);for(let J=0;J<W.length;J++){const U=i.value[W[J]]||{},Q=zr(U,b);if(Q!=null){v=Q;break}}return v}function X(b){const v=pe(b);return v!=null?v:t?t.tm(b)||{}:{}}function ee(b){return i.value[b]||{}}function le(b,v){i.value[b]=v,y.messages=i.value}function p(b,v){i.value[b]=i.value[b]||{},Gr(v,i.value[b]),y.messages=i.value}function h(b){return a.value[b]||{}}function E(b,v){a.value[b]=v,y.datetimeFormats=a.value,ha(y,b,v)}function O(b,v){a.value[b]=Ze(a.value[b]||{},v),y.datetimeFormats=a.value,ha(y,b,v)}function T(b){return l.value[b]||{}}function H(b,v){l.value[b]=v,y.numberFormats=l.value,ga(y,b,v)}function P(b,v){l.value[b]=Ze(l.value[b]||{},v),y.numberFormats=l.value,ga(y,b,v)}ya++,t&&(nn(t.locale,b=>{r&&(o.value=b,y.locale=b,zn(y,o.value,s.value))}),nn(t.fallbackLocale,b=>{r&&(s.value=b,y.fallbackLocale=b,zn(y,o.value,s.value))}));const A={id:ya,locale:C,fallbackLocale:Y,get inheritLocale(){return r},set inheritLocale(b){r=b,b&&t&&(o.value=t.locale.value,s.value=t.fallbackLocale.value,zn(y,o.value,s.value))},get availableLocales(){return Object.keys(i.value).sort()},messages:j,datetimeFormats:K,numberFormats:te,get modifiers(){return g},get pluralRules(){return m||{}},get isGlobal(){return n},get missingWarn(){return c},set missingWarn(b){c=b,y.missingWarn=c},get fallbackWarn(){return u},set fallbackWarn(b){u=b,y.fallbackWarn=u},get fallbackRoot(){return f},set fallbackRoot(b){f=b},get fallbackFormat(){return d},set fallbackFormat(b){d=b,y.fallbackFormat=d},get warnHtmlMessage(){return x},set warnHtmlMessage(b){x=b,y.warnHtmlMessage=b},get escapeParameter(){return R},set escapeParameter(b){R=b,y.escapeParameter=b},t:V,rt:ye,d:je,n:Ne,te:re,tm:X,getLocaleMessage:ee,setLocaleMessage:le,mergeLocaleMessage:p,getDateTimeFormat:h,setDateTimeFormat:E,mergeDateTimeFormat:O,getNumberFormat:T,setNumberFormat:H,mergeNumberFormat:P,getPostTranslationHandler:z,setPostTranslationHandler:de,getMissingHandler:Me,setMissingHandler:Ae,[hs]:S,[gs]:G,[ms]:N,[Sm]:Z,[xc]:e.__injectWithOption};return A[or]=b=>{y.__v_emitter=b},A[ys]=()=>{y.__v_emitter=void 0},A}const Ks={tag:{type:[String,Object]},locale:{type:String},scope:{type:String,validator:e=>e==="parent"||e==="global",default:"parent"},i18n:{type:Object}},jo={name:"i18n-t",props:Ze({keypath:{type:String,required:!0},plural:{type:[Number,String],validator:e=>Le(e)||!isNaN(e)}},Ks),setup(e,t){const{slots:n,attrs:r}=t,o=e.i18n||go({useScope:e.scope,__useComponent:!0}),s=Object.keys(n).filter(i=>i!=="_");return()=>{const i={};e.locale&&(i.locale=e.locale),e.plural!==void 0&&(i.plural=B(e.plural)?+e.plural:e.plural);const a=Mm(t,s),l=o[hs](e.keypath,a,i),c=Ze({},r);return B(e.tag)||Oe(e.tag)?lt(e.tag,c,l):lt(He,c,l)}}};function Mm({slots:e},t){return t.length===1&&t[0]==="default"?e.default?e.default():[]:t.reduce((n,r)=>{const o=e[r];return o&&(n[r]=o()),n},{})}function Fc(e,t,n,r){const{slots:o,attrs:s}=t;return()=>{const i={part:!0};let a={};e.locale&&(i.locale=e.locale),B(e.format)?i.key=e.format:Oe(e.format)&&(B(e.format.key)&&(i.key=e.format.key),a=Object.keys(e.format).reduce((f,d)=>n.includes(d)?Ze({},f,{[d]:e.format[d]}):f,{}));const l=r(e.value,i,a);let c=[i.key];Pe(l)?c=l.map((f,d)=>{const w=o[f.type];return w?w({[f.type]:f.value,index:d,parts:l}):[f.value]}):B(l)&&(c=[l]);const u=Ze({},s);return B(e.tag)||Oe(e.tag)?lt(e.tag,u,c):lt(He,u,c)}}const Im=["localeMatcher","style","unit","unitDisplay","currency","currencyDisplay","useGrouping","numberingSystem","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","notation","formatMatcher"],va={name:"i18n-n",props:Ze({value:{type:Number,required:!0},format:{type:[String,Object]}},Ks),setup(e,t){const n=e.i18n||go({useScope:"parent",__useComponent:!0});return Fc(e,t,Im,(...r)=>n[gs](...r))}},Cm=["dateStyle","timeStyle","fractionalSecondDigits","calendar","dayPeriod","numberingSystem","localeMatcher","timeZone","hour12","hourCycle","formatMatcher","weekday","era","year","month","day","hour","minute","second","timeZoneName"],wa={name:"i18n-d",props:Ze({value:{type:[Number,Date],required:!0},format:{type:[String,Object]}},Ks),setup(e,t){const n=e.i18n||go({useScope:"parent",__useComponent:!0});return Fc(e,t,Cm,(...r)=>n[ms](...r))}};function Tm(e,t){const n=e;if(e.mode==="composition")return n.__getInstance(t)||e.global;{const r=n.__getInstance(t);return r!=null?r.__composer:e.global.__composer}}function Om(e){const t=(n,{instance:r,value:o,modifiers:s})=>{if(!r||!r.$)throw qe(22);const i=Tm(e,r.$);s.preserve&&Hn(mo(7));const a=Am(o);n.textContent=i.t(...jm(a))};return{beforeMount:t,beforeUpdate:t}}function Am(e){if(B(e))return{path:e};if(ie(e)){if(!("path"in e))throw qe(19,"path");return e}else throw qe(20)}function jm(e){const{path:t,locale:n,args:r,choice:o,plural:s}=e,i={},a=r||{};return B(n)&&(i.locale=n),Le(o)&&(i.plural=o),Le(s)&&(i.plural=s),[t,a,i]}function Hm(e,t,...n){const r=ie(n[0])?n[0]:{},o=!!r.useI18nComponentName,s=Se(r.globalInstall)?r.globalInstall:!0;s&&o&&Hn(mo(11,{name:jo.name})),s&&(e.component(o?"i18n":jo.name,jo),e.component(va.name,va),e.component(wa.name,wa)),e.directive("t",Om(t))}const Sc="vue-i18n: composer properties";let bs;async function Lm(e,t){return new Promise((n,r)=>{try{Ul({id:"vue-devtools-plugin-vue-i18n",label:Oo["vue-devtools-plugin-vue-i18n"],packageName:"vue-i18n",homepage:"https://vue-i18n.intlify.dev",logo:"https://vue-i18n.intlify.dev/vue-i18n-devtools-logo.png",componentStateTypes:[Sc],app:e},o=>{bs=o,o.on.visitComponentTree(({componentInstance:s,treeNode:i})=>{Pm(s,i,t)}),o.on.inspectComponent(({componentInstance:s,instanceData:i})=>{s.vnode.el.__VUE_I18N__&&i&&(t.mode==="legacy"?s.vnode.el.__VUE_I18N__!==t.global.__composer&&xa(i,s.vnode.el.__VUE_I18N__):xa(i,s.vnode.el.__VUE_I18N__))}),o.addInspector({id:"vue-i18n-resource-inspector",label:Oo["vue-i18n-resource-inspector"],icon:"language",treeFilterPlaceholder:vm["vue-i18n-resource-inspector"]}),o.on.getInspectorTree(s=>{s.app===e&&s.inspectorId==="vue-i18n-resource-inspector"&&Wm(s,t)}),o.on.getInspectorState(s=>{s.app===e&&s.inspectorId==="vue-i18n-resource-inspector"&&Gm(s,t)}),o.on.editInspectorState(s=>{s.app===e&&s.inspectorId==="vue-i18n-resource-inspector"&&Dm(s,t)}),o.addTimelineLayer({id:"vue-i18n-timeline",label:Oo["vue-i18n-timeline"],color:wm["vue-i18n-timeline"]}),n(!0)})}catch(o){console.error(o),r(!1)}})}function Pm(e,t,n){const r=n.mode==="composition"?n.global:n.global.__composer;if(e&&e.vnode.el.__VUE_I18N__&&e.vnode.el.__VUE_I18N__!==r){const s={label:`i18n (${e.type.name||e.type.displayName||e.type.__file} Scope)`,textColor:0,backgroundColor:16764185};t.tags.push(s)}}function xa(e,t){const n=Sc;e.state.push({type:n,key:"locale",editable:!0,value:t.locale.value}),e.state.push({type:n,key:"availableLocales",editable:!1,value:t.availableLocales}),e.state.push({type:n,key:"fallbackLocale",editable:!0,value:t.fallbackLocale.value}),e.state.push({type:n,key:"inheritLocale",editable:!0,value:t.inheritLocale}),e.state.push({type:n,key:"messages",editable:!1,value:qs(t.messages.value)}),e.state.push({type:n,key:"datetimeFormats",editable:!1,value:t.datetimeFormats.value}),e.state.push({type:n,key:"numberFormats",editable:!1,value:t.numberFormats.value})}function qs(e){const t={};return Object.keys(e).forEach(n=>{const r=e[n];Ye(r)&&"source"in r?t[n]=zm(r):Oe(r)?t[n]=qs(r):t[n]=r}),t}const Jm={"<":"&lt;",">":"&gt;",'"':"&quot;","&":"&amp;"};function Ym(e){return e.replace(/[<>"&]/g,Nm)}function Nm(e){return Jm[e]||e}function zm(e){const t=e.source?`("${Ym(e.source)}")`:"(?)";return{_custom:{type:"function",display:`<span>\u0192</span> ${t}`}}}function Wm(e,t){e.rootNodes.push({id:"global",label:"Global Scope"});const n=t.mode==="composition"?t.global:t.global.__composer;for(const[r,o]of t.__instances){const s=t.mode==="composition"?o:o.__composer;if(n===s)continue;const i=r.type.name||r.type.displayName||r.type.__file;e.rootNodes.push({id:s.id.toString(),label:`${i} Scope`})}}function Rc(e,t){if(e==="global")return t.mode==="composition"?t.global:t.global.__composer;{const n=Array.from(t.__instances.values()).find(r=>r.id.toString()===e);return n?t.mode==="composition"?n:n.__composer:null}}function Gm(e,t){const n=Rc(e.nodeId,t);n&&(e.state=Zm(n))}function Zm(e){const t={},n="Locale related info",r=[{type:n,key:"locale",editable:!0,value:e.locale.value},{type:n,key:"fallbackLocale",editable:!0,value:e.fallbackLocale.value},{type:n,key:"availableLocales",editable:!1,value:e.availableLocales},{type:n,key:"inheritLocale",editable:!0,value:e.inheritLocale}];t[n]=r;const o="Locale messages info",s=[{type:o,key:"messages",editable:!1,value:qs(e.messages.value)}];t[o]=s;const i="Datetime formats info",a=[{type:i,key:"datetimeFormats",editable:!1,value:e.datetimeFormats.value}];t[i]=a;const l="Datetime formats info",c=[{type:l,key:"numberFormats",editable:!1,value:e.numberFormats.value}];return t[l]=c,t}function vs(e,t){if(bs){let n;t&&"groupId"in t&&(n=t.groupId,delete t.groupId),bs.addTimelineEvent({layerId:"vue-i18n-timeline",event:{title:e,groupId:n,time:Date.now(),meta:{},data:t||{},logType:e==="compile-error"?"error":e==="fallback"||e==="missing"?"warning":"default"}})}}function Dm(e,t){const n=Rc(e.nodeId,t);if(n){const[r]=e.path;r==="locale"&&B(e.state.value)?n.locale.value=e.state.value:r==="fallbackLocale"&&(B(e.state.value)||Pe(e.state.value)||Oe(e.state.value))?n.fallbackLocale.value=e.state.value:r==="inheritLocale"&&Se(e.state.value)&&(n.inheritLocale=e.state.value)}}function Bm(e={}){const t=!!e.globalInjection,n=new Map,r=Ec(e),o=xt("vue-i18n"),s={get mode(){return"composition"},async install(i,...a){i.__VUE_I18N__=s,i.__VUE_I18N_SYMBOL__=o,i.provide(i.__VUE_I18N_SYMBOL__,s),t&&Xm(i,s.global),Hm(i,s,...a);{if(!await Lm(i,s))throw qe(21);const c=hc();{const u=r;u[or]&&u[or](c)}c.on("*",vs)}},get global(){return r},__instances:n,__getInstance(i){return n.get(i)||null},__setInstance(i,a){n.set(i,a)},__deleteInstance(i){n.delete(i)}};return s}function go(e={}){const t=pn();if(t==null)throw qe(16);if(!t.appContext.app.__VUE_I18N_SYMBOL__)throw qe(17);const n=gt(t.appContext.app.__VUE_I18N_SYMBOL__);if(!n)throw qe(22);const r=n.mode==="composition"?n.global:n.global.__composer,o=fo(e)?"__i18n"in t.type?"local":"global":e.useScope?e.useScope:"local";if(o==="global"){let a=Oe(e.messages)?e.messages:{};"__i18nGlobal"in t.type&&(a=kc(r.locale.value,{messages:a,__i18n:t.type.__i18nGlobal}));const l=Object.keys(a);if(l.length&&l.forEach(c=>{r.mergeLocaleMessage(c,a[c])}),Oe(e.datetimeFormats)){const c=Object.keys(e.datetimeFormats);c.length&&c.forEach(u=>{r.mergeDateTimeFormat(u,e.datetimeFormats[u])})}if(Oe(e.numberFormats)){const c=Object.keys(e.numberFormats);c.length&&c.forEach(u=>{r.mergeNumberFormat(u,e.numberFormats[u])})}return r}if(o==="parent"){let a=Um(n,t,e.__useComponent);return a==null&&(Hn(mo(12)),a=r),a}if(n.mode==="legacy")throw qe(18);const s=n;let i=s.__getInstance(t);if(i==null){const a=t.type,l=Ze({},e);a.__i18n&&(l.__i18n=a.__i18n),r&&(l.__root=r),i=Ec(l),Vm(s,t,i),s.__setInstance(t,i)}return i}function Um(e,t,n=!1){let r=null;const o=t.root;let s=t.parent;for(;s!=null;){const i=e;if(e.mode==="composition")r=i.__getInstance(s);else{const a=i.__getInstance(s);a!=null&&(r=a.__composer),n&&r&&!r[xc]&&(r=null)}if(r!=null||o===s)break;s=s.parent}return r}function Vm(e,t,n){let r=null;cr(()=>{if(t.vnode.el){t.vnode.el.__VUE_I18N__=n,r=hc();const o=n;o[or]&&o[or](r),r.on("*",vs)}},t),so(()=>{if(t.vnode.el&&t.vnode.el.__VUE_I18N__){r&&r.off("*",vs);const o=n;o[ys]&&o[ys](),delete t.vnode.el.__VUE_I18N__}e.__deleteInstance(t)},t)}const Km=["locale","fallbackLocale","availableLocales"],qm=["t","rt","d","n","tm"];function Xm(e,t){const n=Object.create(null);Km.forEach(r=>{const o=Object.getOwnPropertyDescriptor(t,r);if(!o)throw qe(22);const s=Re(o.value)?{get(){return o.value.value},set(i){o.value.value=i}}:{get(){return o.get&&o.get()}};Object.defineProperty(n,r,s)}),e.config.globalProperties.$i18n=n,qm.forEach(r=>{const o=Object.getOwnPropertyDescriptor(t,r);if(!o||!o.value)throw qe(22);Object.defineProperty(e.config.globalProperties,`$${r}`,o)})}km();{const e=Bs();e.__INTLIFY__=!0,tm(e.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__)}function Qm(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!Lt(e)}const _m=vt({setup(){const{t:e,locale:t}=go();return()=>{let n;return D("div",{class:Mt.container},[D("div",{class:Mt.banner},[D("div",{class:Mt.content},[D("h1",null,[e("title")]),D("h2",null,[e("sub_title")]),D("p",{class:Mt.actions},[D("a",{href:"#"},[Je("GitHub")]),D(Fn,{to:"/docs"},Qm(n=e("doc_link"))?n:{default:()=>[n]})]),Df(D("select",{"onUpdate:modelValue":r=>t.value=r},[D("option",{value:"zh"},[Je("\u4E2D\u6587")]),D("option",{value:"en"},[Je("English")])]),[[Dd,t.value]])])]),D("div",{class:Mt.feature},[D("ul",null,[D("li",null,[D("svg",{class:Mt.icon},[D("use",{"xlink:href":"#vue"},null)]),D("h3",null,[Je("\u57FA\u4E8E Vue 3")]),D("p",null,[Je("\u4F7F\u7528\u4E86 Vue 3 script setup")])]),D("li",null,[D("svg",{class:Mt.icon},[D("use",{"xlink:href":"#ts"},null)]),D("h3",null,[Je("\u57FA\u4E8E TypeScript")]),D("p",null,[Je("\u6E90\u4EE3\u7801\u91C7\u7528 TypeScript\u4E66\u5199")])]),D("li",null,[D("svg",{class:Mt.icon},[D("use",{"xlink:href":"#light"},null)]),D("h3",null,[Je("\u4EE3\u7801\u6613\u8BFB")]),D("p",null,[Je("\u6BCF\u4E2A\u7EC4\u4EF6\u7684\u6E90\u4EE3\u7801\u90FD\u6781\u5176\u7B80\u6D01")])])])])])}}}),$m="_header_16liu_1";var eg={header:$m,"fade-enter-active":"_fade-enter-active_16liu_8","fade-leave-active":"_fade-leave-active_16liu_9","fade-enter-from":"_fade-enter-from_16liu_13","fade-leave-to":"_fade-leave-to_16liu_14"};function tg(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!Lt(e)}const Mc=()=>D("div",null,[D("div",{class:eg.header},[D(Fn,{to:"/"},{default:()=>[Je("Home")]}),D(Fn,{to:"/docs/banner"},{default:()=>[Je("Banner")]}),D(Fn,{to:"/docs/button"},{default:()=>[Je("Button")]}),D(Fn,{to:"/docs/verification"},{default:()=>[Je("Verification")]})]),D(Zs,null,{default:({Component:e,route:t})=>D(zs,{name:"fade"},tg(e)?e:{default:()=>[e]})})]);Mc.displayName="Docs";var ka=e=>{e.__sourceCode=`<script setup lang="ts"><\/script>
<template>
	<v-banner></v-banner>
</template>
<style lang="scss" scoped></style>`,e.__sourceCodeTitle=" \u6D4B\u8BD5 "},hn=(e,t)=>{const n=e.__vccOpts||e;for(const[r,o]of t)n[r]=o;return n};const Ic={};function ng(e,t){const n=io("v-banner");return Xe(),ur(n)}typeof ka=="function"&&ka(Ic);var rg=hn(Ic,[["render",ng],["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/src/views/demo/banner/VBannerDemo1.vue"]]),Ea=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},Cc={exports:{}};(function(e){var t=typeof window!="undefined"?window:typeof WorkerGlobalScope!="undefined"&&self instanceof WorkerGlobalScope?self:{};/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */var n=function(r){var o=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,s=0,i={},a={manual:r.Prism&&r.Prism.manual,disableWorkerMessageHandler:r.Prism&&r.Prism.disableWorkerMessageHandler,util:{encode:function g(m){return m instanceof l?new l(m.type,g(m.content),m.alias):Array.isArray(m)?m.map(g):m.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(g){return Object.prototype.toString.call(g).slice(8,-1)},objId:function(g){return g.__id||Object.defineProperty(g,"__id",{value:++s}),g.__id},clone:function g(m,y){y=y||{};var k,M;switch(a.util.type(m)){case"Object":if(M=a.util.objId(m),y[M])return y[M];k={},y[M]=k;for(var C in m)m.hasOwnProperty(C)&&(k[C]=g(m[C],y));return k;case"Array":return M=a.util.objId(m),y[M]?y[M]:(k=[],y[M]=k,m.forEach(function(Y,j){k[j]=g(Y,y)}),k);default:return m}},getLanguage:function(g){for(;g;){var m=o.exec(g.className);if(m)return m[1].toLowerCase();g=g.parentElement}return"none"},setLanguage:function(g,m){g.className=g.className.replace(RegExp(o,"gi"),""),g.classList.add("language-"+m)},currentScript:function(){if(typeof document=="undefined")return null;if("currentScript"in document&&1<2)return document.currentScript;try{throw new Error}catch(k){var g=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(k.stack)||[])[1];if(g){var m=document.getElementsByTagName("script");for(var y in m)if(m[y].src==g)return m[y]}return null}},isActive:function(g,m,y){for(var k="no-"+m;g;){var M=g.classList;if(M.contains(m))return!0;if(M.contains(k))return!1;g=g.parentElement}return!!y}},languages:{plain:i,plaintext:i,text:i,txt:i,extend:function(g,m){var y=a.util.clone(a.languages[g]);for(var k in m)y[k]=m[k];return y},insertBefore:function(g,m,y,k){k=k||a.languages;var M=k[g],C={};for(var Y in M)if(M.hasOwnProperty(Y)){if(Y==m)for(var j in y)y.hasOwnProperty(j)&&(C[j]=y[j]);y.hasOwnProperty(Y)||(C[Y]=M[Y])}var K=k[g];return k[g]=C,a.languages.DFS(a.languages,function(te,z){z===K&&te!=g&&(this[te]=C)}),C},DFS:function g(m,y,k,M){M=M||{};var C=a.util.objId;for(var Y in m)if(m.hasOwnProperty(Y)){y.call(m,Y,m[Y],k||Y);var j=m[Y],K=a.util.type(j);K==="Object"&&!M[C(j)]?(M[C(j)]=!0,g(j,y,null,M)):K==="Array"&&!M[C(j)]&&(M[C(j)]=!0,g(j,y,Y,M))}}},plugins:{},highlightAll:function(g,m){a.highlightAllUnder(document,g,m)},highlightAllUnder:function(g,m,y){var k={callback:y,container:g,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};a.hooks.run("before-highlightall",k),k.elements=Array.prototype.slice.apply(k.container.querySelectorAll(k.selector)),a.hooks.run("before-all-elements-highlight",k);for(var M=0,C;C=k.elements[M++];)a.highlightElement(C,m===!0,k.callback)},highlightElement:function(g,m,y){var k=a.util.getLanguage(g),M=a.languages[k];a.util.setLanguage(g,k);var C=g.parentElement;C&&C.nodeName.toLowerCase()==="pre"&&a.util.setLanguage(C,k);var Y=g.textContent,j={element:g,language:k,grammar:M,code:Y};function K(z){j.highlightedCode=z,a.hooks.run("before-insert",j),j.element.innerHTML=j.highlightedCode,a.hooks.run("after-highlight",j),a.hooks.run("complete",j),y&&y.call(j.element)}if(a.hooks.run("before-sanity-check",j),C=j.element.parentElement,C&&C.nodeName.toLowerCase()==="pre"&&!C.hasAttribute("tabindex")&&C.setAttribute("tabindex","0"),!j.code){a.hooks.run("complete",j),y&&y.call(j.element);return}if(a.hooks.run("before-highlight",j),!j.grammar){K(a.util.encode(j.code));return}if(m&&r.Worker){var te=new Worker(a.filename);te.onmessage=function(z){K(z.data)},te.postMessage(JSON.stringify({language:j.language,code:j.code,immediateClose:!0}))}else K(a.highlight(j.code,j.grammar,j.language))},highlight:function(g,m,y){var k={code:g,grammar:m,language:y};if(a.hooks.run("before-tokenize",k),!k.grammar)throw new Error('The language "'+k.language+'" has no grammar.');return k.tokens=a.tokenize(k.code,k.grammar),a.hooks.run("after-tokenize",k),l.stringify(a.util.encode(k.tokens),k.language)},tokenize:function(g,m){var y=m.rest;if(y){for(var k in y)m[k]=y[k];delete m.rest}var M=new f;return d(M,M.head,g),u(g,M,m,M.head,0),F(M)},hooks:{all:{},add:function(g,m){var y=a.hooks.all;y[g]=y[g]||[],y[g].push(m)},run:function(g,m){var y=a.hooks.all[g];if(!(!y||!y.length))for(var k=0,M;M=y[k++];)M(m)}},Token:l};r.Prism=a;function l(g,m,y,k){this.type=g,this.content=m,this.alias=y,this.length=(k||"").length|0}l.stringify=function g(m,y){if(typeof m=="string")return m;if(Array.isArray(m)){var k="";return m.forEach(function(K){k+=g(K,y)}),k}var M={type:m.type,content:g(m.content,y),tag:"span",classes:["token",m.type],attributes:{},language:y},C=m.alias;C&&(Array.isArray(C)?Array.prototype.push.apply(M.classes,C):M.classes.push(C)),a.hooks.run("wrap",M);var Y="";for(var j in M.attributes)Y+=" "+j+'="'+(M.attributes[j]||"").replace(/"/g,"&quot;")+'"';return"<"+M.tag+' class="'+M.classes.join(" ")+'"'+Y+">"+M.content+"</"+M.tag+">"};function c(g,m,y,k){g.lastIndex=m;var M=g.exec(y);if(M&&k&&M[1]){var C=M[1].length;M.index+=C,M[0]=M[0].slice(C)}return M}function u(g,m,y,k,M,C){for(var Y in y)if(!(!y.hasOwnProperty(Y)||!y[Y])){var j=y[Y];j=Array.isArray(j)?j:[j];for(var K=0;K<j.length;++K){if(C&&C.cause==Y+","+K)return;var te=j[K],z=te.inside,de=!!te.lookbehind,Me=!!te.greedy,Ae=te.alias;if(Me&&!te.pattern.global){var ge=te.pattern.toString().match(/[imsuy]*$/)[0];te.pattern=RegExp(te.pattern.source,ge+"g")}for(var _=te.pattern||te,V=k.next,ye=M;V!==m.tail&&!(C&&ye>=C.reach);ye+=V.value.length,V=V.next){var je=V.value;if(m.length>g.length)return;if(!(je instanceof l)){var Ne=1,we;if(Me){if(we=c(_,ye,g,de),!we||we.index>=g.length)break;var G=we.index,tt=we.index+we[0].length,Fe=ye;for(Fe+=V.value.length;G>=Fe;)V=V.next,Fe+=V.value.length;if(Fe-=V.value.length,ye=Fe,V.value instanceof l)continue;for(var S=V;S!==m.tail&&(Fe<tt||typeof S.value=="string");S=S.next)Ne++,Fe+=S.value.length;Ne--,je=g.slice(ye,Fe),we.index-=ye}else if(we=c(_,0,je,de),!we)continue;var G=we.index,N=we[0],Z=je.slice(0,G),re=je.slice(G+N.length),pe=ye+je.length;C&&pe>C.reach&&(C.reach=pe);var X=V.prev;Z&&(X=d(m,X,Z),ye+=Z.length),w(m,X,Ne);var ee=new l(Y,z?a.tokenize(N,z):N,Ae,N);if(V=d(m,X,ee),re&&d(m,V,re),Ne>1){var le={cause:Y+","+K,reach:pe};u(g,m,y,V.prev,ye,le),C&&le.reach>C.reach&&(C.reach=le.reach)}}}}}}function f(){var g={value:null,prev:null,next:null},m={value:null,prev:g,next:null};g.next=m,this.head=g,this.tail=m,this.length=0}function d(g,m,y){var k=m.next,M={value:y,prev:m,next:k};return m.next=M,k.prev=M,g.length++,M}function w(g,m,y){for(var k=m.next,M=0;M<y&&k!==g.tail;M++)k=k.next;m.next=k,k.prev=m,g.length-=M}function F(g){for(var m=[],y=g.head.next;y!==g.tail;)m.push(y.value),y=y.next;return m}if(!r.document)return r.addEventListener&&(a.disableWorkerMessageHandler||r.addEventListener("message",function(g){var m=JSON.parse(g.data),y=m.language,k=m.code,M=m.immediateClose;r.postMessage(a.highlight(k,a.languages[y],y)),M&&r.close()},!1)),a;var I=a.util.currentScript();I&&(a.filename=I.src,I.hasAttribute("data-manual")&&(a.manual=!0));function x(){a.manual||a.highlightAll()}if(!a.manual){var R=document.readyState;R==="loading"||R==="interactive"&&I&&I.defer?document.addEventListener("DOMContentLoaded",x):window.requestAnimationFrame?window.requestAnimationFrame(x):window.setTimeout(x,16)}return a}(t);e.exports&&(e.exports=n),typeof Ea!="undefined"&&(Ea.Prism=n),n.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},n.languages.markup.tag.inside["attr-value"].inside.entity=n.languages.markup.entity,n.languages.markup.doctype.inside["internal-subset"].inside=n.languages.markup,n.hooks.add("wrap",function(r){r.type==="entity"&&(r.attributes.title=r.content.replace(/&amp;/,"&"))}),Object.defineProperty(n.languages.markup.tag,"addInlined",{value:function(o,s){var i={};i["language-"+s]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:n.languages[s]},i.cdata=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:i}};a["language-"+s]={pattern:/[\s\S]+/,inside:n.languages[s]};var l={};l[o]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,function(){return o}),"i"),lookbehind:!0,greedy:!0,inside:a},n.languages.insertBefore("markup","cdata",l)}}),Object.defineProperty(n.languages.markup.tag,"addAttribute",{value:function(r,o){n.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+r+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[o,"language-"+o],inside:n.languages[o]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),n.languages.html=n.languages.markup,n.languages.mathml=n.languages.markup,n.languages.svg=n.languages.markup,n.languages.xml=n.languages.extend("markup",{}),n.languages.ssml=n.languages.xml,n.languages.atom=n.languages.xml,n.languages.rss=n.languages.xml,function(r){var o=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;r.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+o.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+o.source+"$"),alias:"url"}}},selector:{pattern:RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|`+o.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:o,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},r.languages.css.atrule.inside.rest=r.languages.css;var s=r.languages.markup;s&&(s.tag.addInlined("style","css"),s.tag.addAttribute("style","css"))}(n),n.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},n.languages.javascript=n.languages.extend("clike",{"class-name":[n.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+(/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source)+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),n.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,n.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:n.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:n.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:n.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:n.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:n.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),n.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:n.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),n.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),n.languages.markup&&(n.languages.markup.tag.addInlined("script","javascript"),n.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),n.languages.js=n.languages.javascript,function(){if(typeof n=="undefined"||typeof document=="undefined")return;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var r="Loading\u2026",o=function(I,x){return"\u2716 Error "+I+" while fetching file: "+x},s="\u2716 Error: File does not exist or is empty",i={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},a="data-src-status",l="loading",c="loaded",u="failed",f="pre[data-src]:not(["+a+'="'+c+'"]):not(['+a+'="'+l+'"])';function d(I,x,R){var g=new XMLHttpRequest;g.open("GET",I,!0),g.onreadystatechange=function(){g.readyState==4&&(g.status<400&&g.responseText?x(g.responseText):g.status>=400?R(o(g.status,g.statusText)):R(s))},g.send(null)}function w(I){var x=/^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(I||"");if(x){var R=Number(x[1]),g=x[2],m=x[3];return g?m?[R,Number(m)]:[R,void 0]:[R,R]}}n.hooks.add("before-highlightall",function(I){I.selector+=", "+f}),n.hooks.add("before-sanity-check",function(I){var x=I.element;if(x.matches(f)){I.code="",x.setAttribute(a,l);var R=x.appendChild(document.createElement("CODE"));R.textContent=r;var g=x.getAttribute("data-src"),m=I.language;if(m==="none"){var y=(/\.(\w+)$/.exec(g)||[,"none"])[1];m=i[y]||y}n.util.setLanguage(R,m),n.util.setLanguage(x,m);var k=n.plugins.autoloader;k&&k.loadLanguages(m),d(g,function(M){x.setAttribute(a,c);var C=w(x.getAttribute("data-range"));if(C){var Y=M.split(/\r\n?|\n/g),j=C[0],K=C[1]==null?Y.length:C[1];j<0&&(j+=Y.length),j=Math.max(0,Math.min(j-1,Y.length)),K<0&&(K+=Y.length),K=Math.max(0,Math.min(K,Y.length)),M=Y.slice(j,K).join(`
`),x.hasAttribute("data-start")||x.setAttribute("data-start",String(j+1))}R.textContent=M,n.highlightElement(R)},function(M){x.setAttribute(a,u),R.textContent=M})}}),n.plugins.fileHighlight={highlight:function(x){for(var R=(x||document).querySelectorAll(f),g=0,m;m=R[g++];)n.highlightElement(m)}};var F=!1;n.fileHighlight=function(){F||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),F=!0),n.plugins.fileHighlight.highlight.apply(this,arguments)}}()})(Cc);var Zr=Cc.exports;const og="_container_fg27g_1",sg="_component_fg27g_10",ig="_action_fg27g_13",ag="_code_fg27g_16";var vr={container:og,component:sg,action:ig,code:ag};const Xs=vt({props:{component:{type:Object,required:!0}},setup(e,{attrs:t,slots:n,emit:r,expose:o}){const s=ke(()=>Zr.highlight(e.component.__sourceCode,Zr.languages.html,"html")),i=Be(!1),a=()=>i.value=!i.value;return()=>D("div",{class:vr.container},[D("h2",null,[e.component.__sourceCodeTitle]),D("div",{class:vr.component},[lt(e.component)]),D("div",{class:vr.action},[D(io("v-button"),{onClick:Ut(a,["stop"])},{default:()=>[i.value?"\u9690\u85CF\u6E90\u4EE3\u7801":"\u67E5\u770B\u6E90\u4EE3\u7801"]})]),i.value?D("div",{class:vr.code},[D("pre",{class:"language-html",innerHTML:s.value},null)]):D("div",null,null)])}}),Tc=()=>D("div",null,[D(Xs,{component:rg},null)]);Tc.displayName="BannerDemo";const lg={name:"Banner"};function cg(e,t,n,r,o,s){return Xe(),At("h1",null,"Vue Scaffold UI")}var ug=hn(lg,[["render",cg],["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/lib/banner/Banner.vue"]]);const fg=["disabled"],dg={key:0,class:"v3-loading-indicator"},pg={key:1,class:"v3-loading-indicator-empty"},hg={name:"Button"},mg=vt(xo(wo({},hg),{props:{theme:{type:String,required:!1,default:"button"},size:{type:String,required:!1,default:"normal"},level:{type:String,required:!1,default:"normal"},disabled:{type:Boolean,required:!1,default:!1},loading:{type:Boolean,required:!1,default:!1}},setup(e){const t=e,n=ke(()=>({[`v3-theme-${t.theme}`]:t.theme,[`v3-size-${t.size}`]:t.size,[`v3-level-${t.level}`]:t.level}));return(r,o)=>(Xe(),At("button",{class:Br(["v3-button",$e(n)]),disabled:t.disabled},[t.loading?(Xe(),At("span",dg)):(Xe(),At("span",pg)),Rr(r.$slots,"default")],10,fg))}}));var Oc=hn(mg,[["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/lib/button/Button.vue"]]);const yo=e=>(dl("data-v-0570c587"),e=e(),pl(),e),gg={key:0,class:"container"},yg=yo(()=>ve("div",{class:"title"},[ve("span",null,"\u5B8C\u6210\u62FC\u56FE\u7136\u540E\u70B9\u51FB\u786E\u8BA4")],-1)),bg=["src"],vg={class:"control-wrapper"},wg=yo(()=>ve("span",null,"\u53D6\u6D88",-1)),xg=yo(()=>ve("span",null,"\u5237\u65B0",-1)),kg=yo(()=>ve("span",null,"\u786E\u8BA4",-1)),Eg={name:"Verification"},Fg=vt(xo(wo({},Eg),{props:{visible:{type:Boolean,required:!0,default:!1},onRefresh:{type:Function,required:!0},onConfirm:{type:Function,required:!0}},emits:["update:visible"],setup(e,{emit:t}){const n=e;Jd(m=>({"0570c587-shadeImageUrl":$e(s),"0570c587-blockWrapperTop":$e(c)}));let r="";const o=Be(""),s=ke(()=>"url('data:image/jpg;base64,"+o.value+"')"),i=Be(""),a=ke(()=>"data:image/jpg;base64,"+i.value),l=Be(0),c=ke(()=>l.value+"px"),u=Be(),f=Be();let d=0,w=0;const F=m=>{d=m.x-m.target.getBoundingClientRect().x,w=m.y-m.target.getBoundingClientRect().y,m.dataTransfer&&(m.dataTransfer.effectAllowed="move")},I=m=>{let y=u.value,k=f.value;if(y&&k){let{x:M,y:C,width:Y,height:j}=y.getBoundingClientRect(),{width:K,height:te}=k.getBoundingClientRect();m.x-d<M||m.x-d+K>M+Y||m.y-w<C||m.y-w+te>C+j?m.dataTransfer&&(m.dataTransfer.dropEffect="none"):m.dataTransfer&&(m.dataTransfer.dropEffect="move")}m.preventDefault()},x=m=>{let y=m.target.className,k=f.value;k&&(y==="image-wrapper"?(k.style.left=m.offsetX-d+"px",k.style.top=m.offsetY-w+"px"):(k.style.left=m.offsetX+k.getBoundingClientRect().x-k.parentNode.getBoundingClientRect().x-d+"px",k.style.top=m.offsetY+k.getBoundingClientRect().y-k.parentNode.getBoundingClientRect().y-w+"px")),m.preventDefault()},R=()=>{const m=n.onRefresh();o.value=m.shadeImage,i.value=m.blockImage,l.value=m.y,r=m.token},g=()=>{let m=0,y=0,k=u.value,M=f.value;k&&M&&(m=M.getBoundingClientRect().x-k.getBoundingClientRect().x,y=M.getBoundingClientRect().y-k.getBoundingClientRect().y);let C=n.onConfirm(m,y,r);console.log(C)};return cr(()=>{R()}),(m,y)=>n.visible?(Xe(),At("div",gg,[yg,ve("div",{ref_key:"imageWrapperRef",ref:u,class:"image-wrapper",onDrop:x,onDragenter:y[3]||(y[3]=Ut(()=>{},["prevent"])),onDragleave:y[4]||(y[4]=Ut(()=>{},["prevent"])),onDragend:y[5]||(y[5]=Ut(()=>{},["prevent"])),onDragover:I},[ve("div",{ref_key:"blockWrapperRef",ref:f,class:"block-wrapper"},[ve("img",{class:"block-image",src:$e(a),alt:"",draggable:"true",onDragstart:F,onDragenter:y[0]||(y[0]=Ut(()=>{},["prevent"])),onDragleave:y[1]||(y[1]=Ut(()=>{},["prevent"])),onDragend:y[2]||(y[2]=Ut(()=>{},["prevent"]))},null,40,bg)],512)],544),ve("div",vg,[ve("div",{class:"cancel-wrapper",onClick:y[6]||(y[6]=k=>t("update:visible",!1))},[Rr(m.$slots,"cancel",{},()=>[wg],!0)]),ve("div",{class:"refresh-wrapper",onClick:R},[Rr(m.$slots,"refresh",{},()=>[xg],!0)]),ve("div",{class:"confirm-wrapper",onClick:g},[Rr(m.$slots,"confirm",{},()=>[kg],!0)])])])):Pl("v-if",!0)}}));var Sg=hn(Fg,[["__scopeId","data-v-0570c587"],["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/lib/verification/Verification.vue"]]);const Rg=({components:e=[],componentPrefix:t="V"})=>{const n=(o,s,i)=>{o.component(t+s)||o.component(t+s,i)};return{install:o=>{e.forEach(s=>{var i;n(o,(i=s.name)!=null?i:"",s)})}}};const Mg={class:"container"},Ig={class:"component"},Cg={class:"action"},Tg={key:0,class:"code"},Og=["innerHTML"],Ag=vt({props:{component:{type:Object,required:!0}},setup(e){const t=e,n=t.component.__sourceCodeTitle,r=ke(()=>Zr.highlight(t.component.__sourceCode,Zr.languages.html,"html")),o=Be(!1),s=()=>o.value=!o.value;return(i,a)=>(Xe(),At("div",Mg,[ve("h2",null,Ho($e(n)),1),ve("div",Ig,[(Xe(),ur(_f(t.component)))]),ve("div",Cg,[D($e(Oc),{onClick:s},{default:Mn(()=>[Je(Ho(o.value?"\u9690\u85CF\u6E90\u4EE3\u7801":"\u67E5\u770B\u6E90\u4EE3\u7801"),1)]),_:1})]),o.value?(Xe(),At("div",Tg,[ve("pre",{class:"language-html",innerHTML:$e(r)},null,8,Og)])):Pl("v-if",!0)]))}});var jg=hn(Ag,[["__scopeId","data-v-46454032"],["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/src/views/components/Demo.vue"]]),Fa=e=>{e.__sourceCode=`<script setup lang="ts"><\/script>

<template>
	<v-button>This is Button</v-button>
</template>

<style lang="scss" scoped></style>`,e.__sourceCodeTitle=" \u57FA\u672C\u4F7F\u7528 "};const Ac={},Hg=Je("This is Button");function Lg(e,t){const n=io("v-button");return Xe(),ur(n,null,{default:Mn(()=>[Hg]),_:1})}typeof Fa=="function"&&Fa(Ac);var Sa=hn(Ac,[["render",Lg],["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/src/views/demo/button/ButtonDemo1.vue"]]);const jc=()=>D("div",null,[D(jg,{component:Sa},null),D(Xs,{component:Sa},null)]);jc.displayName="BannerDemo";const Pg="xx",Jg=135,Yg=62,Ng="",zg="iVBORw0KGgoAAAANSUhEUgAAADcAAAA3CAYAAACo29JGAAATbElEQVR42u2ad1SW+ZXH3xcQpCiDgmCj9957U6pIE0FAqhRBiogCooCogFSpIqKAgoJ9dHaajuPojGWsM+r0lk12d07ObCY5+8/mbJKd+ewFMznZkpPMhiRrNu85v/M8z9v4fZ77vd97L6BQ/O3x//jR19vLH7L+asGeOcD/tGmNxSh0zVAstke5zA2FsQcqNv5oeoSh5Rn6bMH9NtgcxwDUHALRcg1DxysKTe9V6PjFYiTLzDcae6/V2LmveDYAfxtsfkASegFr0Q+OxyAoCj2/MHS9QtF3DcQuIArXoEicAiLxCk3CPyz5/z7gdxvUCopnjiz1kBgMAqIxDVqNWVgcruEJrIxYR1BsDg6rc5kfmYNqcC6a4RufHThl8BoUgQloR6SzIH4jRmsqWLquCv2EcgxjN6MdXoFBSgt2xZ1EbG2hoq3r2YFTExjl2lpZdSgSalGNq8Igsx6n8jbi6w+wvX+SkfGXuH7uPI9ePM6PXh17duB0kndivmE3Ydt7KN4zSEt7PyeGB7h2YpT7ZyZ5/+Ixnlwc5IOpLj4e7+Kj493PDlxf/xAnDw1w5/QQ750/zAenBnh/op0nY+08OLSfd4c65LyNd8fbeXSsiyfH+54duCdTsumJNt45vJcHw7t4Z6SFRyOtPDjSxb3xHu4J6DvjzTw51s7j8f28N/UXgvu+ncb0ektgbh5p5+7hNt4+3MT9Iy28c6SN+2Od3D3exQOBm47a44lunkz28/7JfoluH3/2rub7/sA3hlu5friV28P7uDV9PCZAR9sFrJWHcv6uyPDR0W4B6+XxiZ4ZsPcn+yT/+mfWnxXwuy+Z3FXO7aO9vNTTyMt9TVw6sI9LA028NtjClaFWrhzcx/WhFq4J1FtHOrg92s7tkS7ujO7nvqx7AvTgaNdMjj0SKT6a6OTJCZHkZDfvneiV53p4V5774GQvn0wN8NnJPj493sPnx/v58twwP744wo9OH+Yzub7ZWzc7gN99wVR9GbeO9fJizx4u9bdwuU+gBp5CvS5A14fbuDHczvUjnbwlMG//et092jMDNQ13V8AeHG3jwXg3j0SO07J8JE45Hc2HYx0C3MFHk118eqqHz84P8kMxow8F5krHDrqy49kSHUiOvxtpLg4kW9vOHtzpXaUisf1c7n8ardeGmnlNwK4eauPaSDtvyms3Rnu5OdrFDZHhTQG6c7RT1v6nR4nKA4nmu2Is78j1e0db+WBcojfRxYdTvfzg+SE+OT3AY3HUGwf3cExuZm36OgpiY8mLTWBtUCjW8/Sw1NImK8Cfscqa2YM72VA+E4krB5p4XeQ3va4NtgrcPt483DkDdkOidGOsW1YX1wXulqy3J3okYh0izZYZqOkIPRaox2IsT0SStw6383xzFW0lOeTERLHSwQono4VYGFmTkVZOVnE9ufn7KE5rYG1ACkk+kYRY2pHs5jt7cJN1knPjfVwaauP1g51P80w29sYROUo03hQnfGukh5vH+sURe7k31sd9ieadsX4eTB7k4dQgtycOcGmkj/GmHdTnpZC8IohgewdMdJ9DS6mGppo2ejoL0NczwsLck7DobNILG0mKLWZNSAqtTSMc6b9A7479eC13mj24Y7Vl3JFie3mwnasHe3j9UAeXR2Sz4wO8cVbATrWK9MQ8xgd598QYD8cPcW9ogFf7ujmxr5nd5ZtICY/B39YbE31ztDSeY75CFyNVfdyXO+Nr4Tmz4VC7AMKcQwizDWClXTCbJXoVudvoaz/I4MA4ddvaKEwqZHtmxezBHakq5PbJQcmzDnHEXnHC6XrWx9XjB7kiEbomTvpyfxeTLR10VbdSVVxFTmYRq+NT8LJ2wm6OLq4yuLrMt8BSzxLn5S6EWnkTZetPTXopQ3Xt5K6Mx3eZPUFmTiQ4eBFv50+EXK+y8SHRJZws/3jWeUXTWlLPF289nj24vvxkMQmJ2MEmqWXtAtLNyc7djHTUs2NbNanrNxG5ppCwtWVEp5ezekMtObXd1LQcJlueXytR2WDmQrqdF2sdvIl38iTB1ZtYB3dSPf1p31jGVFMHzRuKyfQJZo2tMwnWzuKKrqQL6DobcUl7H9Ilqocr99C6sXz24A5sK2GiaTdtVeXUlJWTk1VNdEIOkQnZhKVvJji3jrT6MaoPvkrv6WscvXiTqRfe5vwL95gaeYmhila61m2k0i+SNHOBdPQg1dlTbF1grR1YtcyMQn+Zygs28WJrG/3FJeS4ebDBxZc8jwCK/UIoCYigNCiGAu8wOUbNHtyGZEnulM2ExhcTnr2duLJ2ChpGqO15gZ6J6xy5eJ8TLz5h4uwdxk9e48zJ1zk/foEzx87ymow3t0Zf5sHIOZ6vbWFHeDwlXiHkOHmT5exLjqsv2eJ+iVaOM6C1MXE0rklmpGIrhzZVsNlvBTvDk6iPWceu6DTaEvLoSc2bPbggJ1+KC3ezr/0ME5M3uXDuPhcu3OfsxdtMXbjOidNXGZ14mRMCcm74HOe6D3Nk5x46i0rZvSadulXJ7E1IozUhk9qQeArdgsh39aLAw49C72A2egZR5B1IaWA4Oe5+ZDh7sT06iT0JGTSEr5UbImCr0ulMzKM7tYyejCKG8wr/uLbs+/R5TUXVNBdUsis5l81hMeS7uJFlbUempQ3ZNo7k2LuSbecmR3fynHxmAIslKqWBKynyDKDEJ1TOI9kUEEl5SAyFIuGtK5LZlZjF7vj1tMZnMZRVxuimGo5s3Mxk+WZeLS/53wN+30Z2nYAkmVmSZGlJmqU16Ta25Di7USjRyHPx/vXypcBVIuUWTIn3SjYHRlDuN70iqfCPoTIwnp0RqdREZVAft4E96QXsWZdD59pczm+q5WpnN2/0yHwozcNPzo3y7Rsv8e0/fAQ//yn/+o+f/OGQf+hd+O0vW+9kz3pHRzKcXMhwcZ45Zjm6kmXvxgaR2wZnH4rE9YrcV1LqGUWpdwzbpEjviMiQ3MqkIUqAVheyN6aQjoQKupIr6ZF870nYxGR+Iw+HL/LJC69LCRrm5SFpyl88y/atNazNzsMnOhETyeU/2QSRaunAehtnsXBn1ju7zKxMBxdyHEWm9i4z0ZuOVFVgCttD0qgNSmdPZAH7E6UwJ1UymLKdQ9JuDWQ205qzh5b8ZhqzGyhN3kxKbBGJq0oIDc9Ca8FyWuqaqanai0JFF8VSB5SGjiiWuaM0dkVh4oGqU+Tsws1Ez86JXDsXCpzcJbe82OgRKKYRSpnYeN2KRNpX59KVWEZrYjmd66roW7+ToQ1NdOc1sTe/hZrsvSSvq8AlNhvzkDiWO65Cyz4EhY0vCiNn2agKcSl5XHv896gvFRBtsxkQbd/VKAzdsI4vwmfjTlSWuM/+cNsam0SNfzi7V0axLyKOjqg02iPWM5BQwHBGFYdy9jKU28be3BZKchpJTauRmlmGU1gGRgEJaLiHobDyQmE5HQE32bAdisWWKGzlWs0QP7dIXrz4JjZBSWhY+xNV2YqKkRMxFXuI39JO1JZm8gdOo9C1pqh9cvYBx1KyGUvLYyS9hFEp+oeydrBvfTWbU6pJjq0kILwQC+916DrHoG4XgdIiGKWJD6rGArNEYOaZSpTc0bYKZq6tDwozkZu2NalJxfQ3DtA9eAod1xisIzbQ+tJd+YwXgbk1jN76AX1X3iOubgCV+bYU7z/1J4he+kaqRB5ZEYWEh2bgGpiEvlMYWrYrUVnuL5t1ldxwRsXEBaWpu1x7ytFTNunCQsdQ7MNSmWMagFLTFN/sStZUtLMiMJHLl+7R0HaC/JYx5rmtwjIki+qRq5Jzfqza3E5h12lKes6Rv38SxUJn4qs6Zx9O2yUENStfVE1EXiYip6USDRPnpxIztEFh4YbKQguRnieqlh6oWHujWCAg0ov2nb5B/6WHFPRMSD4Z4rRiPafOv0nxxlKsA9cwfP0LcpqPolAuwS66kN1nbqC0DGVl0V5CyltQLvfCJCITNesQ5tiGz66pTLvVdERmpGTuMQOhXOI6A7rQeQVqy93QMnEnsnAHGrZ+IkmXmRxTai0lt66X8s7jaC+0p/HMFUyk7qUkFjA6fEpuihnKuZZs6jpFYOY2FFrGGPnEEiRjkaZdKKrWfqg5hQich9xMtxkDUjP1nsUJYhpukcNMdFQtJWrLHGf+GDJf5jOFznIsA+LYM3KByNxKKgcnMXBdIWZhi1LgVLSWE7eliYSaFow9V1HSNkGWNNzj7UcpbuiXnLSX6Htj4BXPPCeR97QyLKYd1Gbm8wpzUYZMINPnqjIqqVr6yHv8/me471vEl7qGSZSs8JNuIiCjGOVCExQG1gxPXiW1rAGlQgc950D6z19n6u2P6Tj7GvNsPGciqyrTt1JrMSFZxRx463OKh14kJW8r1WUV2LuGssAxAhVzJ4nwNIzI3NgdNXN/gZteci6Q02kwx8qfuZb+zJHvUzV1/92F/PdV+v/6Wv/kS5LEZqRtbWTHwARKFQ1MpbZdvv0Jp16+g5YU2nmyieoDU4Rv2ERlzzCL3INksyZyl53EKe3QdwvBa3U+OqZ+VG2rwys8CoW6/kzOqpiL1EzdZmQ9R/JYXUxIWyQ4X+SvI7BaMtVrLrFHfbHN7+9Qvk9fGZ1awkL5wUoNQ1I3VdOwf0Q6B212dB2m79Qr9J68zPrqNtTkridU7GKOyFVhaMVcme9UjGVDZvaoWrmgKhtTVSjIlTGrcvN2FBp6qJu6oC1lQtPKDV0rD/TEjPTEbf+oX9x+94ZwmcGeW7jsv31w665urLwiOPvaQ/StfPAOSkRP7D27qIaW7lH0jBzY3jCAvkOA3HEHrEPjUJt2TomuYrnD03q2TPJNNqpq6vxUdgvFJEzNObt3H64yqeuIzI2XerN4iTMLjGzR0Tebnd9G/6adSsuQKCiZr6PH2OhxMrPyqN3eSHvrIEo1Axrbhnnl9gf0jZ7HWKzdwiUIV79oDJe5oieup2ZoK7IS2zeQwmwqZWCZuRxFZiYCYyY9obkDKhaOaBvL9dx5NJZvYmt8EurSZi3Qt0BXy5R5OguYpz0fdXX12bX2XVsqiAoJwsZkOeX5BXx27xGvnL5IuG8kRs8tx8LMmYioZJZIFIzEJc3NPDBYZMsiySOtZdbMXWKN2iJTdJbYME9yYr6xg0jLiYUiRS0jM4Ffiq4cFQo1VgVL27Z1K0qlEi29pcyRzyl09VHVW4DGooWzX5C//ugJbz5/hvhAXxwN9SlPSyU5OBTnpSb4OngKtCMGuksxW2yNg+SdySIbFj9nhtbCJejpL8bV2plgJw+iZRyJcvTC28QGY0ORn6GJyG0ZCxboo6ZQxURbi/1bqjA2NhZXdcfaX9qyeUulAbaUvPRA0yFy9uH2ZsWQFGBHrIsD8S6OhJsvZrWjHQk+Hqy0c8RzmR02i+0xF4NwM7cj3NOHvFWx1Kan0pafQV1CLJl+QTgsWoq5rh6GGhozktPUXIiLnzTJ6vPRVCqozSogUCYJpcZyMo+cY03DIVRMA6VhllrovhaNoPzZh6vw0acsxJTyQAeKApwp9rGj1NeGygAzGsJdqYvypy42kracLLrL8tmVm8LWjLUkR4SyNmIlNgYGaCuUAqRARSAUczVQ0zbAeVUy5ftGWBG8hoLEDELiN0gDIJ2K3Xpcth6l+swPyDxwC+/qcSyzuzBas2v24QbjljKcuJyjiXacSQ/g7zaGc7Mskgfbonh1cxz9uasoi/Ih3M0BKzNj5muqo6KiIuOJhnQlOsyRaKnrLkLdYImYipF0JMYsCMnEUKbsjAr5/n3niUqoQumchlpgNZqhtSij6pgbUY9d7iG8t07hWnoch/yR2Ye7VeDHrfxgLhWGcSw5kOaV7mxytWK1kT7mamozklKRyKhI3ijUdVCIySiM7FA1ELs3EOtfLCOLRQQKxwRUPFPRXFWGzvrd2Mq0nVzciW3oFpFdKaphlaivrEFtxRY0orahXFEpzxeh4lOOIqQaleCdsw93JTuEsShPagNsWWenT9AiDQL0VQlZMpco47mELp6Ll8EiHBaaYr7YEX1pkOdaB6NpuQINC5mOrdeisM9Eab0epYOUFcd0nGQS902vRynASvMEFG4bUboWoHDOlfM8VNzznl57laIIFHj/LaiGbp99uK9O1/HV2Xp+drGaf7tSzy9vdPDNdVlvtPGLK7v56kw1Hx0s4157KQ96Grh7sIlr/Q1cHWrm1f52Trbt49CuRvbvqKWmII/WilJONTaQFp/Ayrh8YhLKiY4rJXHNFhJTK/FNKschthS31WX4iVy91m7HNakas9WVsw/HzRa+vdkMDzrh3R54chDeOwDvy/nHA3z7fhffXquHy03wWhM/Hc3m09YVfN4azs9GCuBaK9/eOszPL7Xw9fMN/MvFvfzkfDNfnungk+PtfHhiP1+cPcBnk0//dndjYoBbp0e5c/Y4NycneOXoEGeHejmyv2P24X5xrVHgWvjmbi+/etjHvz8QmIf9/PK9Xr79YIhvHg3xq1fq+GZyI581hXN3iyfv7wzk0z1RfNSaxI8v1PPV5U6+OF7NP09V87WsLyd38PVkK1+eaOaHU7vktQY+PFrD56f28E/n+vj4zAAPx/byRv92rg3Wc+3wbm4d7/jL/TfDn3P91cL97Z+sf8fjPwAYTSQtqpeGMgAAAABJRU5ErkJggg==";var Wn={token:Pg,x:Jg,y:Yg,shadeImage:Ng,blockImage:zg};var Ra=e=>{e.__sourceCode=`<script setup lang="ts">
import { VerificationImageInfo } from "@icuxika/vue-scaffold-ui";
import dataJson from "@/views/demo/verification/data.json";
import { ref } from "vue";

let defaultObj: VerificationImageInfo = {
	shadeImage: dataJson.shadeImage,
	blockImage: dataJson.blockImage,
	x: dataJson.x,
	y: dataJson.y,
	token: dataJson.token,
};

const visible = ref(true);

const onRefresh = (): VerificationImageInfo => {
	let xmlHttpRequest = new XMLHttpRequest();
	xmlHttpRequest.open(
		"GET",
		"http://localhost:8900/admin/verification/refresh",
		false
	);

	try {
		xmlHttpRequest.send();
		if (xmlHttpRequest.status == 200) {
			let obj = JSON.parse(xmlHttpRequest.response).data;
			return {
				shadeImage: obj.shadeImage,
				blockImage: obj.blockImage,
				x: obj.x,
				y: obj.y,
				token: obj.token,
			};
		} else {
			return defaultObj;
		}
	} catch (error) {
		console.log(error);
		return defaultObj;
	}
};

const onConfirm = (x: number, y: number, token: string): boolean => {
	console.log("x: " + x + ", y: " + y + ", token: " + token);
	let xmlHttpRequest = new XMLHttpRequest();
	xmlHttpRequest.open(
		"GET",
		"http://localhost:8900/admin/verification/check?x=" +
			x +
			"&y=" +
			y +
			"&token=" +
			token,
		false
	);
	try {
		xmlHttpRequest.send();
		if (xmlHttpRequest.status == 200) {
			return JSON.parse(xmlHttpRequest.response).data;
		} else {
			return false;
		}
	} catch (error) {
		console.log(error);
	}
	return false;
};
<\/script>
<template>
	<button type="button" @click="visible = !visible">
		{{ visible ? "\u9690\u85CF\u9A8C\u8BC1\u7801" : "\u663E\u793A\u9A8C\u8BC1\u7801" }}
	</button>
	<div>
		<span
			>\u7B49\u4FEE\u590D\u5728 css \u4E2D\u4F7F\u7528 v-bind \u4F1A\u4E0E Teleport \u4EA7\u751F\u51B2\u7A81\u7684 PR \u5408\u5E76\u540E\u4F7F\u7528
			Teleport (https://github.com/vuejs/core/issues/4605)</span
		>
	</div>
	<v-verification
		v-model:visible="visible"
		:on-refresh="onRefresh"
		:on-confirm="onConfirm"
	>
		<template #cancel>
			<div class="cancel">\u53D6\u6D88</div>
		</template>
		<template #refresh>
			<div class="refresh">\u5237\u65B0</div>
		</template>
		<template #confirm>
			<div class="confirm">\u786E\u8BA4</div>
		</template>
	</v-verification>
</template>

<style lang="scss" scoped>
.cancel {
	background: orange;
	width: auto;
	padding: 4px;
	border-radius: 4px;
}
.refresh {
	background: #42b983;
	width: auto;
	padding: 4px;
	border-radius: 4px;
}
.confirm {
	background: dodgerblue;
	width: auto;
	padding: 4px;
	border-radius: 4px;
}
</style>`,e.__sourceCodeTitle=" \u62D6\u62FD\u586B\u5145\u9A8C\u8BC1\u7801 "};const bo=e=>(dl("data-v-7278477e"),e=e(),pl(),e),Wg=bo(()=>ve("div",null,[ve("span",null,"\u7B49\u4FEE\u590D\u5728 css \u4E2D\u4F7F\u7528 v-bind \u4F1A\u4E0E Teleport \u4EA7\u751F\u51B2\u7A81\u7684 PR \u5408\u5E76\u540E\u4F7F\u7528 Teleport (https://github.com/vuejs/core/issues/4605)")],-1)),Gg=bo(()=>ve("div",{class:"cancel"},"\u53D6\u6D88",-1)),Zg=bo(()=>ve("div",{class:"refresh"},"\u5237\u65B0",-1)),Dg=bo(()=>ve("div",{class:"confirm"},"\u786E\u8BA4",-1)),Hc=vt({setup(e){let t={shadeImage:Wn.shadeImage,blockImage:Wn.blockImage,x:Wn.x,y:Wn.y,token:Wn.token};const n=Be(!0),r=()=>{let s=new XMLHttpRequest;s.open("GET","http://localhost:8900/admin/verification/refresh",!1);try{if(s.send(),s.status==200){let i=JSON.parse(s.response).data;return{shadeImage:i.shadeImage,blockImage:i.blockImage,x:i.x,y:i.y,token:i.token}}else return t}catch(i){return console.log(i),t}},o=(s,i,a)=>{console.log("x: "+s+", y: "+i+", token: "+a);let l=new XMLHttpRequest;l.open("GET","http://localhost:8900/admin/verification/check?x="+s+"&y="+i+"&token="+a,!1);try{return l.send(),l.status==200?JSON.parse(l.response).data:!1}catch(c){console.log(c)}return!1};return(s,i)=>{const a=io("v-verification");return Xe(),At(He,null,[ve("button",{type:"button",onClick:i[0]||(i[0]=l=>n.value=!n.value)},Ho(n.value?"\u9690\u85CF\u9A8C\u8BC1\u7801":"\u663E\u793A\u9A8C\u8BC1\u7801"),1),Wg,D(a,{visible:n.value,"onUpdate:visible":i[1]||(i[1]=l=>n.value=l),"on-refresh":r,"on-confirm":o},{cancel:Mn(()=>[Gg]),refresh:Mn(()=>[Zg]),confirm:Mn(()=>[Dg]),_:1},8,["visible"])],64)}}});typeof Ra=="function"&&Ra(Hc);var Bg=hn(Hc,[["__scopeId","data-v-7278477e"],["__file","/Users/icuxika/WebstormProjects/vue-scaffold-ui/src/views/demo/verification/VerificationDemo1.vue"]]);const Lc=()=>D("div",null,[D(Xs,{component:Bg},null)]);Lc.displayName="VerificationDemo";const Ug=[{path:"/",component:_m},{path:"/docs",component:Mc,children:[{path:"",redirect:"/docs/banner"},{path:"banner",component:Tc},{path:"button",component:jc},{path:"verification",component:Lc}]}],Vg=kh({history:Fp("/vue-scaffold-ui/"),routes:Ug}),Dr=document.createElement("div");Dr.innerHTML='<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><style type="text/css"/><style type="text/css"/><style type="text/css"/></defs><symbol id="light" viewBox="0 0 1024 1024"><path d="M835.84 387.84c0-156.16-125.44-281.6-281.6-281.6s-281.6 125.44-281.6 281.6c0 108.8 62.72 204.8 153.6 250.88v209.92c0 14.08 11.52 25.6 25.6 25.6h204.8c14.08 0 25.6-11.52 25.6-25.6V638.72c92.16-46.08 153.6-140.8 153.6-250.88z" fill="#FAC546" p-id="1432"/><path d="M656.64 887.04h-204.8c-21.76 0-38.4-16.64-38.4-38.4V646.4c-94.72-51.2-153.6-149.76-153.6-258.56 0-162.56 131.84-294.4 294.4-294.4s294.4 131.84 294.4 294.4c0 108.8-58.88 207.36-153.6 258.56v202.24c0 21.76-16.64 38.4-38.4 38.4z m-102.4-768c-148.48 0-268.8 120.32-268.8 268.8 0 101.12 56.32 193.28 147.2 239.36 3.84 2.56 6.4 6.4 6.4 11.52v209.92c0 7.68 5.12 12.8 12.8 12.8h204.8c7.68 0 12.8-5.12 12.8-12.8V638.72c0-5.12 2.56-8.96 6.4-11.52 90.88-46.08 147.2-138.24 147.2-239.36 0-148.48-120.32-268.8-268.8-268.8z" fill="#231C1C" p-id="1433"/><path d="M682.24 848.64c0 14.08-11.52 25.6-25.6 25.6h-204.8c-14.08 0-25.6-11.52-25.6-25.6v-102.4c0-14.08 11.52-25.6 25.6-25.6h204.8c14.08 0 25.6 11.52 25.6 25.6v102.4z" fill="#C89005" p-id="1434"/><path d="M656.64 887.04h-204.8c-21.76 0-38.4-16.64-38.4-38.4v-102.4c0-21.76 16.64-38.4 38.4-38.4h204.8c21.76 0 38.4 16.64 38.4 38.4v102.4c0 21.76-16.64 38.4-38.4 38.4z m-204.8-153.6c-7.68 0-12.8 5.12-12.8 12.8v102.4c0 7.68 5.12 12.8 12.8 12.8h204.8c7.68 0 12.8-5.12 12.8-12.8v-102.4c0-7.68-5.12-12.8-12.8-12.8h-204.8z" fill="#231C1C" p-id="1435"/><path d="M423.36 772.2752l205.2352-64.1664 7.6288 24.4352-205.2224 64.1664zM423.04 849.1264l256.256-76.8 7.3472 24.512-256.256 76.8z" fill="#231C1C" p-id="1436"/><path d="M477.44 874.24h25.6v25.6h-25.6z" fill="#231C1C" p-id="1437"/><path d="M592.64 874.24h25.6v25.6h-25.6z" fill="#231C1C" p-id="1438"/><path d="M554.24 771.84c-35.84 0-64-28.16-64-64v-204.8c0-3.84 0-15.36 10.24-19.2 11.52-3.84 17.92 5.12 25.6 16.64 6.4 8.96 19.2 28.16 28.16 28.16s21.76-19.2 28.16-28.16c7.68-11.52 14.08-20.48 25.6-16.64 10.24 3.84 10.24 15.36 10.24 19.2v204.8c0 35.84-28.16 64-64 64z m-38.4-241.92v177.92c0 21.76 16.64 38.4 38.4 38.4s38.4-16.64 38.4-38.4V529.92c-10.24 12.8-23.04 24.32-38.4 24.32s-28.16-11.52-38.4-24.32z" fill="#231C1C" p-id="1439"/></symbol><symbol id="ts" viewBox="0 0 1024 1024"><path d="M222.208 309.248H28.672v-92.16h494.592v92.16h-194.56v497.664H222.208V309.248zM655.36 655.36s64.512 62.464 147.456 62.464c45.056 0 86.016-23.552 86.016-71.68 0-105.472-278.528-87.04-278.528-268.288 0-98.304 84.992-171.008 197.632-171.008 116.736 0 176.128 63.488 176.128 63.488l-46.08 87.04s-56.32-51.2-130.048-51.2c-50.176 0-89.088 28.672-89.088 70.656 0 104.448 277.504 78.848 277.504 267.264 0 94.208-71.68 173.056-194.56 173.056-131.072 0-203.776-80.896-203.776-80.896L655.36 655.36z" fill="#0090E0" p-id="1298"/></symbol><symbol id="vue" viewBox="0 0 1024 1024"><path d="M76.416 164.309333L512 916.096 947.584 167.936v-3.626667H778.24L514.56 617.258667 251.989333 164.352z" fill="#41B883" p-id="1163"/><path d="M252.032 164.309333l262.485333 452.992L778.24 164.309333h-158.848L515.584 342.613333 412.16 164.266667z" fill="#35495E" p-id="1164"/></symbol></svg>';const vn=Dr.getElementsByTagName("svg")[0];vn&&(vn.style.position="absolute",vn.style.width="0",vn.style.height="0",vn.style.overflow="hidden",vn.setAttribute("aria-hidden","true"));document.addEventListener("DOMContentLoaded",()=>{document.body.firstChild?document.body.insertBefore(Dr,document.body.firstChild):document.body.appendChild(Dr)});var Kg={en:{title:(()=>{const e=t=>{const{normalize:n}=t;return n(["Vue3 UI"])};return e.source="Vue3 UI",e})(),sub_title:(()=>{const e=t=>{const{normalize:n}=t;return n(["Vue3 UI Framework"])};return e.source="Vue3 UI Framework",e})(),doc_link:(()=>{const e=t=>{const{normalize:n}=t;return n(["Documentation"])};return e.source="Documentation",e})()},zh:{title:(()=>{const e=t=>{const{normalize:n}=t;return n(["Vue3 UI"])};return e.source="Vue3 UI",e})(),sub_title:(()=>{const e=t=>{const{normalize:n}=t;return n(["Vue3 UI \u6846\u67B6"])};return e.source="Vue3 UI \u6846\u67B6",e})(),doc_link:(()=>{const e=t=>{const{normalize:n}=t;return n(["\u6587\u6863"])};return e.source="\u6587\u6863",e})()}};const qg=Bm({legacy:!1,locale:"zh",messages:Kg}),Xg=Rg({components:[ug,Oc,Sg]}),vo=qd(Fh);vo.use(Vg);vo.use(qg);vo.use(Xg);vo.mount("#app");
